// C:\Users\Guilherme\bot-whatsapp\controllers\rpgHandler.js

const fichaActions = require('../RPG/fichaHandler');

// Fun√ß√£o helper para processar a rolagem de dados
function rolarDados(expressao) {
    const match = expressao.toLowerCase().match(/(\d+)d(\d+)\s*([+-]\s*\d+)?/);
    if (!match) return "Formato inv√°lido. üòï\nUse `NdX` ou `NdX+Y` (ex: `1d6`, `2d20+5`).";

    const numeroDeDados = parseInt(match[1]);
    const ladosDoDado = parseInt(match[2]);
    const modificador = match[3] ? parseInt(match[3].replace(/\s/g, '')) : 0;

    if (numeroDeDados <= 0 || ladosDoDado <= 0) return "‚ùå O n√∫mero de dados e de lados deve ser maior que zero.";
    if (numeroDeDados > 10000) return `‚ùå Limite de 10.000 dados por rolagem excedido.`;
    if (ladosDoDado > 100000000000) return `‚ùå O limite de lados do dado √© de 100.000.000.000`;
    if (Math.abs(modificador) > 1000000) return `‚ùå O modificador n√£o pode ser maior que 1.000.000.`; // <-- VALIDA√á√ÉO ADICIONADA AQUI

    const resultados = [];
    let soma = 0;
    for (let i = 0; i < numeroDeDados; i++) {
        const resultado = Math.floor(Math.random() * ladosDoDado) + 1;
        resultados.push(resultado);
        soma += resultado;
    }
    const somaFinal = soma + modificador;

    const textoDados = numeroDeDados === 1 ? 'Dado' : 'Dados';
    const textoLados = ladosDoDado === 1 ? 'Lado' : 'Lados';
    let resposta = `Rolando *${numeroDeDados}* ${textoDados} de *${ladosDoDado}* ${textoLados}...\n\n`;
    let detalhesSoma = `*Soma Total: ${somaFinal}*`;

    // A l√≥gica abaixo apenas oculta os detalhes do modificador na resposta se ele for muito grande,
    // mas a valida√ß√£o acima impede que o c√°lculo sequer aconte√ßa.
    if (modificador !== 0 && Math.abs(modificador) < 1000000) {
        const sinalModificador = modificador > 0 ? `+ ${modificador}` : `- ${Math.abs(modificador)}`;
        detalhesSoma = `*Soma Total: ${soma} (${sinalModificador}) = ${somaFinal}*`;
    }

    if (numeroDeDados <= 50) {
        resposta += `Resultados: [${resultados.join(', ')}] üé≤\n\n${detalhesSoma}`;
    } else {
        resposta += `${detalhesSoma} üé≤\n\n(Resultados individuais omitidos para mais de 50 dados)`;
    }
    return resposta;
}

// Handler principal para todos os comandos de RPG
async function handleRpgCommand(message) {
    const commandArgs = message.body.split(' ');
    const command = commandArgs[0].toLowerCase();
    const bodyLower = message.body.toLowerCase();

    // --- ROTEAMENTO ATUALIZADO ---
    if (bodyLower.startsWith('!add=')) {
        return fichaActions.handleAddInventario(message);
    }
    if (bodyLower.startsWith('!rmv=')) {
        return fichaActions.handleRmvInventario(message);
    }
    
    const matchDadoRapido = command.match(/^!(\d+d\d+.*)$/i);
    if (command === '!dados' || matchDadoRapido) {
        const expressao = command === '!dados' ? commandArgs[1] : matchDadoRapido[1];
        if (!expressao) {
            return message.reply("Uso: `!dados <formato>` (ex: `!dados 2d20`)");
        }
        const resultado = rolarDados(expressao);
        await message.reply(resultado);
        return;
    }

    switch(command) {
        case '!rpg':
            const rpgHelpMessage = 
                `*Bem-vindo ao M√≥dulo de RPG do BotZap!* ‚öîÔ∏è\n\n` +
                `Este √© seu assistente para gerenciar fichas e rolar dados.\n\n` +
                `*--- Comandos de Ficha ---*\n` +
                `‚Ä¢ \`!criar-ficha\`: Cria sua ficha de personagem.\n` +
                `‚Ä¢ \`!ficha\`: Mostra sua ficha atual.\n` +
                `‚Ä¢ \`!set <atr>=<val>\`: Modifica um atributo (Ex: \`!set hp=25\`).\n` +
                `‚Ä¢ \`!remover <item>\`: Remove um item do seu invent√°rio.\n` + // <-- Adicionado para clareza
                `‚Ä¢ \`!apagar-ficha\`: Apaga permanentemente sua ficha.\n\n` +
                `*--- Comandos de Dados ---*\n` +
                `‚Ä¢ \`!dados <N>d<L>\`: Rola N dados de L lados (Ex: \`!dados 2d6\`).\n` +
                `‚Ä¢ \`!<N>d<L>\`: Atalho para rolar dados (Ex: \`!1d20\`).\n` +
                `‚Ä¢ _Modificadores_: Voc√™ pode adicionar + ou - (Ex: \`!2d8+4\`).\n\n` +
                `‚Ä¢ Ajuda: \`!rpg-ajuda\` ou \`!rpg-help\`\n\n` +
                `Bons jogos e que seus dados rolem sempre alto! üé≤`;
            await message.reply(rpgHelpMessage);
            break;
        
        case '!criar-ficha':
            await fichaActions.handleCriarFicha(message);
            break;

        case '!ficha':
            await fichaActions.handleVerFicha(message);
            break;
            
        case '!set':
            await fichaActions.handleSetAtributo(message);
            break;
            
        case '!remover':
            await fichaActions.handleRemoverItem(message);
            break;

        case '!add':
            await fichaActions.handleAddItem(message);
            break;

        case '!rmv':
            await fichaActions.handleRemoveItem(message);
            break;
            
        case '!apagar-ficha':
            await fichaActions.handleApagarFicha(message);
            break;

        case '!rpg-ajuda':
        case '!rpg-help':
            const ajudaDetalhada = 
`*Guia de Comandos - M√≥dulo RPG* üìñ

*--- Ficha de Personagem ---*
‚Ä¢ \`!criar-ficha <nome>\`
_Cria um novo personagem com o nome especificado._

‚Ä¢ \`!ficha\`
_Exibe sua ficha completa._

‚Ä¢ \`!apagar-ficha\`
_Apaga PERMANENTEMENTE sua ficha._

‚Ä¢ \`!set <atributo>=<valor>\`
_Modifica atributos como classe, n√≠vel, etc._
  *Ex: \`!set classe=Guerreiro\`*

*--- Invent√°rio ---*
‚Ä¢ \`!add <item1>, <item2>\`
_Adiciona um ou mais itens ao seu invent√°rio._
  *Ex: \`!add Tocha, Corda\`*

‚Ä¢ \`!rmv <nome do item>\`
_Remove um item do seu invent√°rio._
  *Ex: \`!rmv Tocha\`*

*--- Rolagem de Dados ---*
‚Ä¢ \`!dados <N>d<L>+/-<M>\` ou \`!<N>d<L>+/-<M>\`
_Rola dados com modificadores._
  *Ex: \`!1d20+5\`*`;
            
            await message.reply(ajudaDetalhada);
            break;
    }
}

module.exports = { handleRpgCommand };// controllers/musicaHandler.js

const playdl = require('play-dl');

async function handleMusica(message, client, query) {
    if (!query) {
        return await message.reply('‚ùå Para buscar uma m√∫sica, use: `!musica <nome da m√∫sica>`');
    }

    await message.reply(`üéµ Procurando o link para: *${query}*...`);

    try {
        const videos = await playdl.search(query, { limit: 1, source: { youtube: "video" } });
        if (!videos || videos.length === 0) {
            return await message.reply('‚ùå Nenhum resultado encontrado no YouTube.');
        }

        const video = videos[0];

        if (!video || !video.id) {
            return await message.reply('‚ùå Ocorreu um erro ao obter os detalhes do v√≠deo.');
        }

        // --- CORRE√á√ÉO FINAL AQUI ---
        // Adicionado o '$' para a interpola√ß√£o da string funcionar
        const videoUrl = `https://www.youtube.com/watch?v=$${video.id}`;
        
        const replyMessage = `‚úÖ Aqui est√° seu link:\n\n*${video.title}*\n${videoUrl}`;
        
        await message.reply(replyMessage);

    } catch (err) {
        console.error('Erro ao buscar link da m√∫sica:', err);
        await message.reply('‚ùå Desculpe, ocorreu um erro inesperado ao tentar buscar o link.');
    }
}

module.exports = handleMusica;// C:\Users\Guilherme\bot-whatsapp\controllers\commandHandler.js

const fs = require('fs');
const path = require('path');
const { parse } = require('csv-parse');
const logger = require('../utils/logger');
const config = require('../config.json');
const sessionManager = require('../sessions/sessionManager');
const lobby = require('../games/lobby');
const pokerActions = require('../games/Poker/playerActions');
const trucoActions = require('../games/Truco/playerActions');
const forcaActions = require('../games/Forca/playerActions');
const velhaActions = require('../games/Velha/playerActions');
const unoActions = require('../games/Uno/playerActions');
const xadrezActions = require('../games/Xadrez/playerActions');
const rpgHandler = require('./rpgHandler');
const handleMusica = require('./musicaHandler');
const JOGOS_VALIDOS = ['poker', 'truco', 'forca', 'velha', 'uno', 'xadrez'];

const resultadosPassados = new Set();
let megaCarregada = false;

const csvFilePath = path.join(__dirname, '..', 'assets', 'mega_sena.csv');

fs.createReadStream(csvFilePath)
    .pipe(parse({ delimiter: ';', from_line: 2 }))
    .on('data', function (row) {
        try {
            const numeros = row.slice(2, 8).map(Number).sort((a, b) => a - b);
            if (numeros.length === 6 && !numeros.some(isNaN)) {
                resultadosPassados.add(numeros.join(','));
            }
        } catch (e) {
            // Ignora linhas com erro
        }
    })
    .on('end', function () {
        megaCarregada = true;
        console.log(`[Mega-Sena] Carregados ${resultadosPassados.size} resultados hist√≥ricos.`); // <<< USANDO O NOME CORRETO
    })
    .on('error', function (error) {
        console.error('[Mega-Sena] Erro ao ler o arquivo CSV:', error.message);
    });

function gerarJogoInedito() {
    if (!megaCarregada) {
        return null;
    }

    while (true) {
        const numeros = new Set();
        while (numeros.size < 6) {
            numeros.add(Math.floor(Math.random() * 60) + 1);
        }
        
        const numerosOrdenados = Array.from(numeros).sort((a, b) => a - b);
        const jogoStr = numerosOrdenados.join(',');

        if (!resultadosPassados.has(jogoStr)) {
            return numerosOrdenados;
        }
    }
}

async function handleCommand(message, client) {
¬† ¬† try {
¬† ¬† ¬† ¬† const { from, body } = message;
¬† ¬† ¬† ¬† logger.log(message, `Comando recebido: ${body}`);
        console.log(`[ID Hunter] Mensagem recebida do ID: ${from}`);
¬† ¬† ¬† ¬† const isGroup = from.endsWith('@g.us');

        // --- NOVO BLOCO DE FILTRAGEM DE GRUPO ---
        if (config.enableGroupFilter && isGroup && !config.allowedGroupIds.includes(from)) {
¬† ¬† ¬† ¬† ¬† ¬† // O logger vai buscar o nome do contato e do chat automaticamente!
¬† ¬† ¬† ¬† ¬† ¬† logger.log(message, 'Comando ignorado: grupo n√£o est√° na whitelist.');
¬† ¬† ¬† ¬† ¬† ¬† return;
¬† ¬† ¬† ¬† }

        // --- BLOCO DE DEBUG PARA O JOGO DA FORCA NO PV ---
        

        const commandArgs = body.split(' ');
        const command = commandArgs[0].toLowerCase();

        // COMANDOS GLOBAIS
        if (command === '!botzap') {
            const botZapMessage = 
                                  `*Como come√ßar um jogo?*\n` +
                                  `Digite \`!jogo <nome do jogo>\`\n\n` +
                                  `*Jogos Dispon√≠veis:*\n` +
                                  `‚Ä¢ Poker\n` +
                                  `‚Ä¢ Truco\n` +
                                  `‚Ä¢ Forca\n` +
                                  `‚Ä¢ Velha\n` +
                                  `‚Ä¢ Uno\n` +
                                  `‚Ä¢ Xadrez\n\n` +
                                  `---\n\n` +
                                  `*Outros comandos:*\n` +
                                  `‚Ä¢ \`!figurinha\` - Responda a uma imagem para criar um sticker.\n` +
                                  `‚Ä¢ \`!mega\` - Gera um n√∫mero da megasena.\n` +
                                  `‚Ä¢ \`!moeda\` - Joga um cara ou coroa.\n` +
                                  `‚Ä¢ \`!bicho\` - Te da o resultado do jogo do bicho.\n` +
                                  `‚Ä¢ \`!responda <pergunta>\` - Responde suas perguntas com 100% de certeza.\n` +
                                  `‚Ä¢ \`!musica <nome>\` - Envia o link de uma m√∫sica do YouTube.\n` +
                                  `‚Ä¢ \`!sair\` - Encerra um jogo ou lobby em andamento.\n\n` +
                                  `Vamos come√ßar? üéâ`;
            await message.reply(botZapMessage);
            return;
        }

        if (command === '!id') {
¬† ¬† ¬† ¬† ¬† ¬† await message.reply(`O ID deste chat √©:\n\`${from}\``);
¬† ¬† ¬† ¬† ¬† ¬† return;
¬† ¬† ¬† ¬† }

¬† ¬† ¬† ¬† if (command === '!debug') {
¬† ¬† ¬† ¬† ¬† ¬† console.log('===== OBJETO MESSAGE COMPLETO =====');
¬† ¬† ¬† ¬† ¬† ¬† console.log(message);
¬† ¬† ¬† ¬† ¬† ¬† console.log('=================================');
¬† ¬† ¬† ¬† ¬† ¬† await message.reply('O objeto da mensagem foi impresso no console do bot. üòâ');
¬† ¬† ¬† ¬† ¬† ¬† return;
¬† ¬† ¬† ¬† }

        const rpgCommandsList = ['!rpg', '!dados', '!criar-ficha', '!ficha', '!set', '!apagar-ficha', '!remover', '!rpg-ajuda', '!rpg-help', '!add', '!rmv'];
        const isDiceShorthand = command.match(/^!(\d+d\d+.*)$/i);

        // --- Roteamento para o M√≥dulo de RPG ---
        if (rpgCommandsList.includes(command) || isDiceShorthand) {
            await rpgHandler.handleRpgCommand(message);
            return;
        }

        if (command === '!mega') {
            const jogo = gerarJogoInedito();
            if (jogo) {
                const resultado = jogo.map(n => n.toString().padStart(2, '0')).join(' - ');
                await message.reply(`*Combina√ß√£o In√©dita Encontrada!*\n\n‚ú® *${resultado}* ‚ú®\n\nEssa nunca saiu! Boa sorte!`);
            } else {
                await message.reply('Desculpe, ainda estou processando o hist√≥rico de jogos. Tente novamente em um instante.');
            }
            return;
        }        

        if (command === '!moeda') {
            await message.reply('Jogando a moeda... ü™ô');
            const resultado = Math.random() < 0.5 ? 'Cara' : 'Coroa';
            const emoji = resultado === 'Cara' ? 'üóø' : 'üëë';
            await message.reply(`Deu *${resultado}*! ${emoji}`);
            return;
        }        

        if (command === '!bicho') {
            const animais = ['Avestruz  G1', '√Åguia G2', 'Burro G3', 'Borboleta G4', 'Cachorro G5', 'Cabra G6', 'Carneiro G7', 'Camelo G8', 'Cobra G9', 'Coelho G10', 'Cavalo G11', 'Elefante G12', 'Galo G13', 'Gato G14', 'Jacar√© G15', 'Le√£o G16', 'Macaco G17', 'Porco G18', 'Pav√£o G19', 'Peru G20', 'Touro G21', 'Tigre G22', 'Urso G23', 'Veado G24', 'Vaca G25'];
            const sorteado = animais[Math.floor(Math.random() * animais.length)];
            await message.reply(`O resultado de hoje √©: *${sorteado}*`);
            return;
        }

        if (command === '!responda') {
            const respostas = ["Sim.", "N√£o.", "Com certeza!", "Definitivamente n√£o.", "Talvez.", "Os astros indicam que sim.", "Concentre-se e pergunte de novo.", "N√£o conte com isso."];
            const respostaMistica = respostas[Math.floor(Math.random() * respostas.length)];
            await message.reply(`O Botzap responde:\n\n*${respostaMistica}*`);
            return;
        }        

        if (command === '!figurinha' || command === '!sticker') {
            if (message.hasQuotedMsg) {
                const quotedMsg = await message.getQuotedMessage();
                if (quotedMsg.hasMedia) {
                    await message.reply("Criando sua figurinha, um momento... üé®");
                    try {
                        const media = await quotedMsg.downloadMedia();
                        await client.sendMessage(from, media, { sendMediaAsSticker: true, stickerAuthor: "BotZap ü§ñ", stickerName: "Criado pelo Bot" });
                    } catch (error) {
                        await message.reply("‚ùå Ih, deu erro! Tente com outra imagem ou v√≠deo curto.");
                    }
                } else {
                    await message.reply("Voc√™ precisa responder a uma imagem ou v√≠deo para eu transformar em figurinha!");
                }
            } else {
                await message.reply("Para criar uma figurinha, responda a uma imagem com o comando `!figurinha`.");
            }
            return;
        }

        if (command === '!musica') {
            const query = commandArgs.slice(1).join(' '); 
            return await handleMusica(message, client, query);
        }
        
        // =======================================================
        // L√ìGICA DE SESS√ÉO DE JOGO
        // =======================================================

        let session = isGroup ? sessionManager.getSession(from) : sessionManager.getSession(sessionManager.getGroupFromPlayer(from));
        
        if (command === '!sair') {
            if (session) {
                const gameName = session.game.charAt(0).toUpperCase() + session.game.slice(1);
                if (sessionManager.endSession(session.groupId)) {
                    await message.reply(`‚úÖ O jogo de *${gameName}* foi encerrado.`);
                }
            } else {
              await message.reply('N√£o h√° nenhum jogo ou lobby em andamento para sair.');
          }
          return;
        }
        
        if (command === '!jogo') {
            if (session) {
            return message.reply(`‚ùå Um jogo de *${session.game}* j√° est√° em andamento. Para encerrar, use \`!sair\`.`);
            }

            const gameName = commandArgs[1]?.toLowerCase();
            if (!gameName) {
                return message.reply(`ü§î Qual jogo voc√™ quer iniciar? Use: \`!jogo <nome do jogo>\`\n\n*Jogos dispon√≠veis:*\n${JOGOS_VALIDOS.join(', ')}`);
            }

            if (!JOGOS_VALIDOS.includes(gameName)) {
                return message.reply(`‚ùå Jogo inv√°lido! Os jogos dispon√≠veis s√£o: *${JOGOS_VALIDOS.join(', ')}*.`);
            }

            const groupId = message.from;
            const creatorId = message.author || message.from;
            const novaSessao = sessionManager.createSession(groupId, gameName, creatorId);

            if (novaSessao) {
                await lobby.criarLobby(novaSessao, client);
            } else {
                await message.reply('‚ùå Ocorreu um erro ao criar a sess√£o do jogo.');
            }
            return;
        }
        
        if (!session) {
            if (command.startsWith('!')) {
                 await message.reply('Digite: `!botzap` para mais informa√ß√µes');
            }
            return;
        }

        if (session.status === 'lobby') {
            await lobby.handleLobbyCommand(message, session, client);
            return;
        }

        if (session.status === 'em_jogo') {
            switch (session.game) {
                case 'poker':
                    await pokerActions.handleGameCommand(message, session, client);
                    break;
                case 'truco':
                    await trucoActions.handleGameCommand(message, session, client);
                    break;
                case 'forca':
                    await forcaActions.handleGameCommand(message, session, client);
                    break;
                case 'velha':
                    await velhaActions.handleGameCommand(message, session, client);
                    break;
                case 'uno':
                    await unoActions.handleGameCommand(message, session, client);
                    break;
                case 'xadrez':
                    await xadrezActions.handleGameCommand(message, session, client);
                    break;
            }
            return;
        }

    } catch (error) {
        console.error('ERRO FATAL AO PROCESSAR COMANDO:', error);
        await message.reply('‚ùå Ocorreu um erro inesperado ao processar seu comando.');
    }
}

module.exports = handleCommand;const mongoose = require('mongoose');

// Este √© o "molde" da sua ficha. Ele define os campos e seus tipos.
const fichaSchema = new mongoose.Schema({
    // Usaremos o ID do jogador do WhatsApp como identificador √∫nico.
    playerId: {
        type: String,
        required: true,
        unique: true
    },
    nome: { type: String, default: "Sem Nome" },
    classe: { type: String, default: "N/A" },
    nivel: { type: Number, default: 1 },
    hp_max: { type: Number, default: 10 },
    hp_atual: { type: Number, default: 10 },
    ca: { type: Number, default: 10 },
    forca: { type: Number, default: 10 },
    destreza: { type: Number, default: 10 },
    constituicao: { type: Number, default: 10 },
    inteligencia: { type: Number, default: 10 },
    sabedoria: { type: Number, default: 10 },
    carisma: { type: Number, default: 10 },
    // O invent√°rio ser√° uma lista de strings.
    inventario: [String]
});

// Criamos e exportamos o "Model". √â atrav√©s dele que faremos todas as opera√ß√µes
// de criar, ler, atualizar e apagar fichas no banco de dados.
module.exports = mongoose.model('Ficha', fichaSchema);node_modules/
zConcatenador
.env

# managed
**.data.json
**.node-persist**
**_IGNORE_**
# end managed// Importamos o nosso "molde" de Ficha que acabamos de criar.
const Ficha = require('../models/Ficha');

// O objeto de limites continua √∫til para valida√ß√£o.
const ATRIBUTO_LIMITES = {
    nome: { type: 'string', maxLength: 50 },
    classe: { type: 'string', maxLength: 50 },
    nivel: { type: 'number', min: 1, max: 100 },
    hp_max: { type: 'number', min: 1, max: 9999 },
    hp_atual: { type: 'number', min: 0, max: 9999 },
    ca: { type: 'number', min: 1, max: 100 },
    forca: { type: 'number', min: 1, max: 100 },
    destreza: { type: 'number', min: 1, max: 100 },
    constituicao: { type: 'number', min: 1, max: 100 },
    inteligencia: { type: 'number', min: 1, max: 100 },
    sabedoria: { type: 'number', min: 1, max: 100 },
    carisma: { type: 'number', min: 1, max: 100 },
};


// --- FUN√á√ïES DE COMANDO REESCRITAS PARA MONGODB ---

// Comando !criar-ficha
async function handleCriarFicha(message) {
    const playerId = message.author || message.from;
    
    const fichaExistente = await Ficha.findOne({ playerId: playerId });
    if (fichaExistente) {
        return message.reply('‚ùå Voc√™ j√° possui uma ficha. Use `!apagar-ficha` para recome√ßar.');
    }

    // Pega o nome do personagem da mensagem
    const nomePersonagem = message.body.split(' ').slice(1).join(' ').trim();

    // Valida se um nome foi fornecido
    if (!nomePersonagem) {
        return message.reply('‚ùå Formato inv√°lido! Use: `!criar-ficha <nome do personagem>`');
    }

    // Valida o tamanho do nome
    if (nomePersonagem.length > ATRIBUTO_LIMITES.nome.maxLength) {
        return message.reply(`‚ùå O nome do personagem √© muito longo (m√°ximo de ${ATRIBUTO_LIMITES.nome.maxLength} caracteres).`);
    }

    // Cria a ficha j√° com o nome fornecido
    await Ficha.create({ 
        playerId: playerId,
        nome: nomePersonagem 
    });
    
    await message.reply(`‚úÖ Ficha para *${nomePersonagem}* criada com sucesso! Use \`!ficha\` para v√™-la.`);
}

// Comando !ficha
async function handleVerFicha(message) {
    const playerId = message.author || message.from;
    
    // ANTES: Lia o arquivo .json
    // AGORA: Procura pela ficha no banco de dados
    const ficha = await Ficha.findOne({ playerId: playerId });

    if (!ficha) {
        return message.reply('Voc√™ ainda n√£o tem uma ficha. Crie uma com `!criar-ficha`.');
    }

    // A l√≥gica de formatar a resposta continua a mesma!
    let resposta = `*--- ${ficha.nome} ---*\n`;
    resposta += `*Classe:* ${ficha.classe}\n`;
    resposta += `*N√≠vel:* ${ficha.nivel}\n`;
    resposta += `*HP:* ${ficha.hp_atual} / ${ficha.hp_max} ‚ù§Ô∏è\n`;
    resposta += `*CA:* ${ficha.ca} üõ°Ô∏è\n\n`;
    resposta += `*Atributos:*\n`;
    resposta += `For: ${ficha.forca} | Des: ${ficha.destreza} | Con: ${ficha.constituicao}\n`;
    resposta += `Int: ${ficha.inteligencia} | Sab: ${ficha.sabedoria} | Car: ${ficha.carisma}\n\n`;
    resposta += `*Invent√°rio:*\n`;
    resposta += ficha.inventario && ficha.inventario.length > 0 ? `‚Ä¢ ${ficha.inventario.join('\n‚Ä¢ ')}` : "Vazio";

    await message.reply(resposta);
}

// Comando !set
async function handleSetAtributo(message) {
    const playerId = message.author || message.from;
    const ficha = await Ficha.findOne({ playerId: playerId });

    if (!ficha) {
        return message.reply('Voc√™ ainda n√£o tem uma ficha. Crie uma com `!criar-ficha`.');
    }

    const args = message.body.split(' ').slice(1).join(' ');
    const [chave, ...valorArray] = args.split('=');
    if (!chave || !valorArray.length) {
        return message.reply('Formato inv√°lido. Use `!set <atributo>=<valor>`.');
    }
    const valor = valorArray.join('=').trim();
    let chaveNormalizada = chave.trim().toLowerCase();
    
    if (chaveNormalizada === 'hp') {
        chaveNormalizada = 'hp_atual';
    }

    const limite = ATRIBUTO_LIMITES[chaveNormalizada];
    if (!limite) {
        return message.reply(`‚ùå Atributo desconhecido: *${chaveNormalizada}*.`);
    }

    // L√≥gica de valida√ß√£o continua a mesma...
    if (limite.type === 'string') {
        if (valor.length > limite.maxLength) {
            return message.reply(`‚ùå O valor para *${chaveNormalizada}* √© muito longo (m√°x: ${limite.maxLength} caracteres).`);
        }
        ficha[chaveNormalizada] = valor;
    } else if (limite.type === 'number') {
        const numero = Number(valor);
        if (isNaN(numero)) {
            return message.reply(`‚ùå O valor para *${chaveNormalizada}* deve ser um n√∫mero.`);
        }
        const maxVal = (chaveNormalizada === 'hp_atual') ? ficha.hp_max : limite.max;
        const minVal = limite.min;
        if (numero < minVal || numero > maxVal) {
            return message.reply(`‚ùå O valor para *${chaveNormalizada}* deve estar entre ${minVal} e ${maxVal}.`);
        }
        ficha[chaveNormalizada] = Math.floor(numero);
    }
    
    // ANTES: fs.writeFileSync(...)
    // AGORA: Salva as altera√ß√µes do documento no banco de dados
    await ficha.save();
    await message.reply(`‚úÖ Atributo *${chaveNormalizada}* atualizado para *${valor}*!`);
}

// Comando !add
async function handleAddItem(message) {
    const playerId = message.author || message.from;
    const ficha = await Ficha.findOne({ playerId: playerId });

    if (!ficha) {
        return message.reply('‚ùå Voc√™ n√£o tem uma ficha para adicionar itens.');
    }

    const valor = message.body.split(' ').slice(1).join(' ').trim();
    if (!valor) {
        return message.reply('Formato inv√°lido. Use `!add item1, item2, ...`');
    }

    const novosItens = valor.split(',').map(item => item.trim().substring(0, 70)).filter(item => item);
    if (ficha.inventario.length + novosItens.length > 20) {
        return message.reply(`‚ùå Seu invent√°rio excederia o limite de 20 itens.`);
    }

    // ANTES: ficha.inventario.push(...); salvarFicha(...)
    // AGORA: Usa o comando $push do MongoDB para adicionar itens ao array
    await Ficha.updateOne({ playerId: playerId }, { $push: { inventario: { $each: novosItens } } });

    await message.reply(`‚úÖ Itens adicionados: *${novosItens.join(', ')}*`);
}

// Comando !rmv
async function handleRemoveItem(message) {
    const playerId = message.author || message.from;
    const ficha = await Ficha.findOne({ playerId: playerId });

    if (!ficha || !ficha.inventario || ficha.inventario.length === 0) {
        return message.reply('‚ùå Seu invent√°rio est√° vazio ou voc√™ n√£o tem uma ficha.');
    }

    const itemParaRemover = message.body.split(' ').slice(1).join(' ').trim();
    if (!itemParaRemover) {
        return message.reply('Formato inv√°lido. Use `!rmv <nome do item>`.');
    }
    
    const itemOriginal = ficha.inventario.find(item => item.toLowerCase() === itemParaRemover.toLowerCase());

    if (!itemOriginal) {
        return message.reply(`‚ùå Item "*${itemParaRemover}*" n√£o encontrado no seu invent√°rio.`);
    }

    // ANTES: ficha.inventario.splice(...); salvarFicha(...)
    // AGORA: Usa o comando $pull do MongoDB para remover um item do array
    await Ficha.updateOne({ playerId: playerId }, { $pull: { inventario: itemOriginal } });

    await message.reply(`‚úÖ Item "*${itemOriginal}*" removido do seu invent√°rio.`);
}

// Comando !apagar-ficha
async function handleApagarFicha(message) {
    const playerId = message.author || message.from;
    
    // ANTES: fs.unlinkSync(...)
    // AGORA: Deleta o documento correspondente ao playerId
    const resultado = await Ficha.deleteOne({ playerId: playerId });

    if (resultado.deletedCount === 0) {
        return message.reply('‚ùå Voc√™ n√£o possui uma ficha para apagar.');
    }

    await message.reply('‚úÖ Sua ficha foi apagada com sucesso. Voc√™ pode criar uma nova com `!criar-ficha`.');
}

// Exporta as fun√ß√µes para serem usadas no commandHandler
module.exports = {
    handleCriarFicha,
    handleVerFicha,
    handleSetAtributo,
    handleAddItem,
    handleRemoveItem,
    handleApagarFicha
};// client.js

// --- BLOCO DE IMPORTA√á√ïES ---
const { Client, LocalAuth } = require('whatsapp-web.js');
const path = require('path');

// --- BLOCO DE CONFIGURA√á√ÉO ---
const dataPath = path.join(__dirname, '.wwebjs_auth');
console.log('Caminho da sess√£o configurado para:', dataPath); // <<< A LINHA DE DEPURA√á√ÉO

const client = new Client({
    authStrategy: new LocalAuth({
        dataPath: dataPath
    }),
    puppeteer: {
        headless: true,
        args: [
            '--no-sandbox',
            '--disable-setuid-sandbox',
            '--disable-dev-shm-usage',
            '--disable-accelerated-2d-canvas',
            '--no-first-run',
            '--no-zygote',
            '--single-process',
            '--disable-gpu'
        ],
    }
});

// --- BLOCO DE INICIALIZA√á√ÉO E EXPORTA√á√ÉO ---
client.initialize();

module.exports = { client };{
  "enableGroupFilter": true,
  "allowedGroupIds": [
    "120363335667865869@g.us",
    "120363418811209728@g.us",
    "120363421115205962@g.us",
    "5511963582414-1585413384@g.us",
    "120363401314456521@g.us",
    "120363402853535952@g.us",
    "123456789@g.us",
    "120363401314456521@g.us",
    "120363419895687875@g.us" ]
}/**
 * Fun√ß√£o de log inteligente que adiciona prefixo com nome do grupo e do autor.
 * @param {object | null} message - O objeto da mensagem da whatsapp-web.js.
 * @param  {...any} logTexts - Os textos ou objetos a serem logados, como em um console.log normal.
 */
async function log(message, ...logTexts) {
    let prefix = `[${new Date().toLocaleTimeString('pt-BR')}]`; // Adiciona a hora ao log

    if (message && typeof message.getChat === 'function') {
        try {
            const chat = await message.getChat();
            if (chat.isGroup) {
                const contact = await message.getContact();
                prefix += ` [${chat.name}] [${contact.pushname}]`;
            } else {
                // Mensagem privada
                const contact = await message.getContact();
                prefix += ` [PV - ${contact.pushname}]`;
            }
        } catch (e) {
            // Se houver erro ao buscar dados, n√£o quebra o log
            prefix += ' [Contexto indispon√≠vel]';
        }
    }

    console.log(prefix, ...logTexts);
}

module.exports = { log };// test.js - Teste de L√≥gica para o Jogo de UNO (2 Jogadores)

const handleCommand = require('./controllers/commandHandler.js');
const sessionManager = require('./sessions/sessionManager.js');
const unoBot = require('./games/Uno/botPlayer');

// --- SIMULA√á√ÉO DO AMBIENTE DO BOT ---
const mockClient = {
    sendMessage: async (chatId, content, options = {}) => {
        const target = chatId.split('@')[0];
        console.log(`\n+++++++++++++ MENSAGEM DO BOT PARA ${target} +++++++++++++`);
        console.log(String(content).replace(/\n\n/g, '\n')); // Compacta linhas em branco
        console.log(`++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n`);
    }
};

function createMockMessage(body, author, fromGroup) {
    return {
        body,
        author,
        from: fromGroup,
        reply: async (text) => await mockClient.sendMessage(fromGroup, text),
        getChat: async () => ({ isGroup: fromGroup.endsWith('@g.us'), name: 'Grupo de Teste' }),
        getContact: async () => ({ pushname: author.split('@')[0] })
    };
}

const GROUP_ID = '123456789@g.us';
const HUMAN_ID = `player1@c.us`;

const sendCommand = async (command, userId) => {
    const message = createMockMessage(command, userId, GROUP_ID);
    console.log(`\n>>> [TESTE] Usu√°rio ${userId.split('@')[0]} enviou: "${command}"`);
    await handleCommand(message, mockClient);
    await new Promise(res => setTimeout(res, 1500)); // Pausa para processamento
};


// --- CEN√ÅRIOS DE TESTE ---

async function testeDeAcumulo() {
    console.log('\n\n--- CEN√ÅRIO 1: Testando Ac√∫mulo de +2 ---');
    await sendCommand('!jogo uno', HUMAN_ID);
    await sendCommand('!entrar Humano', HUMAN_ID);
    await sendCommand('!iniciar', HUMAN_ID);

    console.log("\n>>> [A√á√ÉO] O Humano vai jogar a carta 1. Assumimos que √© um +2.");
    console.log(">>> [VERIFICA√á√ÉO] O log deve mostrar que o Bot comprou 2 cartas ou jogou outro +2.");
    await sendCommand('!jogar 1', HUMAN_ID);

    // Aguarda a vez do bot e a pr√≥xima vez do humano
    await new Promise(res => setTimeout(res, 3000)); 

    console.log("\n>>> [A√á√ÉO] O Humano vai jogar a carta 1 novamente. Assumimos que √© um +4.");
     console.log(">>> [VERIFICA√á√ÉO] O log deve mostrar o efeito acumulado e que a vez passou para o Bot sob este efeito.");
    await sendCommand('!jogar 1 azul', HUMAN_ID);
    
    await sendCommand('!sair', HUMAN_ID);
    console.log('--- CEN√ÅRIO 1 FINALIZADO ---');
}

async function testeDeReembaralhamento() {
    console.log('\n\n--- CEN√ÅRIO 2: Testando Reembaralhamento ---');
    await sendCommand('!jogo uno', HUMAN_ID);
    await sendCommand('!entrar Humano', HUMAN_ID);
    await sendCommand('!iniciar', HUMAN_ID);

    console.log("\n>>> [A√á√ÉO] For√ßando o baralho a acabar. O Humano comprar√° cartas repetidamente.");
    console.log(">>> [AVISO] Mensagens de 'Opa, n√£o √© a sua vez' s√£o normais, pois o Bot tamb√©m joga.");
    for (let i = 0; i < 45; i++) {
        // O bot jogar√° entre os comandos do humano. O teste for√ßa a compra quando for a vez do humano.
        await sendCommand('!comprar', HUMAN_ID);
        await sendCommand('!passar', HUMAN_ID);
    }
    
    console.log("\n>>> [VERIFICA√á√ÉO] VERIFIQUE NO LOG ACIMA A MENSAGEM: 'O baralho acabou! Reembaralhando as cartas da mesa...'");
    await sendCommand('!sair', HUMAN_ID);
    console.log('--- CEN√ÅRIO 2 FINALIZADO ---');
}


async function runAllTests() {
    await testeDeAcumulo();
    await new Promise(res => setTimeout(res, 2000)); // Pausa entre cen√°rios
    await testeDeReembaralhamento();
    console.log('\n\n--- TODOS OS TESTES FORAM CONCLU√çDOS ---');
}

// Executa os testes
runAllTests();const mongoose = require('mongoose');

const connectDB = async () => {
    try {
        // Tenta se conectar ao banco usando a URI do arquivo .env
        const conn = await mongoose.connect(process.env.MONGO_URI);
        
        console.log(`[MongoDB] Conectado com sucesso: ${conn.connection.host}`);
    } catch (error) {
        console.error(`[MongoDB] Erro ao conectar: ${error.message}`);
        process.exit(1); // Encerra o processo com falha
    }
};

module.exports = connectDB;// C:\Users\Guilherme\bot-whatsapp\sessions\sessionManager.js

const sessions = {};
const playerSessionMap = {};

function createSession(groupId, game, creatorId) { // Adicionado creatorId
    if (!sessions[groupId]) {
        sessions[groupId] = {
            groupId: groupId,
            creatorId: creatorId, // <-- NOVA PROPRIEDADE
            game: game,
            players: [], 
            gameState: null, 
        };
        console.log(`Sess√£o criada para o grupo: ${groupId} para o jogo: ${game} por ${creatorId}`);
    }
    return sessions[groupId];
}

function getSession(groupId) {
    return sessions[groupId];
}

function endSession(groupId) {
    const session = sessions[groupId];
    if (session) {
        let playerIds = [];

        // NOVO: Verifica se session.players √© um array (Poker) ou um objeto (Truco)
        if (Array.isArray(session.players)) {
            // L√≥gica para o Poker (e para o Truco quando o jogo j√° come√ßou)
            playerIds = session.players.map(p => p.id);
        } else if (session.players && typeof session.players === 'object') {
            // L√≥gica para o lobby do Truco
            const bluePlayers = session.players.timeBlue || [];
            const redPlayers = session.players.timeRed || [];
            playerIds = [...bluePlayers.map(p => p.id), ...redPlayers.map(p => p.id)];
        }

        unmapPlayersInGroup(playerIds);
        delete sessions[groupId];
        console.log(`Sess√£o encerrada para o grupo: ${groupId}`);
        return true;
    }
    return false;
}

// Adapta√ß√£o para notificar estado do jogo para todos os jogadores na sess√£o (sem saldos de fichas)
async function notificarEstado(session, client) {
    if (session && session.gameState) {
        const poker = require('../games/Poker/poker'); 
        const statusMessage = poker.buildStatusMessage(session.gameState, session.players);
        await client.sendMessage(session.groupId, statusMessage);
    }
}

// Nova fun√ß√£o para notificar o status COMPLETO, incluindo saldos
async function notificarStatusCompleto(session, client) {
    if (session && session.gameState) {
        const poker = require('../games/Poker/poker'); 
        const statusMessage = poker.buildStatusMessage(session.gameState, session.players);
        const chipBalanceMessage = poker.buildChipBalanceMessage(session.players);
        
        await client.sendMessage(session.groupId, `${statusMessage}\n\n---\n${chipBalanceMessage}`);
    }
}

function mapPlayerToGroup(playerId, groupId) {
    playerSessionMap[playerId] = groupId;
    console.log(`[Player Map] Jogador ${playerId.split('@')[0]} mapeado para o grupo ${groupId}`);
}

/**
 * Encontra o ID do grupo em que um jogador est√° ativo.
 * @param {string} playerId ID do jogador.
 * @returns {string|null} O ID do grupo ou null se n√£o for encontrado.
 */
function getGroupFromPlayer(playerId) {
    return playerSessionMap[playerId] || null;
}

/**
 * Remove todos os jogadores de um grupo do mapa.
 * @param {string[]} playerIds Array de IDs de jogadores a serem removidos.
 */
function unmapPlayersInGroup(playerIds) {
    if (!playerIds || playerIds.length === 0) return;
    playerIds.forEach(pId => {
        if (playerSessionMap[pId]) {
            delete playerSessionMap[pId];
            console.log(`[Player Map] Jogador ${pId.split('@')[0]} desmapeado.`);
        }
    });
}

module.exports = {
    createSession,
    getSession,
    endSession,
    mapPlayerToGroup,
    getGroupFromPlayer,
    unmapPlayersInGroup,
    notificarEstado,
    notificarStatusCompleto
};
// C:\Users\Guilherme\bot-whatsapp\economy\chipManager.js

// Usaremos um objeto simples em mem√≥ria para armazenar as fichas dos jogadores.
// Em um futuro com persist√™ncia, isso seria substitu√≠do por um banco de dados.
const playerChips = {};

/**
 * Inicializa ou redefine as fichas de um jogador.
 * @param {string} playerId - O ID do WhatsApp do jogador.
 * @param {number} initialAmount - A quantidade inicial de fichas.
 */
function initializePlayerChips(playerId, initialAmount) {
    if (typeof initialAmount !== 'number' || initialAmount < 0) {
        console.warn(`[ChipManager] Tentativa de inicializar ${playerId} com quantia inv√°lida: ${initialAmount}`);
        playerChips[playerId] = 0; // Garante que a quantia seja pelo menos 0
        return;
    }
    playerChips[playerId] = initialAmount;
    console.log(`[ChipManager] Fichas de ${playerId.split('@')[0]} inicializadas para ${initialAmount}.`);
}

/**
 * Adiciona fichas ao saldo de um jogador.
 * @param {string} playerId - O ID do WhatsApp do jogador.
 * @param {number} amount - A quantidade de fichas a ser adicionada.
 * @returns {boolean} - true se a opera√ß√£o foi bem-sucedida, false caso contr√°rio.
 */
function addChips(playerId, amount) {
    if (typeof amount !== 'number' || amount <= 0) {
        console.warn(`[ChipManager] Tentativa de adicionar quantia inv√°lida para ${playerId}: ${amount}`);
        return false;
    }
    if (playerChips[playerId] === undefined) {
        console.warn(`[ChipManager] Jogador ${playerId.split('@')[0]} n√£o possui fichas inicializadas.`);
        return false;
    }
    playerChips[playerId] += amount;
    console.log(`[ChipManager] ${amount} fichas adicionadas a ${playerId.split('@')[0]}. Novo saldo: ${playerChips[playerId]}.`);
    return true;
}

/**
 * Deduz (remove) fichas do saldo de um jogador.
 * Renomeado de 'removeChips' para 'deductChips' para maior clareza e consist√™ncia.
 * @param {string} playerId - O ID do WhatsApp do jogador.
 * @param {number} amount - A quantidade de fichas a ser deduzida.
 * @returns {boolean} - true se a opera√ß√£o foi bem-sucedida e o jogador tinha fichas suficientes, false caso contr√°rio.
 */
function deductChips(playerId, amount) { // <-- AQUI: NOME DA FUN√á√ÉO MUDOU
    if (typeof amount !== 'number' || amount <= 0) {
        console.warn(`[ChipManager] Tentativa de deduzir quantia inv√°lida para ${playerId}: ${amount}`);
        return false;
    }
    if (playerChips[playerId] === undefined || playerChips[playerId] < amount) {
        console.warn(`[ChipManager] Jogador ${playerId.split('@')[0]} (${playerChips[playerId] || 0} fichas) n√£o tem fichas suficientes para deduzir ${amount}.`);
        return false;
    }
    playerChips[playerId] -= amount;
    console.log(`[ChipManager] ${amount} fichas deduzidas de ${playerId.split('@')[0]}. Novo saldo: ${playerChips[playerId]}.`);
    return true;
}

/**
 * Transfere fichas de um jogador para outro.
 * @param {string} fromPlayerId - O ID do WhatsApp do jogador de origem.
 * @param {string} toPlayerId - O ID do WhatsApp do jogador de destino.
 * @param {number} amount - A quantidade de fichas a ser transferida.
 * @returns {boolean} - true se a transfer√™ncia foi bem-sucedida, false caso contr√°rio.
 */
function transferChips(fromPlayerId, toPlayerId, amount) {
    if (fromPlayerId === toPlayerId) {
        console.warn(`[ChipManager] Tentativa de transferir fichas para o mesmo jogador: ${fromPlayerId}.`);
        return false;
    }
    // Usa deductChips aqui
    if (deductChips(fromPlayerId, amount)) { 
        if (addChips(toPlayerId, amount)) {
            console.log(`[ChipManager] ${amount} fichas transferidas de ${fromPlayerId.split('@')[0]} para ${toPlayerId.split('@')[0]}.`);
            return true;
        } else {
            // Rollback: se adicionar falhar, devolve as fichas ao remetente
            addChips(fromPlayerId, amount);
            console.error(`[ChipManager] Falha ao adicionar fichas a ${toPlayerId.split('@')[0]}. Transfer√™ncia revertida.`);
            return false;
        }
    }
    return false; // deductChips falhou
}

/**
 * Obt√©m o saldo de fichas de um jogador.
 * @param {string} playerId - O ID do WhatsApp do jogador.
 * @returns {number} - O saldo de fichas do jogador, ou 0 se n√£o inicializado.
 */
function getPlayerChips(playerId) {
    return playerChips[playerId] || 0;
}

/**
 * Remove um jogador do gerenciador de fichas (√∫til ao final de um jogo ou quando o jogador sai).
 * @param {string} playerId - O ID do WhatsApp do jogador.
 */
function removePlayer(playerId) {
    if (playerChips[playerId] !== undefined) {
        delete playerChips[playerId];
        console.log(`[ChipManager] Fichas de ${playerId.split('@')[0]} removidas.`);
    }
}

// Para testes e depura√ß√£o, permite ver todos os saldos (n√£o para uso em produ√ß√£o)
function getAllChipBalances() {
    return { ...playerChips }; // Retorna uma c√≥pia para evitar modifica√ß√µes externas
}

module.exports = {
    initializePlayerChips,
    addChips,
    deductChips, // <-- AQUI: AGORA EXPORTA 'deductChips'
    transferChips,
    getPlayerChips,
    removePlayer,
    getAllChipBalances 
};

L
wa_web_user_prefs_cache_store$55433d9b-ec94-4e52-a899-87b5bf41f8f2Ä( 0
;
wa-stickers$ee4b9aaa-ebe1-4c11-ad8c-63460f4e5dd4Ä∫2( 0
M
lru-media-array-buffer-cache$4036eb5d-7968-4eae-9922-ea22cded0e00ÄÍÆ( 0https://web.whatsapp.com/https://web.whatsapp.com/ ({
  "name": "bot-whatsapp",
  "version": "1.0.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "bot-whatsapp",
      "version": "1.0.0",
      "license": "ISC",
      "dependencies": {
        "@open-wa/wa-automate": "^4.76.0",
        "axios": "^1.10.0",
        "canvas": "^3.1.2",
        "chess-engine": "^0.0.0",
        "chess.js": "^1.4.0",
        "csv-parse": "^6.0.0",
        "dotenv": "^17.2.0",
        "jimp": "^0.16.1",
        "mongoose": "^8.16.4",
        "play-dl": "^1.9.7",
        "poker-evaluator": "^2.1.0",
        "qrcode-terminal": "^0.12.0",
        "uci": "^0.3.4",
        "whatsapp-web.js": "^1.31.0",
        "ytdl-core": "^4.11.5",
        "ytsr": "^3.8.4"
      }
    },
    "node_modules/@babel/code-frame": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz",
      "integrity": "sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.27.1",
        "js-tokens": "^4.0.0",
        "picocolors": "^1.1.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-string-parser": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz",
      "integrity": "sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==",
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz",
      "integrity": "sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==",
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/parser": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.28.0.tgz",
      "integrity": "sha512-jVZGvOxOuNSsuQuLRTh13nU0AogFlw32w/MT+LV6D3sP5WdbW61E77RnkbaO2dUvmPAYrBDJXGn5gGS6tH4j8g==",
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.28.0"
      },
      "bin": {
        "parser": "bin/babel-parser.js"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/runtime": {
      "version": "7.27.6",
      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.27.6.tgz",
      "integrity": "sha512-vbavdySgbTTrmFE+EsiqUTzlOr5bzlnJtUv9PynGCAKvfQqjIXbvFdumPM/GxMDfyuGMJaJAU6TO4zc1Jf1i8Q==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/types": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.28.0.tgz",
      "integrity": "sha512-jYnje+JyZG5YThjHiF28oT4SIZLnYOcSBb6+SDaFIyzDVSkXQmQQYclJ2R+YxcdmK0AX6x1E5OQNtuh3jHDrUg==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-string-parser": "^7.27.1",
        "@babel/helper-validator-identifier": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@brillout/import": {
      "version": "0.2.6",
      "resolved": "https://registry.npmjs.org/@brillout/import/-/import-0.2.6.tgz",
      "integrity": "sha512-1GUTmADc8trUC1YSW2lp9r6PmwluMoEyHajnE1kxVdbKGD0wJOlq/DvTWMUqLtBDCnQR+n//qgMtz6HwA/lotA==",
      "license": "MIT"
    },
    "node_modules/@colors/colors": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/@colors/colors/-/colors-1.6.0.tgz",
      "integrity": "sha512-Ir+AOibqzrIsL6ajt3Rz3LskB7OiMVHqltZmspbW/TJuTVuyOMirVqAkjfY6JISiLHgyNqicAC8AyHHGzNd/dA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.1.90"
      }
    },
    "node_modules/@dabh/diagnostics": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/@dabh/diagnostics/-/diagnostics-2.0.3.tgz",
      "integrity": "sha512-hrlQOIi7hAfzsMqlGSFyVucrx38O+j6wiGOf//H2ecvIEqYN4ADBSS2iLMh5UFyDunCNniUIPk/q3riFv45xRA==",
      "license": "MIT",
      "dependencies": {
        "colorspace": "1.1.x",
        "enabled": "2.0.x",
        "kuler": "^2.0.0"
      }
    },
    "node_modules/@discordjs/collection": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/@discordjs/collection/-/collection-0.8.0.tgz",
      "integrity": "sha512-TFsm3ZPXnASn/9qlCLPTYHIuP9awO20MSFtjVcS5TO/7KnRPdBv02++1LV59GCaY64lVP2NgOhRrNBLPHsGeBA==",
      "deprecated": "no longer supported",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=16.9.0"
      }
    },
    "node_modules/@jimp/bmp": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/bmp/-/bmp-0.16.13.tgz",
      "integrity": "sha512-9edAxu7N2FX7vzkdl5Jo1BbACfycUtBQX+XBMcHA2bk62P8R0otgkHg798frgAk/WxQIzwxqOH6wMiCwrlAzdQ==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13",
        "bmp-js": "^0.1.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/core": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/core/-/core-0.16.13.tgz",
      "integrity": "sha512-qXpA1tzTnlkTku9yqtuRtS/wVntvE6f3m3GNxdTdtmc+O+Wcg9Xo2ABPMh7Nc0AHbMKzwvwgB2JnjZmlmJEObg==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13",
        "any-base": "^1.1.0",
        "buffer": "^5.2.0",
        "exif-parser": "^0.1.12",
        "file-type": "^16.5.4",
        "load-bmfont": "^1.3.1",
        "mkdirp": "^0.5.1",
        "phin": "^2.9.1",
        "pixelmatch": "^4.0.2",
        "tinycolor2": "^1.4.1"
      }
    },
    "node_modules/@jimp/core/node_modules/file-type": {
      "version": "16.5.4",
      "resolved": "https://registry.npmjs.org/file-type/-/file-type-16.5.4.tgz",
      "integrity": "sha512-/yFHK0aGjFEgDJjEKP0pWCplsPFPhwyfwevf/pVxiN0tmE4L9LmwWxWukdJSHdoCli4VgQLehjJtwQBnqmsKcw==",
      "dependencies": {
        "readable-web-to-node-stream": "^3.0.0",
        "strtok3": "^6.2.4",
        "token-types": "^4.1.1"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/file-type?sponsor=1"
      }
    },
    "node_modules/@jimp/core/node_modules/peek-readable": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/peek-readable/-/peek-readable-4.1.0.tgz",
      "integrity": "sha512-ZI3LnwUv5nOGbQzD9c2iDG6toheuXSZP5esSHBjopsXH4dg19soufvpUGA3uohi5anFtGb2lhAVdHzH6R/Evvg==",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/Borewit"
      }
    },
    "node_modules/@jimp/core/node_modules/strtok3": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/strtok3/-/strtok3-6.3.0.tgz",
      "integrity": "sha512-fZtbhtvI9I48xDSywd/somNqgUHl2L2cstmXCCif0itOf96jeW18MBSyrLuNicYQVkvpOxkZtkzujiTJ9LW5Jw==",
      "dependencies": {
        "@tokenizer/token": "^0.3.0",
        "peek-readable": "^4.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/Borewit"
      }
    },
    "node_modules/@jimp/core/node_modules/token-types": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/token-types/-/token-types-4.2.1.tgz",
      "integrity": "sha512-6udB24Q737UD/SDsKAHI9FCRP7Bqc9D/MQUV02ORQg5iskjtLJlZJNdN4kKtcdtwCeWIwIHDGaUsTsCCAa8sFQ==",
      "dependencies": {
        "@tokenizer/token": "^0.3.0",
        "ieee754": "^1.2.1"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/Borewit"
      }
    },
    "node_modules/@jimp/custom": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/custom/-/custom-0.16.13.tgz",
      "integrity": "sha512-LTATglVUPGkPf15zX1wTMlZ0+AU7cGEGF6ekVF1crA8eHUWsGjrYTB+Ht4E3HTrCok8weQG+K01rJndCp/l4XA==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/core": "^0.16.13"
      }
    },
    "node_modules/@jimp/gif": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/gif/-/gif-0.16.13.tgz",
      "integrity": "sha512-yFAMZGv3o+YcjXilMWWwS/bv1iSqykFahFMSO169uVMtfQVfa90kt4/kDwrXNR6Q9i6VHpFiGZMlF2UnHClBvg==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13",
        "gifwrap": "^0.9.2",
        "omggif": "^1.0.9"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/jpeg": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/jpeg/-/jpeg-0.16.13.tgz",
      "integrity": "sha512-BJHlDxzTlCqP2ThqP8J0eDrbBfod7npWCbJAcfkKqdQuFk0zBPaZ6KKaQKyKxmWJ87Z6ohANZoMKEbtvrwz1AA==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13",
        "jpeg-js": "^0.4.2"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-blit": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-blit/-/plugin-blit-0.16.13.tgz",
      "integrity": "sha512-8Z1k96ZFxlhK2bgrY1JNWNwvaBeI/bciLM0yDOni2+aZwfIIiC7Y6PeWHTAvjHNjphz+XCt01WQmOYWCn0ML6g==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-blur": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-blur/-/plugin-blur-0.16.13.tgz",
      "integrity": "sha512-PvLrfa8vkej3qinlebyhLpksJgCF5aiysDMSVhOZqwH5nQLLtDE9WYbnsofGw4r0VVpyw3H/ANCIzYTyCtP9Cg==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-circle": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-circle/-/plugin-circle-0.16.13.tgz",
      "integrity": "sha512-RNave7EFgZrb5V5EpdvJGAEHMnDAJuwv05hKscNfIYxf0kR3KhViBTDy+MoTnMlIvaKFULfwIgaZWzyhuINMzA==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-color": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-color/-/plugin-color-0.16.13.tgz",
      "integrity": "sha512-xW+9BtEvoIkkH/Wde9ql4nAFbYLkVINhpgAE7VcBUsuuB34WUbcBl/taOuUYQrPEFQJ4jfXiAJZ2H/rvKjCVnQ==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13",
        "tinycolor2": "^1.4.1"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-contain": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-contain/-/plugin-contain-0.16.13.tgz",
      "integrity": "sha512-QayTXw4tXMwU6q6acNTQrTTFTXpNRBe+MgTGMDU0lk+23PjlFCO/9sacflelG8lsp7vNHhAxFeHptDMAksEYzg==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-blit": ">=0.3.5",
        "@jimp/plugin-resize": ">=0.3.5",
        "@jimp/plugin-scale": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-cover": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-cover/-/plugin-cover-0.16.13.tgz",
      "integrity": "sha512-BSsP71GTNaqWRcvkbWuIVH+zK7b3TSNebbhDkFK0fVaUTzHuKMS/mgY4hDZIEVt7Rf5FjadAYtsujHN9w0iSYA==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-crop": ">=0.3.5",
        "@jimp/plugin-resize": ">=0.3.5",
        "@jimp/plugin-scale": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-crop": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-crop/-/plugin-crop-0.16.13.tgz",
      "integrity": "sha512-WEl2tPVYwzYL8OKme6Go2xqiWgKsgxlMwyHabdAU4tXaRwOCnOI7v4021gCcBb9zn/oWwguHuKHmK30Fw2Z/PA==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-displace": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-displace/-/plugin-displace-0.16.13.tgz",
      "integrity": "sha512-qt9WKq8vWrcjySa9DyQ0x/RBMHQeiVjdVSY1SJsMjssPUf0pS74qorcuAkGi89biN3YoGUgPkpqECnAWnYwgGA==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-dither": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-dither/-/plugin-dither-0.16.13.tgz",
      "integrity": "sha512-5/N3yJggbWQTlGZHQYJPmQXEwR52qaXjEzkp1yRBbtdaekXE3BG/suo0fqeoV/csf8ooI78sJzYmIrxNoWVtgQ==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-fisheye": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-fisheye/-/plugin-fisheye-0.16.13.tgz",
      "integrity": "sha512-2rZmTdFbT/cF9lEZIkXCYO0TsT114Q27AX5IAo0Sju6jVQbvIk1dFUTnwLDadTo8wkJlFzGqMQ24Cs8cHWOliA==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-flip": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-flip/-/plugin-flip-0.16.13.tgz",
      "integrity": "sha512-EmcgAA74FTc5u7Z+hUO/sRjWwfPPLuOQP5O64x5g4j0T12Bd29IgsYZxoutZo/rb3579+JNa/3wsSEmyVv1EpA==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-rotate": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-gaussian": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-gaussian/-/plugin-gaussian-0.16.13.tgz",
      "integrity": "sha512-A1XKfGQD0iDdIiKqFYi8nZMv4dDVYdxbrmgR7y/CzUHhSYdcmoljLIIsZZM3Iks/Wa353W3vtvkWLuDbQbch1w==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-invert": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-invert/-/plugin-invert-0.16.13.tgz",
      "integrity": "sha512-xFMrIn7czEZbdbMzZWuaZFnlLGJDVJ82y5vlsKsXRTG2kcxRsMPXvZRWHV57nSs1YFsNqXSbrC8B98n0E32njQ==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-mask": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-mask/-/plugin-mask-0.16.13.tgz",
      "integrity": "sha512-wLRYKVBXql2GAYgt6FkTnCfE+q5NomM7Dlh0oIPGAoMBWDyTx0eYutRK6PlUrRK2yMHuroAJCglICTbxqGzowQ==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-normalize": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-normalize/-/plugin-normalize-0.16.13.tgz",
      "integrity": "sha512-3tfad0n9soRna4IfW9NzQdQ2Z3ijkmo21DREHbE6CGcMIxOSvfRdSvf1qQPApxjTSo8LTU4MCi/fidx/NZ0GqQ==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-print": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-print/-/plugin-print-0.16.13.tgz",
      "integrity": "sha512-0m6i3p01PGRkGAK9r53hDYrkyMq+tlhLOIbsSTmZyh6HLshUKlTB7eXskF5OpVd5ZUHoltlNc6R+ggvKIzxRFw==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13",
        "load-bmfont": "^1.4.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-blit": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-resize": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-resize/-/plugin-resize-0.16.13.tgz",
      "integrity": "sha512-qoqtN8LDknm3fJm9nuPygJv30O3vGhSBD2TxrsCnhtOsxKAqVPJtFVdGd/qVuZ8nqQANQmTlfqTiK9mVWQ7MiQ==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-rotate": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-rotate/-/plugin-rotate-0.16.13.tgz",
      "integrity": "sha512-Ev+Jjmj1nHYw897z9C3R9dYsPv7S2/nxdgfFb/h8hOwK0Ovd1k/+yYS46A0uj/JCKK0pQk8wOslYBkPwdnLorw==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-blit": ">=0.3.5",
        "@jimp/plugin-crop": ">=0.3.5",
        "@jimp/plugin-resize": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-scale": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-scale/-/plugin-scale-0.16.13.tgz",
      "integrity": "sha512-05POQaEJVucjTiSGMoH68ZiELc7QqpIpuQlZ2JBbhCV+WCbPFUBcGSmE7w4Jd0E2GvCho/NoMODLwgcVGQA97A==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-resize": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-shadow": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-shadow/-/plugin-shadow-0.16.13.tgz",
      "integrity": "sha512-nmu5VSZ9hsB1JchTKhnnCY+paRBnwzSyK5fhkhtQHHoFD5ArBQ/5wU8y6tCr7k/GQhhGq1OrixsECeMjPoc8Zw==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-blur": ">=0.3.5",
        "@jimp/plugin-resize": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-threshold": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-threshold/-/plugin-threshold-0.16.13.tgz",
      "integrity": "sha512-+3zArBH0OE3Rhjm4HyAokMsZlIq5gpQec33CncyoSwxtRBM2WAhUVmCUKuBo+Lr/2/4ISoY4BWpHKhMLDix6cA==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-color": ">=0.8.0",
        "@jimp/plugin-resize": ">=0.8.0"
      }
    },
    "node_modules/@jimp/plugins": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugins/-/plugins-0.16.13.tgz",
      "integrity": "sha512-CJLdqODEhEVs4MgWCxpWL5l95sCBlkuSLz65cxEm56X5akIsn4LOlwnKoSEZioYcZUBvHhCheH67AyPTudfnQQ==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/plugin-blit": "^0.16.13",
        "@jimp/plugin-blur": "^0.16.13",
        "@jimp/plugin-circle": "^0.16.13",
        "@jimp/plugin-color": "^0.16.13",
        "@jimp/plugin-contain": "^0.16.13",
        "@jimp/plugin-cover": "^0.16.13",
        "@jimp/plugin-crop": "^0.16.13",
        "@jimp/plugin-displace": "^0.16.13",
        "@jimp/plugin-dither": "^0.16.13",
        "@jimp/plugin-fisheye": "^0.16.13",
        "@jimp/plugin-flip": "^0.16.13",
        "@jimp/plugin-gaussian": "^0.16.13",
        "@jimp/plugin-invert": "^0.16.13",
        "@jimp/plugin-mask": "^0.16.13",
        "@jimp/plugin-normalize": "^0.16.13",
        "@jimp/plugin-print": "^0.16.13",
        "@jimp/plugin-resize": "^0.16.13",
        "@jimp/plugin-rotate": "^0.16.13",
        "@jimp/plugin-scale": "^0.16.13",
        "@jimp/plugin-shadow": "^0.16.13",
        "@jimp/plugin-threshold": "^0.16.13",
        "timm": "^1.6.1"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/png": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/png/-/png-0.16.13.tgz",
      "integrity": "sha512-8cGqINvbWJf1G0Her9zbq9I80roEX0A+U45xFby3tDWfzn+Zz8XKDF1Nv9VUwVx0N3zpcG1RPs9hfheG4Cq2kg==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13",
        "pngjs": "^3.3.3"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/tiff": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/tiff/-/tiff-0.16.13.tgz",
      "integrity": "sha512-oJY8d9u95SwW00VPHuCNxPap6Q1+E/xM5QThb9Hu+P6EGuu6lIeLaNBMmFZyblwFbwrH+WBOZlvIzDhi4Dm/6Q==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "utif": "^2.0.1"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/types": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/types/-/types-0.16.13.tgz",
      "integrity": "sha512-mC0yVNUobFDjoYLg4hoUwzMKgNlxynzwt3cDXzumGvRJ7Kb8qQGOWJQjQFo5OxmGExqzPphkirdbBF88RVLBCg==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/bmp": "^0.16.13",
        "@jimp/gif": "^0.16.13",
        "@jimp/jpeg": "^0.16.13",
        "@jimp/png": "^0.16.13",
        "@jimp/tiff": "^0.16.13",
        "timm": "^1.6.1"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/utils": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/utils/-/utils-0.16.13.tgz",
      "integrity": "sha512-VyCpkZzFTHXtKgVO35iKN0sYR10psGpV6SkcSeV4oF7eSYlR8Bl6aQLCzVeFjvESF7mxTmIiI3/XrMobVrtxDA==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "regenerator-runtime": "^0.13.3"
      }
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.12",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.12.tgz",
      "integrity": "sha512-OuLGC46TjB5BbN1dH8JULVVZY4WTdkF7tV9Ys6wLL1rubZnCMstOhNHueU5bLCrnRuDhKPDM4g6sw4Bel5Gzqg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@jridgewell/sourcemap-codec": "^1.5.0",
        "@jridgewell/trace-mapping": "^0.3.24"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/source-map": {
      "version": "0.3.10",
      "resolved": "https://registry.npmjs.org/@jridgewell/source-map/-/source-map-0.3.10.tgz",
      "integrity": "sha512-0pPkgz9dY+bijgistcTTJ5mR+ocqRXLuhXHYdzoMmmoJ2C9S46RCm2GMUbatPEUK9Yjy26IrAy8D/M00lLkv+Q==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.25"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.5.4",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.4.tgz",
      "integrity": "sha512-VT2+G1VQs/9oz078bLrYbecdZKs912zQlkelYpuf+SXF+QvZDYJlbx/LSx+meSAwdDFnF8FVXW92AVjjkVmgFw==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.29",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.29.tgz",
      "integrity": "sha512-uw6guiW/gcAGPDhLmd77/6lW8QLeiV5RUTsAX46Db6oLhGaVj4lhnPwb184s1bkc8kdVg/+h988dro8GRDpmYQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.1.0",
        "@jridgewell/sourcemap-codec": "^1.4.14"
      }
    },
    "node_modules/@mongodb-js/saslprep": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/@mongodb-js/saslprep/-/saslprep-1.3.0.tgz",
      "integrity": "sha512-zlayKCsIjYb7/IdfqxorK5+xUMyi4vOKcFy10wKJYc63NSdKI8mNME+uJqfatkPmOSMMUiojrL58IePKBm3gvQ==",
      "dependencies": {
        "sparse-bitfield": "^3.0.3"
      }
    },
    "node_modules/@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@oozcitak/dom": {
      "version": "1.15.10",
      "resolved": "https://registry.npmjs.org/@oozcitak/dom/-/dom-1.15.10.tgz",
      "integrity": "sha512-0JT29/LaxVgRcGKvHmSrUTEvZ8BXvZhGl2LASRUgHqDTC1M5g1pLmVv56IYNyt3bG2CUjDkc67wnyZC14pbQrQ==",
      "license": "MIT",
      "dependencies": {
        "@oozcitak/infra": "1.0.8",
        "@oozcitak/url": "1.0.4",
        "@oozcitak/util": "8.3.8"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/@oozcitak/infra": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/@oozcitak/infra/-/infra-1.0.8.tgz",
      "integrity": "sha512-JRAUc9VR6IGHOL7OGF+yrvs0LO8SlqGnPAMqyzOuFZPSZSXI7Xf2O9+awQPSMXgIWGtgUf/dA6Hs6X6ySEaWTg==",
      "license": "MIT",
      "dependencies": {
        "@oozcitak/util": "8.3.8"
      },
      "engines": {
        "node": ">=6.0"
      }
    },
    "node_modules/@oozcitak/url": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/@oozcitak/url/-/url-1.0.4.tgz",
      "integrity": "sha512-kDcD8y+y3FCSOvnBI6HJgl00viO/nGbQoCINmQ0h98OhnGITrWR3bOGfwYCthgcrV8AnTJz8MzslTQbC3SOAmw==",
      "license": "MIT",
      "dependencies": {
        "@oozcitak/infra": "1.0.8",
        "@oozcitak/util": "8.3.8"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/@oozcitak/util": {
      "version": "8.3.8",
      "resolved": "https://registry.npmjs.org/@oozcitak/util/-/util-8.3.8.tgz",
      "integrity": "sha512-T8TbSnGsxo6TDBJx/Sgv/BlVJL3tshxZP7Aq5R1mSnM5OcHY2dQaxLMu2+E8u3gN0MLOzdjurqN4ZRVuzQycOQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/@open-wa/wa-automate": {
      "version": "4.76.0",
      "resolved": "https://registry.npmjs.org/@open-wa/wa-automate/-/wa-automate-4.76.0.tgz",
      "integrity": "sha512-Df3Mn8JGiDcy8L3hGwnszrEvbkmFYlwD1f98f3s7QXvvKBpDCbAOPNbaHn74QtL0IHsgVXvVkKciQUG93FEkwA==",
      "hasInstallScript": true,
      "license": "H-DNH V1.0",
      "dependencies": {
        "@brillout/import": "^0.2.1",
        "@discordjs/collection": "0.8.0",
        "@open-wa/wa-automate-socket-client": "^3.3.0",
        "@open-wa/wa-decrypt": "^4.3.1",
        "atob": "^2.1.2",
        "aws4": "^1.11.0",
        "axios": "^1.4.0",
        "boxen": "^5.0.0",
        "cfonts": "^2.8.5",
        "change-case": "^4.1.2",
        "chokidar": "^3.5.3",
        "chrome-launcher": "^0.15.0",
        "cloudflared": "^0.5.1",
        "command-exists": "^1.2.9",
        "command-line-usage": "^6.1.1",
        "cors": "^2.8.5",
        "cross-env": "^7.0.3",
        "cross-spawn": "^7.0.3",
        "datauri": "^4.0.1",
        "death": "^1.1.0",
        "eventemitter2": "^6.4.7",
        "express": "^4.17.1",
        "express-ipfilter": "^1.3.1",
        "express-robots-txt": "^1.0.0",
        "file-type": "^18.0.0",
        "find-up": "^5.0.0",
        "form-data": "^4.0.0",
        "fs-extra": "^10.0.0",
        "get-port": "^5.1.1",
        "hasha": "^5.2.0",
        "helmet": "^5.1.1",
        "image-type": "^4.1.0",
        "is-url-superb": "^5.0.0",
        "json5": "^2.2.0",
        "klona": "^2.0.5",
        "lodash.uniq": "^4.5.0",
        "meow": "^9.0.0",
        "mime": "^3.0.0",
        "node-persist": "^3.1.0",
        "open": "^8.0.2",
        "os-name": "^4.0.0",
        "p-queue": "6.6.2",
        "parse-function": "^5.6.10",
        "parse-url": "^5.0.2",
        "patch-package": "^6.2.2",
        "pico-s3": "^2.1.0",
        "pidtree": "^0.6.0",
        "pidusage": "^3.0.0",
        "postman-2-swagger": "^0.5.0",
        "puppeteer": "^23.6.0",
        "puppeteer-extra": "^3.3.6",
        "puppeteer-extra-plugin-block-resources": "^2.4.3",
        "puppeteer-extra-plugin-devtools": "^2.4.6",
        "puppeteer-extra-plugin-stealth": "^2.11.2",
        "qrcode-terminal": "^0.12.0",
        "qs": "^6.10.1",
        "rxjs": "^7.0.0",
        "smashah-puppeteer-page-proxy": "^1.2.8",
        "socket.io": "^4.5.4",
        "socket.io-client": "^4.5.4",
        "spinnies": "^0.5.1",
        "swagger-stats": "^0.99.1",
        "swagger-ui-dist": "^4.1.3",
        "swagger-ui-express": "^4.1.4",
        "tcp-port-used": "^1.0.1",
        "terminal-link": "^2.1.1",
        "terminate": "^2.5.0",
        "traverse": "^0.6.6",
        "ts-loader": "^9.4.1",
        "ts-morph": "^12.0.0",
        "type-fest": "^1.1.1",
        "update-notifier": "^5.0.0",
        "uuid": "^9.0.0",
        "uuid-apikey": "^1.5.3",
        "winston": "^3.6.0",
        "winston-daily-rotate-file": "^4.5.5",
        "winston-syslog": "^2.5.0",
        "xmlbuilder2": "^3.0.2"
      },
      "bin": {
        "wa-automate": "bin/server.js"
      },
      "engines": {
        "node": ">=12.18.3",
        "npm": ">=7.9.0"
      }
    },
    "node_modules/@open-wa/wa-automate-socket-client": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/@open-wa/wa-automate-socket-client/-/wa-automate-socket-client-3.3.0.tgz",
      "integrity": "sha512-+y/ZYsEr8XSr2lWQC5891OEasphyCD7DEp3R+uTjneZrjUuBCXlcZq6mJYeHckC5CuRorJETKC30KHQQmhbjgw==",
      "license": "H-DNH V1.0",
      "dependencies": {
        "@discordjs/collection": "^0.8.0",
        "@open-wa/wa-automate-types-only": "*",
        "debug": "^4.3.4",
        "eventemitter2": "^6.4.9",
        "socket.io-client": "^4.6.1",
        "uuid": "^9.0.0"
      }
    },
    "node_modules/@open-wa/wa-automate-types-only": {
      "version": "4.76.0",
      "resolved": "https://registry.npmjs.org/@open-wa/wa-automate-types-only/-/wa-automate-types-only-4.76.0.tgz",
      "integrity": "sha512-BHRe9pQRaHU8TL8/YTJ+wiM1CioJ9j0ec81aTHc9/4waHjrdo7qfLPfgZ1BKc6QMF0gSRHtD0CiR79wtu+QSMw==",
      "license": "H-DNH V1.0",
      "engines": {
        "node": ">=12.18.3",
        "npm": ">=7.9.0"
      }
    },
    "node_modules/@open-wa/wa-automate/node_modules/traverse": {
      "version": "0.6.11",
      "resolved": "https://registry.npmjs.org/traverse/-/traverse-0.6.11.tgz",
      "integrity": "sha512-vxXDZg8/+p3gblxB6BhhG5yWVn1kGRlaL8O78UDXc3wRnPizB5g83dcvWV1jpDMIPnjZjOFuxlMmE82XJ4407w==",
      "license": "MIT",
      "dependencies": {
        "gopd": "^1.2.0",
        "typedarray.prototype.slice": "^1.0.5",
        "which-typed-array": "^1.1.18"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/@open-wa/wa-decrypt": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/@open-wa/wa-decrypt/-/wa-decrypt-4.4.0.tgz",
      "integrity": "sha512-D2e+7OvbSPv7Sh/+8Off5aYnFfHRTC27kOWOss3HcEzxIXh/AqLrHu5sfLB/m99cOZnXaCdWrZ48RS4lafDhuQ==",
      "license": "ISC",
      "dependencies": {
        "@open-wa/wa-automate-types-only": "*",
        "atob": "^2.1.2",
        "axios": "^0.26.1",
        "futoin-hkdf": "^1.3.3",
        "type-fest": "^2.1.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@open-wa/wa-decrypt/node_modules/axios": {
      "version": "0.26.1",
      "resolved": "https://registry.npmjs.org/axios/-/axios-0.26.1.tgz",
      "integrity": "sha512-fPwcX4EvnSHuInCMItEhAGnaSEXRBjtzh9fOtsE6E1G6p7vl7edEeZe11QHf18+6+9gR5PbKV/sGKNaD8YaMeA==",
      "license": "MIT",
      "dependencies": {
        "follow-redirects": "^1.14.8"
      }
    },
    "node_modules/@open-wa/wa-decrypt/node_modules/type-fest": {
      "version": "2.19.0",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-2.19.0.tgz",
      "integrity": "sha512-RAH822pAdBgcNMAfWnCBU3CFZcfZ/i1eZjwFU/dsLKumyuuP3niueg2UAukXYF0E2AAoc82ZSSf9J0WQBinzHA==",
      "license": "(MIT OR CC0-1.0)",
      "engines": {
        "node": ">=12.20"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@pedroslopez/moduleraid": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/@pedroslopez/moduleraid/-/moduleraid-5.0.2.tgz",
      "integrity": "sha512-wtnBAETBVYZ9GvcbgdswRVSLkFkYAGv1KzwBBTeRXvGT9sb9cPllOgFFWXCn9PyARQ0H+Ijz6mmoRrGateUDxQ==",
      "license": "MIT"
    },
    "node_modules/@puppeteer/browsers": {
      "version": "2.6.1",
      "resolved": "https://registry.npmjs.org/@puppeteer/browsers/-/browsers-2.6.1.tgz",
      "integrity": "sha512-aBSREisdsGH890S2rQqK82qmQYU3uFpSH8wcZWHgHzl3LfzsxAKbLNiAG9mO8v1Y0UICBeClICxPJvyr0rcuxg==",
      "license": "Apache-2.0",
      "dependencies": {
        "debug": "^4.4.0",
        "extract-zip": "^2.0.1",
        "progress": "^2.0.3",
        "proxy-agent": "^6.5.0",
        "semver": "^7.6.3",
        "tar-fs": "^3.0.6",
        "unbzip2-stream": "^1.4.3",
        "yargs": "^17.7.2"
      },
      "bin": {
        "browsers": "lib/cjs/main-cli.js"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@puppeteer/browsers/node_modules/tar-fs": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/tar-fs/-/tar-fs-3.1.0.tgz",
      "integrity": "sha512-5Mty5y/sOF1YWj1J6GiBodjlDc05CUR8PKXrsnFAiSG0xA+GHeWLovaZPYUDXkH/1iKRf2+M5+OrRgzC7O9b7w==",
      "license": "MIT",
      "dependencies": {
        "pump": "^3.0.0",
        "tar-stream": "^3.1.5"
      },
      "optionalDependencies": {
        "bare-fs": "^4.0.1",
        "bare-path": "^3.0.0"
      }
    },
    "node_modules/@puppeteer/browsers/node_modules/tar-stream": {
      "version": "3.1.7",
      "resolved": "https://registry.npmjs.org/tar-stream/-/tar-stream-3.1.7.tgz",
      "integrity": "sha512-qJj60CXt7IU1Ffyc3NJMjh6EkuCFej46zUqJ4J7pqYlThyd9bO0XBTmcOIhSzZJVWfsLks0+nle/j538YAW9RQ==",
      "license": "MIT",
      "dependencies": {
        "b4a": "^1.6.4",
        "fast-fifo": "^1.2.0",
        "streamx": "^2.15.0"
      }
    },
    "node_modules/@sec-ant/readable-stream": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/@sec-ant/readable-stream/-/readable-stream-0.4.1.tgz",
      "integrity": "sha512-831qok9r2t8AlxLko40y2ebgSDhenenCatLVeW/uBtnHPyhHOvG0C7TvfgecV+wHzIm5KUICgzmVpWS+IMEAeg==",
      "license": "MIT"
    },
    "node_modules/@sindresorhus/is": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/@sindresorhus/is/-/is-0.7.0.tgz",
      "integrity": "sha512-ONhaKPIufzzrlNbqtWFFd+jlnemX6lJAgq9ZeiZtS7I1PIf/la7CW4m83rTXRnVnsMbW2k56pGYu7AUFJD9Pow==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@socket.io/component-emitter": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@socket.io/component-emitter/-/component-emitter-3.1.2.tgz",
      "integrity": "sha512-9BCxFwvbGg/RsZK9tjXd8s4UcwR0MWeFQ1XEKIQVVvAGJyINdrqKMcTRyLoK8Rse1GjzLV9cwjWV1olXRWEXVA==",
      "license": "MIT"
    },
    "node_modules/@szmarczak/http-timer": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-1.1.2.tgz",
      "integrity": "sha512-XIB2XbzHTN6ieIjfIMV9hlVcfPU26s2vafYWQcZHWXHOxiaRZYEDKEwdl129Zyg50+foYV2jCgtrqSA6qNuNSA==",
      "license": "MIT",
      "dependencies": {
        "defer-to-connect": "^1.0.1"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@tokenizer/token": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/@tokenizer/token/-/token-0.3.0.tgz",
      "integrity": "sha512-OvjF+z51L3ov0OyAU0duzsYuvO01PH7x4t6DJx+guahgTnBHkhJdG7soQeTSFLWN3efnHyibZ4Z8l2EuWwJN3A==",
      "license": "MIT"
    },
    "node_modules/@tootallnate/once": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@tootallnate/once/-/once-1.1.2.tgz",
      "integrity": "sha512-RbzJvlNzmRq5c3O09UipeuXno4tA1FE6ikOjxZK0tuxVv3412l64l5t1W5pj4+rJq9vpkm/kwiR07aZXnsKPxw==",
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/@tootallnate/quickjs-emscripten": {
      "version": "0.23.0",
      "resolved": "https://registry.npmjs.org/@tootallnate/quickjs-emscripten/-/quickjs-emscripten-0.23.0.tgz",
      "integrity": "sha512-C5Mc6rdnsaJDjO3UpGW/CQTHtCKaYlScZTly4JIu97Jxo/odCiH0ITnDXSJPTOrEKk/ycSZ0AOgTmkDtkOsvIA==",
      "license": "MIT"
    },
    "node_modules/@ts-morph/common": {
      "version": "0.11.1",
      "resolved": "https://registry.npmjs.org/@ts-morph/common/-/common-0.11.1.tgz",
      "integrity": "sha512-7hWZS0NRpEsNV8vWJzg7FEz6V8MaLNeJOmwmghqUXTpzk16V1LLZhdo+4QvE/+zv4cVci0OviuJFnqhEfoV3+g==",
      "license": "MIT",
      "dependencies": {
        "fast-glob": "^3.2.7",
        "minimatch": "^3.0.4",
        "mkdirp": "^1.0.4",
        "path-browserify": "^1.0.1"
      }
    },
    "node_modules/@ts-morph/common/node_modules/mkdirp": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz",
      "integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==",
      "license": "MIT",
      "bin": {
        "mkdirp": "bin/cmd.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/@types/cacheable-request": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/@types/cacheable-request/-/cacheable-request-6.0.3.tgz",
      "integrity": "sha512-IQ3EbTzGxIigb1I3qPZc1rWJnH0BmSKv5QYTalEwweFvyBDLSAe24zP0le/hyi7ecGfZVlIVAg4BZqb8WBwKqw==",
      "license": "MIT",
      "dependencies": {
        "@types/http-cache-semantics": "*",
        "@types/keyv": "^3.1.4",
        "@types/node": "*",
        "@types/responselike": "^1.0.0"
      }
    },
    "node_modules/@types/cors": {
      "version": "2.8.19",
      "resolved": "https://registry.npmjs.org/@types/cors/-/cors-2.8.19.tgz",
      "integrity": "sha512-mFNylyeyqN93lfe/9CSxOGREz8cpzAhH+E93xJ4xWQf62V8sQ/24reV2nyzUWM6H6Xji+GGHpkbLe7pVoUEskg==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/debug": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@types/debug/-/debug-4.1.12.tgz",
      "integrity": "sha512-vIChWdVG3LG1SMxEvI/AK+FWJthlrqlTu7fbrlywTkkaONwk/UAGaULXRlf8vkzFBLVm0zkMdCquhL5aOjhXPQ==",
      "license": "MIT",
      "dependencies": {
        "@types/ms": "*"
      }
    },
    "node_modules/@types/eslint": {
      "version": "9.6.1",
      "resolved": "https://registry.npmjs.org/@types/eslint/-/eslint-9.6.1.tgz",
      "integrity": "sha512-FXx2pKgId/WyYo2jXw63kk7/+TY7u7AziEJxJAnSFzHlqTAS3Ync6SvgYAN/k4/PQpnnVuzoMuVnByKK2qp0ag==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@types/estree": "*",
        "@types/json-schema": "*"
      }
    },
    "node_modules/@types/eslint-scope": {
      "version": "3.7.7",
      "resolved": "https://registry.npmjs.org/@types/eslint-scope/-/eslint-scope-3.7.7.tgz",
      "integrity": "sha512-MzMFlSLBqNF2gcHWO0G1vP/YQyfvrxZ0bF+u7mzUdZ1/xK4A4sru+nraZz5i3iEIk1l1uyicaDVTB4QbbEkAYg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@types/eslint": "*",
        "@types/estree": "*"
      }
    },
    "node_modules/@types/estree": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz",
      "integrity": "sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@types/http-cache-semantics": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/@types/http-cache-semantics/-/http-cache-semantics-4.0.4.tgz",
      "integrity": "sha512-1m0bIFVc7eJWyve9S0RnuRgcQqF/Xd5QsUZAZeQFr1Q3/p9JWoQQEqmVy+DPTNpGXwhgIetAoYF8JSc33q29QA==",
      "license": "MIT"
    },
    "node_modules/@types/json-schema": {
      "version": "7.0.15",
      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz",
      "integrity": "sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@types/keyv": {
      "version": "3.1.4",
      "resolved": "https://registry.npmjs.org/@types/keyv/-/keyv-3.1.4.tgz",
      "integrity": "sha512-BQ5aZNSCpj7D6K2ksrRCTmKRLEpnPvWDiLPfoGyhZ++8YtiK9d/3DBKPJgry359X/P1PfruyYwvnvwFjuEiEIg==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/minimist": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/@types/minimist/-/minimist-1.2.5.tgz",
      "integrity": "sha512-hov8bUuiLiyFPGyFPE1lwWhmzYbirOXQNNo40+y3zow8aFVTeyn3VWL0VFFfdNddA8S4Vf0Tc062rzyNr7Paag==",
      "license": "MIT"
    },
    "node_modules/@types/ms": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@types/ms/-/ms-2.1.0.tgz",
      "integrity": "sha512-GsCCIZDE/p3i96vtEqx+7dBUGXrc7zeSK3wwPHIaRThS+9OhWIXRqzs4d6k1SVU8g91DrNRWxWUGhp5KXQb2VA==",
      "license": "MIT"
    },
    "node_modules/@types/node": {
      "version": "24.0.7",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-24.0.7.tgz",
      "integrity": "sha512-YIEUUr4yf8q8oQoXPpSlnvKNVKDQlPMWrmOcgzoduo7kvA2UF0/BwJ/eMKFTiTtkNL17I0M6Xe2tvwFU7be6iw==",
      "license": "MIT",
      "dependencies": {
        "undici-types": "~7.8.0"
      }
    },
    "node_modules/@types/normalize-package-data": {
      "version": "2.4.4",
      "resolved": "https://registry.npmjs.org/@types/normalize-package-data/-/normalize-package-data-2.4.4.tgz",
      "integrity": "sha512-37i+OaWTh9qeK4LSHPsyRC7NahnGotNuZvjLSgcPzblpHB3rrCJxAOgI5gCdKm7coonsaX1Of0ILiTcnZjbfxA==",
      "license": "MIT"
    },
    "node_modules/@types/responselike": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/@types/responselike/-/responselike-1.0.3.tgz",
      "integrity": "sha512-H/+L+UkTV33uf49PH5pCAUBVPNj2nDBXTN+qS1dOwyyg24l3CcicicCA7ca+HMvJBZcFgl5r8e+RR6elsb4Lyw==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/triple-beam": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/@types/triple-beam/-/triple-beam-1.3.5.tgz",
      "integrity": "sha512-6WaYesThRMCl19iryMYP7/x2OVgCtbIVflDGFpWnb9irXI3UjYE4AzmYuiUKY1AJstGijoY+MgUszMgRxIYTYw==",
      "license": "MIT"
    },
    "node_modules/@types/webidl-conversions": {
      "version": "7.0.3",
      "resolved": "https://registry.npmjs.org/@types/webidl-conversions/-/webidl-conversions-7.0.3.tgz",
      "integrity": "sha512-CiJJvcRtIgzadHCYXw7dqEnMNRjhGZlYK05Mj9OyktqV8uVT8fD2BFOB7S1uwBE3Kj2Z+4UyPmFw/Ixgw/LAlA=="
    },
    "node_modules/@types/whatwg-url": {
      "version": "11.0.5",
      "resolved": "https://registry.npmjs.org/@types/whatwg-url/-/whatwg-url-11.0.5.tgz",
      "integrity": "sha512-coYR071JRaHa+xoEvvYqvnIHaVqaYrLPbsufM9BF63HkwI5Lgmy2QR8Q5K/lYDYo5AK82wOvSOS0UsLTpTG7uQ==",
      "dependencies": {
        "@types/webidl-conversions": "*"
      }
    },
    "node_modules/@types/yauzl": {
      "version": "2.10.3",
      "resolved": "https://registry.npmjs.org/@types/yauzl/-/yauzl-2.10.3.tgz",
      "integrity": "sha512-oJoftv0LSuaDZE3Le4DbKX+KS9G36NzOeSap90UIK0yMA/NhKJhqlSGtNDORNRaIbQfzjXDrQa0ytJ6mNRGz/Q==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@webassemblyjs/ast": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/ast/-/ast-1.14.1.tgz",
      "integrity": "sha512-nuBEDgQfm1ccRp/8bCQrx1frohyufl4JlbMMZ4P1wpeOfDhF6FQkxZJ1b/e+PLwr6X1Nhw6OLme5usuBWYBvuQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/helper-numbers": "1.13.2",
        "@webassemblyjs/helper-wasm-bytecode": "1.13.2"
      }
    },
    "node_modules/@webassemblyjs/floating-point-hex-parser": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/floating-point-hex-parser/-/floating-point-hex-parser-1.13.2.tgz",
      "integrity": "sha512-6oXyTOzbKxGH4steLbLNOu71Oj+C8Lg34n6CqRvqfS2O71BxY6ByfMDRhBytzknj9yGUPVJ1qIKhRlAwO1AovA==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@webassemblyjs/helper-api-error": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-api-error/-/helper-api-error-1.13.2.tgz",
      "integrity": "sha512-U56GMYxy4ZQCbDZd6JuvvNV/WFildOjsaWD3Tzzvmw/mas3cXzRJPMjP83JqEsgSbyrmaGjBfDtV7KDXV9UzFQ==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@webassemblyjs/helper-buffer": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-buffer/-/helper-buffer-1.14.1.tgz",
      "integrity": "sha512-jyH7wtcHiKssDtFPRB+iQdxlDf96m0E39yb0k5uJVhFGleZFoNw1c4aeIcVUPPbXUVJ94wwnMOAqUHyzoEPVMA==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@webassemblyjs/helper-numbers": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-numbers/-/helper-numbers-1.13.2.tgz",
      "integrity": "sha512-FE8aCmS5Q6eQYcV3gI35O4J789wlQA+7JrqTTpJqn5emA4U2hvwJmvFRC0HODS+3Ye6WioDklgd6scJ3+PLnEA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/floating-point-hex-parser": "1.13.2",
        "@webassemblyjs/helper-api-error": "1.13.2",
        "@xtuc/long": "4.2.2"
      }
    },
    "node_modules/@webassemblyjs/helper-wasm-bytecode": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-wasm-bytecode/-/helper-wasm-bytecode-1.13.2.tgz",
      "integrity": "sha512-3QbLKy93F0EAIXLh0ogEVR6rOubA9AoZ+WRYhNbFyuB70j3dRdwH9g+qXhLAO0kiYGlg3TxDV+I4rQTr/YNXkA==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@webassemblyjs/helper-wasm-section": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-wasm-section/-/helper-wasm-section-1.14.1.tgz",
      "integrity": "sha512-ds5mXEqTJ6oxRoqjhWDU83OgzAYjwsCV8Lo/N+oRsNDmx/ZDpqalmrtgOMkHwxsG0iI//3BwWAErYRHtgn0dZw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/ast": "1.14.1",
        "@webassemblyjs/helper-buffer": "1.14.1",
        "@webassemblyjs/helper-wasm-bytecode": "1.13.2",
        "@webassemblyjs/wasm-gen": "1.14.1"
      }
    },
    "node_modules/@webassemblyjs/ieee754": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/ieee754/-/ieee754-1.13.2.tgz",
      "integrity": "sha512-4LtOzh58S/5lX4ITKxnAK2USuNEvpdVV9AlgGQb8rJDHaLeHciwG4zlGr0j/SNWlr7x3vO1lDEsuePvtcDNCkw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@xtuc/ieee754": "^1.2.0"
      }
    },
    "node_modules/@webassemblyjs/leb128": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/leb128/-/leb128-1.13.2.tgz",
      "integrity": "sha512-Lde1oNoIdzVzdkNEAWZ1dZ5orIbff80YPdHx20mrHwHrVNNTjNr8E3xz9BdpcGqRQbAEa+fkrCb+fRFTl/6sQw==",
      "license": "Apache-2.0",
      "peer": true,
      "dependencies": {
        "@xtuc/long": "4.2.2"
      }
    },
    "node_modules/@webassemblyjs/utf8": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/utf8/-/utf8-1.13.2.tgz",
      "integrity": "sha512-3NQWGjKTASY1xV5m7Hr0iPeXD9+RDobLll3T9d2AO+g3my8xy5peVyjSag4I50mR1bBSN/Ct12lo+R9tJk0NZQ==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@webassemblyjs/wasm-edit": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-edit/-/wasm-edit-1.14.1.tgz",
      "integrity": "sha512-RNJUIQH/J8iA/1NzlE4N7KtyZNHi3w7at7hDjvRNm5rcUXa00z1vRz3glZoULfJ5mpvYhLybmVcwcjGrC1pRrQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/ast": "1.14.1",
        "@webassemblyjs/helper-buffer": "1.14.1",
        "@webassemblyjs/helper-wasm-bytecode": "1.13.2",
        "@webassemblyjs/helper-wasm-section": "1.14.1",
        "@webassemblyjs/wasm-gen": "1.14.1",
        "@webassemblyjs/wasm-opt": "1.14.1",
        "@webassemblyjs/wasm-parser": "1.14.1",
        "@webassemblyjs/wast-printer": "1.14.1"
      }
    },
    "node_modules/@webassemblyjs/wasm-gen": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-gen/-/wasm-gen-1.14.1.tgz",
      "integrity": "sha512-AmomSIjP8ZbfGQhumkNvgC33AY7qtMCXnN6bL2u2Js4gVCg8fp735aEiMSBbDR7UQIj90n4wKAFUSEd0QN2Ukg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/ast": "1.14.1",
        "@webassemblyjs/helper-wasm-bytecode": "1.13.2",
        "@webassemblyjs/ieee754": "1.13.2",
        "@webassemblyjs/leb128": "1.13.2",
        "@webassemblyjs/utf8": "1.13.2"
      }
    },
    "node_modules/@webassemblyjs/wasm-opt": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-opt/-/wasm-opt-1.14.1.tgz",
      "integrity": "sha512-PTcKLUNvBqnY2U6E5bdOQcSM+oVP/PmrDY9NzowJjislEjwP/C4an2303MCVS2Mg9d3AJpIGdUFIQQWbPds0Sw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/ast": "1.14.1",
        "@webassemblyjs/helper-buffer": "1.14.1",
        "@webassemblyjs/wasm-gen": "1.14.1",
        "@webassemblyjs/wasm-parser": "1.14.1"
      }
    },
    "node_modules/@webassemblyjs/wasm-parser": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-parser/-/wasm-parser-1.14.1.tgz",
      "integrity": "sha512-JLBl+KZ0R5qB7mCnud/yyX08jWFw5MsoalJ1pQ4EdFlgj9VdXKGuENGsiCIjegI1W7p91rUlcB/LB5yRJKNTcQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/ast": "1.14.1",
        "@webassemblyjs/helper-api-error": "1.13.2",
        "@webassemblyjs/helper-wasm-bytecode": "1.13.2",
        "@webassemblyjs/ieee754": "1.13.2",
        "@webassemblyjs/leb128": "1.13.2",
        "@webassemblyjs/utf8": "1.13.2"
      }
    },
    "node_modules/@webassemblyjs/wast-printer": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wast-printer/-/wast-printer-1.14.1.tgz",
      "integrity": "sha512-kPSSXE6De1XOR820C90RIo2ogvZG+c3KiHzqUoO/F34Y2shGzesfqv7o57xrxovZJH/MetF5UjroJ/R/3isoiw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/ast": "1.14.1",
        "@xtuc/long": "4.2.2"
      }
    },
    "node_modules/@xtuc/ieee754": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@xtuc/ieee754/-/ieee754-1.2.0.tgz",
      "integrity": "sha512-DX8nKgqcGwsc0eJSqYt5lwP4DH5FlHnmuWWBRy7X0NcaGR0ZtuyeESgMwTYVEtxmsNGY+qit4QYT/MIYTOTPeA==",
      "license": "BSD-3-Clause",
      "peer": true
    },
    "node_modules/@xtuc/long": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/@xtuc/long/-/long-4.2.2.tgz",
      "integrity": "sha512-NuHqBY1PB/D8xU6s/thBgOAiAP7HOYDQ32+BFZILJ8ivkUkAHQnWfn6WhL79Owj1qmUnoN/YPhktdIoucipkAQ==",
      "license": "Apache-2.0",
      "peer": true
    },
    "node_modules/@yarnpkg/lockfile": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@yarnpkg/lockfile/-/lockfile-1.1.0.tgz",
      "integrity": "sha512-GpSwvyXOcOOlV70vbnzjj4fW5xW/FdUF6nQEt1ENy7m4ZCczi1+/buVUPAqmGfqznsORNFzUMjctTIp8a9tuCQ==",
      "license": "BSD-2-Clause"
    },
    "node_modules/abort-controller": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/abort-controller/-/abort-controller-3.0.0.tgz",
      "integrity": "sha512-h8lQ8tacZYnR3vNQTgibj+tODHI5/+l06Au2Pcriv/Gmet0eaj4TwWH41sO9wnHDiQsEj19q0drzdWdeAHtweg==",
      "license": "MIT",
      "dependencies": {
        "event-target-shim": "^5.0.0"
      },
      "engines": {
        "node": ">=6.5"
      }
    },
    "node_modules/accepts": {
      "version": "1.3.8",
      "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz",
      "integrity": "sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==",
      "license": "MIT",
      "dependencies": {
        "mime-types": "~2.1.34",
        "negotiator": "0.6.3"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/acorn": {
      "version": "8.15.0",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz",
      "integrity": "sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==",
      "license": "MIT",
      "peer": true,
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/agent-base": {
      "version": "7.1.4",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-7.1.4.tgz",
      "integrity": "sha512-MnA+YT8fwfJPgBx3m60MNqakm30XOkyIoH1y6huTQvC0PwZG7ki8NacLBcrPbNoo8vEZy7Jpuk7+jMO+CUovTQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/ajv": {
      "version": "8.17.1",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-8.17.1.tgz",
      "integrity": "sha512-B/gBuNg5SiMTrPkC+A2+cW0RszwxYmn6VYxB/inlBStS5nx6xHIt/ehKRhIMhqusl7a8LjQoZnjCs5vhwxOQ1g==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "fast-deep-equal": "^3.1.3",
        "fast-uri": "^3.0.1",
        "json-schema-traverse": "^1.0.0",
        "require-from-string": "^2.0.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/ajv-formats": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/ajv-formats/-/ajv-formats-2.1.1.tgz",
      "integrity": "sha512-Wx0Kx52hxE7C18hkMEggYlEifqWZtYaRgouJor+WMdPnQyEK13vgEWyVNup7SoeeoLMsr4kf5h6dOW11I15MUA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "ajv": "^8.0.0"
      },
      "peerDependencies": {
        "ajv": "^8.0.0"
      },
      "peerDependenciesMeta": {
        "ajv": {
          "optional": true
        }
      }
    },
    "node_modules/ajv-keywords": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-5.1.0.tgz",
      "integrity": "sha512-YCS/JNFAUyr5vAuhk1DWm1CBxRHW9LbJ2ozWeemrIqpbsqKjHVxYPyi5GC0rjZIT5JxJ3virVTS8wk4i/Z+krw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "fast-deep-equal": "^3.1.3"
      },
      "peerDependencies": {
        "ajv": "^8.8.2"
      }
    },
    "node_modules/ansi-align": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/ansi-align/-/ansi-align-3.0.1.tgz",
      "integrity": "sha512-IOfwwBF5iczOjp/WeY4YxyjqAFMQoZufdQWDd19SEExbVLNXqvpzSJ/M7Za4/sCPmQ0+GRquoA7bGcINcxew6w==",
      "license": "ISC",
      "dependencies": {
        "string-width": "^4.1.0"
      }
    },
    "node_modules/ansi-escapes": {
      "version": "4.3.2",
      "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz",
      "integrity": "sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==",
      "license": "MIT",
      "dependencies": {
        "type-fest": "^0.21.3"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/ansi-escapes/node_modules/type-fest": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.21.3.tgz",
      "integrity": "sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==",
      "license": "(MIT OR CC0-1.0)",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/ansi-regex": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.1.tgz",
      "integrity": "sha512-ILlv4k/3f6vfQ4OoP2AGvirOktlQ98ZEL1k9FaQjxa3L1abBgbuTDAdPOpvbGncC0BTVQrl+OM8xZGK6tWXt7g==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "license": "MIT",
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/any-base": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/any-base/-/any-base-1.1.0.tgz",
      "integrity": "sha512-uMgjozySS8adZZYePpaWs8cxB9/kdzmpX6SgJZ+wbz1K5eYk5QMYDVJaZKhxyIHUdnnJkfR7SVgStgH7LkGUyg=="
    },
    "node_modules/anymatch": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
      "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
      "license": "ISC",
      "dependencies": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/apache-crypt": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/apache-crypt/-/apache-crypt-1.2.6.tgz",
      "integrity": "sha512-072WetlM4blL8PREJVeY+WHiUh1R5VNt2HfceGS8aKqttPHcmqE5pkKuXPz/ULmJOFkc8Hw3kfKl6vy7Qka6DA==",
      "license": "MIT",
      "dependencies": {
        "unix-crypt-td-js": "^1.1.4"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/apache-md5": {
      "version": "1.1.8",
      "resolved": "https://registry.npmjs.org/apache-md5/-/apache-md5-1.1.8.tgz",
      "integrity": "sha512-FCAJojipPn0bXjuEpjOOOMN8FZDkxfWWp4JGN9mifU2IhxvKyXZYqpzPHdnTSUpmPDy+tsslB6Z1g+Vg6nVbYA==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/archiver": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/archiver/-/archiver-5.3.2.tgz",
      "integrity": "sha512-+25nxyyznAXF7Nef3y0EbBeqmGZgeN/BxHX29Rs39djAfaFalmQ89SE6CWyDCHzGL0yt/ycBtNOmGTW0FyGWNw==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "archiver-utils": "^2.1.0",
        "async": "^3.2.4",
        "buffer-crc32": "^0.2.1",
        "readable-stream": "^3.6.0",
        "readdir-glob": "^1.1.2",
        "tar-stream": "^2.2.0",
        "zip-stream": "^4.1.0"
      },
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/archiver-utils": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/archiver-utils/-/archiver-utils-2.1.0.tgz",
      "integrity": "sha512-bEL/yUb/fNNiNTuUz979Z0Yg5L+LzLxGJz8x79lYmR54fmTIb6ob/hNQgkQnIUDWIFjZVQwl9Xs356I6BAMHfw==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "glob": "^7.1.4",
        "graceful-fs": "^4.2.0",
        "lazystream": "^1.0.0",
        "lodash.defaults": "^4.2.0",
        "lodash.difference": "^4.5.0",
        "lodash.flatten": "^4.4.0",
        "lodash.isplainobject": "^4.0.6",
        "lodash.union": "^4.6.0",
        "normalize-path": "^3.0.0",
        "readable-stream": "^2.0.0"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/archiver-utils/node_modules/readable-stream": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.8.tgz",
      "integrity": "sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "core-util-is": "~1.0.0",
        "inherits": "~2.0.3",
        "isarray": "~1.0.0",
        "process-nextick-args": "~2.0.0",
        "safe-buffer": "~5.1.1",
        "string_decoder": "~1.1.1",
        "util-deprecate": "~1.0.1"
      }
    },
    "node_modules/archiver-utils/node_modules/safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/archiver-utils/node_modules/string_decoder": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "safe-buffer": "~5.1.0"
      }
    },
    "node_modules/argparse": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
      "license": "MIT",
      "dependencies": {
        "sprintf-js": "~1.0.2"
      }
    },
    "node_modules/argparse/node_modules/sprintf-js": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
      "integrity": "sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==",
      "license": "BSD-3-Clause"
    },
    "node_modules/arr-union": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-3.1.0.tgz",
      "integrity": "sha512-sKpyeERZ02v1FeCZT8lrfJq5u6goHCtpTAzPwJYe7c8SPFOboNjNg1vz2L4VTn9T4PQxEx13TbXLmYUcS6Ug7Q==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/array-back": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/array-back/-/array-back-4.0.2.tgz",
      "integrity": "sha512-NbdMezxqf94cnNfWLL7V/im0Ub+Anbb0IoZhvzie8+4HJ4nMQuzHuy49FkGYCJK2yAloZ3meiB6AVMClbrI1vg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/array-buffer-byte-length": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.2.tgz",
      "integrity": "sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "is-array-buffer": "^3.0.5"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array-flatten": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
      "integrity": "sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==",
      "license": "MIT"
    },
    "node_modules/array-uniq": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/array-uniq/-/array-uniq-1.0.3.tgz",
      "integrity": "sha512-MNha4BWQ6JbwhFhj03YK552f7cb3AzoE8SzeljgChvL1dl3IcvggXVz1DilzySZkCja+CXuZbdW7yATchWn8/Q==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/arraybuffer.prototype.slice": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.4.tgz",
      "integrity": "sha512-BNoCY6SXXPQ7gF2opIP4GBE+Xw7U+pHMYKuzjgCN3GwiaIR09UUeKfheyIry77QtrCBlC0KK0q5/TER/tYh3PQ==",
      "license": "MIT",
      "dependencies": {
        "array-buffer-byte-length": "^1.0.1",
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6",
        "is-array-buffer": "^3.0.4"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/arrify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz",
      "integrity": "sha512-3CYzex9M9FGQjCGMGyi6/31c8GJbgb0qGyrx5HWxPd0aCwh4cB2YjMb2Xf9UuoogrMrlO9cTqnB5rI5GHZTcUA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/ast-types": {
      "version": "0.13.4",
      "resolved": "https://registry.npmjs.org/ast-types/-/ast-types-0.13.4.tgz",
      "integrity": "sha512-x1FCFnFifvYDDzTaLII71vG5uvDwgtmDTEVWAxrgeiR8VjMONcCXJx7E+USjDtHlwFmt9MysbqgF9b9Vjr6w+w==",
      "license": "MIT",
      "dependencies": {
        "tslib": "^2.0.1"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/ast-types/node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/async": {
      "version": "3.2.6",
      "resolved": "https://registry.npmjs.org/async/-/async-3.2.6.tgz",
      "integrity": "sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==",
      "license": "MIT"
    },
    "node_modules/async-function": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/async-function/-/async-function-1.0.0.tgz",
      "integrity": "sha512-hsU18Ae8CDTR6Kgu9DYf0EbCr/a5iGL0rytQDobUcdpYOKokk8LEjVphnXkDkgpi0wYVsqrXuP0bZxJaTqdgoA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==",
      "license": "MIT"
    },
    "node_modules/at-least-node": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/at-least-node/-/at-least-node-1.0.0.tgz",
      "integrity": "sha512-+q/t7Ekv1EDY2l6Gda6LLiX14rU9TV20Wa3ofeQmwPFZbOMo9DXrLbOjFaaclkXKWidIaopwAObQDqwWtGUjqg==",
      "license": "ISC",
      "engines": {
        "node": ">= 4.0.0"
      }
    },
    "node_modules/atob": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/atob/-/atob-2.1.2.tgz",
      "integrity": "sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg==",
      "license": "(MIT OR Apache-2.0)",
      "bin": {
        "atob": "bin/atob.js"
      },
      "engines": {
        "node": ">= 4.5.0"
      }
    },
    "node_modules/available-typed-arrays": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz",
      "integrity": "sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==",
      "license": "MIT",
      "dependencies": {
        "possible-typed-array-names": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/aws4": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.13.2.tgz",
      "integrity": "sha512-lHe62zvbTB5eEABUVi/AwVh0ZKY9rMMDhmm+eeyuuUQbQ3+J+fONVQOZyj+DdrvD4BY33uYniyRJ4UJIaSKAfw==",
      "license": "MIT"
    },
    "node_modules/axios": {
      "version": "1.10.0",
      "resolved": "https://registry.npmjs.org/axios/-/axios-1.10.0.tgz",
      "integrity": "sha512-/1xYAC4MP/HEG+3duIhFr4ZQXR4sQXOIe+o6sdqzeykGLx6Upp/1p8MHqhINOvGeP7xyNHe7tsiJByc4SSVUxw==",
      "license": "MIT",
      "dependencies": {
        "follow-redirects": "^1.15.6",
        "form-data": "^4.0.0",
        "proxy-from-env": "^1.1.0"
      }
    },
    "node_modules/b4a": {
      "version": "1.6.7",
      "resolved": "https://registry.npmjs.org/b4a/-/b4a-1.6.7.tgz",
      "integrity": "sha512-OnAYlL5b7LEkALw87fUVafQw5rVR9RjwGd4KUwNQ6DrrNmaVaUCgLipfVlzrPQ4tWOR9P0IXGNOx50jYCCdSJg==",
      "license": "Apache-2.0"
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "license": "MIT"
    },
    "node_modules/bare-events": {
      "version": "2.5.4",
      "resolved": "https://registry.npmjs.org/bare-events/-/bare-events-2.5.4.tgz",
      "integrity": "sha512-+gFfDkR8pj4/TrWCGUGWmJIkBwuxPS5F+a5yWjOHQt2hHvNZd5YLzadjmDUtFmMM4y429bnKLa8bYBMHcYdnQA==",
      "license": "Apache-2.0",
      "optional": true
    },
    "node_modules/bare-fs": {
      "version": "4.1.6",
      "resolved": "https://registry.npmjs.org/bare-fs/-/bare-fs-4.1.6.tgz",
      "integrity": "sha512-25RsLF33BqooOEFNdMcEhMpJy8EoR88zSMrnOQOaM3USnOK2VmaJ1uaQEwPA6AQjrv1lXChScosN6CzbwbO9OQ==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "bare-events": "^2.5.4",
        "bare-path": "^3.0.0",
        "bare-stream": "^2.6.4"
      },
      "engines": {
        "bare": ">=1.16.0"
      },
      "peerDependencies": {
        "bare-buffer": "*"
      },
      "peerDependenciesMeta": {
        "bare-buffer": {
          "optional": true
        }
      }
    },
    "node_modules/bare-os": {
      "version": "3.6.1",
      "resolved": "https://registry.npmjs.org/bare-os/-/bare-os-3.6.1.tgz",
      "integrity": "sha512-uaIjxokhFidJP+bmmvKSgiMzj2sV5GPHaZVAIktcxcpCyBFFWO+YlikVAdhmUo2vYFvFhOXIAlldqV29L8126g==",
      "license": "Apache-2.0",
      "optional": true,
      "engines": {
        "bare": ">=1.14.0"
      }
    },
    "node_modules/bare-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/bare-path/-/bare-path-3.0.0.tgz",
      "integrity": "sha512-tyfW2cQcB5NN8Saijrhqn0Zh7AnFNsnczRcuWODH0eYAXBsJ5gVxAUuNr7tsHSC6IZ77cA0SitzT+s47kot8Mw==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "bare-os": "^3.0.1"
      }
    },
    "node_modules/bare-stream": {
      "version": "2.6.5",
      "resolved": "https://registry.npmjs.org/bare-stream/-/bare-stream-2.6.5.tgz",
      "integrity": "sha512-jSmxKJNJmHySi6hC42zlZnq00rga4jjxcgNZjY9N5WlOe/iOoGRtdwGsHzQv2RlH2KOYMwGUXhf2zXd32BA9RA==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "streamx": "^2.21.0"
      },
      "peerDependencies": {
        "bare-buffer": "*",
        "bare-events": "*"
      },
      "peerDependenciesMeta": {
        "bare-buffer": {
          "optional": true
        },
        "bare-events": {
          "optional": true
        }
      }
    },
    "node_modules/base64-js": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
      "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/base64id": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/base64id/-/base64id-2.0.0.tgz",
      "integrity": "sha512-lGe34o6EHj9y3Kts9R4ZYs/Gr+6N7MCaMlIFA3F1R2O5/m7K06AxfSeO5530PEERE6/WyEg3lsuyw4GHlPZHog==",
      "license": "MIT",
      "engines": {
        "node": "^4.5.0 || >= 5.9"
      }
    },
    "node_modules/basic-auth": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/basic-auth/-/basic-auth-2.0.1.tgz",
      "integrity": "sha512-NF+epuEdnUYVlGuhaxbbq+dvJttwLnGY+YixlXlME5KpQ5W3CnXA5cVTneY3SPbPDRkcjMbifrwmFYcClgOZeg==",
      "license": "MIT",
      "dependencies": {
        "safe-buffer": "5.1.2"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/basic-auth/node_modules/safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
      "license": "MIT"
    },
    "node_modules/basic-ftp": {
      "version": "5.0.5",
      "resolved": "https://registry.npmjs.org/basic-ftp/-/basic-ftp-5.0.5.tgz",
      "integrity": "sha512-4Bcg1P8xhUuqcii/S0Z9wiHIrQVPMermM1any+MX5GeGD7faD3/msQUDGLol9wOcz4/jbg/WJnGqoJF6LiBdtg==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/bcryptjs": {
      "version": "2.4.3",
      "resolved": "https://registry.npmjs.org/bcryptjs/-/bcryptjs-2.4.3.tgz",
      "integrity": "sha512-V/Hy/X9Vt7f3BbPJEi8BdVFMByHi+jNXrYkW3huaybV/kQ0KJg0Y6PkEMbn+zeT+i+SiKZ/HMqJGIIt4LZDqNQ==",
      "license": "MIT"
    },
    "node_modules/big-integer": {
      "version": "1.6.52",
      "resolved": "https://registry.npmjs.org/big-integer/-/big-integer-1.6.52.tgz",
      "integrity": "sha512-QxD8cf2eVqJOOz63z6JIN9BzvVs/dlySa5HGSBH5xtR8dPteIRQnBxxKqkNTiT6jbDTF6jAfrd4oMcND9RGbQg==",
      "license": "Unlicense",
      "optional": true,
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/binary": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/binary/-/binary-0.3.0.tgz",
      "integrity": "sha512-D4H1y5KYwpJgK8wk1Cue5LLPgmwHKYSChkbspQg5JtVuR5ulGckxfR62H3AE9UDkdMC8yyXlqYihuz3Aqg2XZg==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "buffers": "~0.1.1",
        "chainsaw": "~0.1.0"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/binary-extensions": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
      "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/bindings": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/bindings/-/bindings-1.5.0.tgz",
      "integrity": "sha512-p2q/t/mhvuOj/UeLlV6566GD/guowlr0hHxClI0W9m7MWYkL1F0hLo+0Aexs9HSPCtR1SXQ0TD3MMKrXZajbiQ==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "file-uri-to-path": "1.0.0"
      }
    },
    "node_modules/bintrees": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/bintrees/-/bintrees-1.0.2.tgz",
      "integrity": "sha512-VOMgTMwjAaUG580SXn3LacVgjurrbMme7ZZNYGSSV7mmtY6QQRh0Eg3pwIcntQ77DErK1L0NxkbetjcoXzVwKw==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/bl": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/bl/-/bl-4.1.0.tgz",
      "integrity": "sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==",
      "license": "MIT",
      "dependencies": {
        "buffer": "^5.5.0",
        "inherits": "^2.0.4",
        "readable-stream": "^3.4.0"
      }
    },
    "node_modules/bluebird": {
      "version": "3.4.7",
      "resolved": "https://registry.npmjs.org/bluebird/-/bluebird-3.4.7.tgz",
      "integrity": "sha512-iD3898SR7sWVRHbiQv+sHUtHnMvC1o3nW5rAcqnq3uOn07DSAppZYUkIGslDz6gXC7HfunPe7YVBgoEJASPcHA==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/bmp-js": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/bmp-js/-/bmp-js-0.1.0.tgz",
      "integrity": "sha512-vHdS19CnY3hwiNdkaqk93DvjVLfbEcI8mys4UjuWrlX1haDmroo8o4xCzh4wD6DGV6HxRCyauwhHRqMTfERtjw=="
    },
    "node_modules/body-parser": {
      "version": "1.20.3",
      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.3.tgz",
      "integrity": "sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==",
      "license": "MIT",
      "dependencies": {
        "bytes": "3.1.2",
        "content-type": "~1.0.5",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "on-finished": "2.4.1",
        "qs": "6.13.0",
        "raw-body": "2.5.2",
        "type-is": "~1.6.18",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8",
        "npm": "1.2.8000 || >= 1.4.16"
      }
    },
    "node_modules/body-parser/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/body-parser/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "license": "MIT"
    },
    "node_modules/body-parser/node_modules/qs": {
      "version": "6.13.0",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.13.0.tgz",
      "integrity": "sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "side-channel": "^1.0.6"
      },
      "engines": {
        "node": ">=0.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/boxen": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/boxen/-/boxen-5.1.2.tgz",
      "integrity": "sha512-9gYgQKXx+1nP8mP7CzFyaUARhg7D3n1dF/FnErWmu9l6JvGpNUN278h0aSb+QjoiKSWG+iZ3uHrcqk0qrY9RQQ==",
      "license": "MIT",
      "dependencies": {
        "ansi-align": "^3.0.0",
        "camelcase": "^6.2.0",
        "chalk": "^4.1.0",
        "cli-boxes": "^2.2.1",
        "string-width": "^4.2.2",
        "type-fest": "^0.20.2",
        "widest-line": "^3.1.0",
        "wrap-ansi": "^7.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/boxen/node_modules/type-fest": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz",
      "integrity": "sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==",
      "license": "(MIT OR CC0-1.0)",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/brace-expansion": {
      "version": "1.1.12",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/braces": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
      "license": "MIT",
      "dependencies": {
        "fill-range": "^7.1.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/browserslist": {
      "version": "4.25.1",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.25.1.tgz",
      "integrity": "sha512-KGj0KoOMXLpSNkkEI6Z6mShmQy0bc1I+T7K9N81k4WWMrfz+6fQ6es80B/YLAeRoKvjYE1YSHHOW1qe9xIVzHw==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "caniuse-lite": "^1.0.30001726",
        "electron-to-chromium": "^1.5.173",
        "node-releases": "^2.0.19",
        "update-browserslist-db": "^1.1.3"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/bson": {
      "version": "6.10.4",
      "resolved": "https://registry.npmjs.org/bson/-/bson-6.10.4.tgz",
      "integrity": "sha512-WIsKqkSC0ABoBJuT1LEX+2HEvNmNKKgnTAyd0fL8qzK4SH2i9NXg+t08YtdZp/V9IZ33cxe3iV4yM0qg8lMQng==",
      "engines": {
        "node": ">=16.20.1"
      }
    },
    "node_modules/buffer": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
      "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.1.13"
      }
    },
    "node_modules/buffer-crc32": {
      "version": "0.2.13",
      "resolved": "https://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.13.tgz",
      "integrity": "sha512-VO9Ht/+p3SN7SKWqcrgEzjGbRSJYTx+Q1pTQC0wrWqHx0vpJraQ6GtHx8tvcg1rlK1byhU5gccxgOgj7B0TDkQ==",
      "license": "MIT",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/buffer-equal": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/buffer-equal/-/buffer-equal-0.0.1.tgz",
      "integrity": "sha512-RgSV6InVQ9ODPdLWJ5UAqBqJBOg370Nz6ZQtRzpt6nUjc8v0St97uJ4PYC6NztqIScrAXafKM3mZPMygSe1ggA==",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/buffer-from": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
      "license": "MIT"
    },
    "node_modules/buffer-indexof-polyfill": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/buffer-indexof-polyfill/-/buffer-indexof-polyfill-1.0.2.tgz",
      "integrity": "sha512-I7wzHwA3t1/lwXQh+A5PbNvJxgfo5r3xulgpYDB5zckTu/Z9oUK9biouBKQUjEqzaz3HnAT6TYoovmE+GqSf7A==",
      "license": "MIT",
      "optional": true,
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/bufferhelper": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/bufferhelper/-/bufferhelper-0.2.1.tgz",
      "integrity": "sha512-asncN5SO1YOZLCV3u26XtrbF9QXhSyq01nQOc1TFt9/gfOn7feOGJoVKk5Ewtj7wvFGPH/eGSKZ5qq/A4/PPfw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/buffers": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/buffers/-/buffers-0.1.1.tgz",
      "integrity": "sha512-9q/rDEGSb/Qsvv2qvzIzdluL5k7AaJOTrw23z9reQthrbF7is4CtlT0DXyO1oei2DCp4uojjzQ7igaSHp1kAEQ==",
      "optional": true,
      "engines": {
        "node": ">=0.2.0"
      }
    },
    "node_modules/bytes": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz",
      "integrity": "sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/cacheable-lookup": {
      "version": "5.0.4",
      "resolved": "https://registry.npmjs.org/cacheable-lookup/-/cacheable-lookup-5.0.4.tgz",
      "integrity": "sha512-2/kNscPhpcxrOigMZzbiWF7dz8ilhb/nIHU3EyZiXWXpeq/au8qJ8VhdftMkty3n7Gj6HIGalQG8oiBNB3AJgA==",
      "license": "MIT",
      "engines": {
        "node": ">=10.6.0"
      }
    },
    "node_modules/cacheable-request": {
      "version": "2.1.4",
      "resolved": "https://registry.npmjs.org/cacheable-request/-/cacheable-request-2.1.4.tgz",
      "integrity": "sha512-vag0O2LKZ/najSoUwDbVlnlCFvhBE/7mGTY2B5FgCBDcRD+oVV1HYTOwM6JZfMg/hIcM6IwnTZ1uQQL5/X3xIQ==",
      "license": "MIT",
      "dependencies": {
        "clone-response": "1.0.2",
        "get-stream": "3.0.0",
        "http-cache-semantics": "3.8.1",
        "keyv": "3.0.0",
        "lowercase-keys": "1.0.0",
        "normalize-url": "2.0.1",
        "responselike": "1.0.2"
      }
    },
    "node_modules/cacheable-request/node_modules/get-stream": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-3.0.0.tgz",
      "integrity": "sha512-GlhdIUuVakc8SJ6kK0zAFbiGzRFzNnY4jUuEbV9UROo4Y+0Ny4fjvcZFVTeDA4odpFyOQzaw6hXukJSq/f28sQ==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/cacheable-request/node_modules/lowercase-keys": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-1.0.0.tgz",
      "integrity": "sha512-RPlX0+PHuvxVDZ7xX+EBVAp4RsVxP/TdDSN2mJYdiq1Lc4Hz7EUSjUI7RZrKKlmrIzVhf6Jo2stj7++gVarS0A==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/cacheable-request/node_modules/normalize-url": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-2.0.1.tgz",
      "integrity": "sha512-D6MUW4K/VzoJ4rJ01JFKxDrtY1v9wrgzCX5f2qj/lzH1m/lW6MhUZFKerVsnyjOhOsYzI9Kqqak+10l4LvLpMw==",
      "license": "MIT",
      "dependencies": {
        "prepend-http": "^2.0.0",
        "query-string": "^5.0.1",
        "sort-keys": "^2.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/cacheable-request/node_modules/query-string": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/query-string/-/query-string-5.1.1.tgz",
      "integrity": "sha512-gjWOsm2SoGlgLEdAGt7a6slVOk9mGiXmPFMqrEhLQ68rhQuBnpfs3+EmlvqKyxnCo9/PPlF+9MtY02S1aFg+Jw==",
      "license": "MIT",
      "dependencies": {
        "decode-uri-component": "^0.2.0",
        "object-assign": "^4.1.0",
        "strict-uri-encode": "^1.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/cacheable-request/node_modules/strict-uri-encode": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/strict-uri-encode/-/strict-uri-encode-1.1.0.tgz",
      "integrity": "sha512-R3f198pcvnB+5IpnBlRkphuE9n46WyVl8I39W/ZUTZLz4nqSP/oLYUrcnJrw462Ds8he4YKMov2efsTIw1BDGQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/call-bind": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.8.tgz",
      "integrity": "sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.0",
        "es-define-property": "^1.0.0",
        "get-intrinsic": "^1.2.4",
        "set-function-length": "^1.2.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/call-bind-apply-helpers": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
      "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/call-bound": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz",
      "integrity": "sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "get-intrinsic": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/camel-case": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/camel-case/-/camel-case-4.1.2.tgz",
      "integrity": "sha512-gxGWBrTT1JuMx6R+o5PTXMmUnhnVzLQ9SNutD4YqKtI6ap897t3tKECYla6gCWEkplXnlNybEkZg9GEGxKFCgw==",
      "license": "MIT",
      "dependencies": {
        "pascal-case": "^3.1.2",
        "tslib": "^2.0.3"
      }
    },
    "node_modules/camel-case/node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/camelcase": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-6.3.0.tgz",
      "integrity": "sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/camelcase-keys": {
      "version": "6.2.2",
      "resolved": "https://registry.npmjs.org/camelcase-keys/-/camelcase-keys-6.2.2.tgz",
      "integrity": "sha512-YrwaA0vEKazPBkn0ipTiMpSajYDSe+KjQfrjhcBMxJt/znbvlHd8Pw/Vamaz5EB4Wfhs3SUR3Z9mwRu/P3s3Yg==",
      "license": "MIT",
      "dependencies": {
        "camelcase": "^5.3.1",
        "map-obj": "^4.0.0",
        "quick-lru": "^4.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/camelcase-keys/node_modules/camelcase": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001727",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001727.tgz",
      "integrity": "sha512-pB68nIHmbN6L/4C6MH1DokyR3bYqFwjaSs/sWDHGj4CTcFtQUQMuJftVwWkXq7mNWOybD3KhUv3oWHoGxgP14Q==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "CC-BY-4.0",
      "peer": true
    },
    "node_modules/canvas": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/canvas/-/canvas-3.1.2.tgz",
      "integrity": "sha512-Z/tzFAcBzoCvJlOSlCnoekh1Gu8YMn0J51+UAuXJAbW1Z6I9l2mZgdD7738MepoeeIcUdDtbMnOg6cC7GJxy/g==",
      "hasInstallScript": true,
      "license": "MIT",
      "dependencies": {
        "node-addon-api": "^7.0.0",
        "prebuild-install": "^7.1.3"
      },
      "engines": {
        "node": "^18.12.0 || >= 20.9.0"
      }
    },
    "node_modules/capital-case": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/capital-case/-/capital-case-1.0.4.tgz",
      "integrity": "sha512-ds37W8CytHgwnhGGTi88pcPyR15qoNkOpYwmMMfnWqqWgESapLqvDx6huFjQ5vqWSn2Z06173XNA7LtMOeUh1A==",
      "license": "MIT",
      "dependencies": {
        "no-case": "^3.0.4",
        "tslib": "^2.0.3",
        "upper-case-first": "^2.0.2"
      }
    },
    "node_modules/capital-case/node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/centra": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/centra/-/centra-2.7.0.tgz",
      "integrity": "sha512-PbFMgMSrmgx6uxCdm57RUos9Tc3fclMvhLSATYN39XsDV29B89zZ3KA89jmY0vwSGazyU+uerqwa6t+KaodPcg==",
      "dependencies": {
        "follow-redirects": "^1.15.6"
      }
    },
    "node_modules/cfonts": {
      "version": "2.10.1",
      "resolved": "https://registry.npmjs.org/cfonts/-/cfonts-2.10.1.tgz",
      "integrity": "sha512-l5IcLv4SaOdL/EGR6BpOF5SEro88VcGJJ6+xbvJb+wXi19YC6UeHE/brv7a4vIcLZopnt3Ys3zWeNnyfB04UPg==",
      "license": "GPL-2.0",
      "dependencies": {
        "chalk": "^4",
        "window-size": "^1.1.1"
      },
      "bin": {
        "cfonts": "bin/index.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/chainsaw": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/chainsaw/-/chainsaw-0.1.0.tgz",
      "integrity": "sha512-75kWfWt6MEKNC8xYXIdRpDehRYY/tNSgwKaJq+dbbDcxORuVrrQ+SEHoWsniVn9XPYfP4gmdWIeDk/4YNp1rNQ==",
      "license": "MIT/X11",
      "optional": true,
      "dependencies": {
        "traverse": ">=0.3.0 <0.4"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/change-case": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/change-case/-/change-case-4.1.2.tgz",
      "integrity": "sha512-bSxY2ws9OtviILG1EiY5K7NNxkqg/JnRnFxLtKQ96JaviiIxi7djMrSd0ECT9AC+lttClmYwKw53BWpOMblo7A==",
      "license": "MIT",
      "dependencies": {
        "camel-case": "^4.1.2",
        "capital-case": "^1.0.4",
        "constant-case": "^3.0.4",
        "dot-case": "^3.0.4",
        "header-case": "^2.0.4",
        "no-case": "^3.0.4",
        "param-case": "^3.0.4",
        "pascal-case": "^3.1.2",
        "path-case": "^3.0.4",
        "sentence-case": "^3.0.4",
        "snake-case": "^3.0.4",
        "tslib": "^2.0.3"
      }
    },
    "node_modules/change-case/node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/charset": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/charset/-/charset-1.0.1.tgz",
      "integrity": "sha512-6dVyOOYjpfFcL1Y4qChrAoQLRHvj2ziyhcm0QJlhOcAhykL/k1kTUPbeo+87MNRTRdk2OIIsIXbuF3x2wi5EXg==",
      "license": "MIT",
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/chess-engine": {
      "version": "0.0.0",
      "resolved": "https://registry.npmjs.org/chess-engine/-/chess-engine-0.0.0.tgz",
      "integrity": "sha512-SZPNVc6U3dIS3QGeaV8IhAzAwpXU8ODglDOIifM3Z09v+iqgPMi1V6KcS7ePe75nCY4ps/Jpg5eTpC+41tTNEQ=="
    },
    "node_modules/chess.js": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/chess.js/-/chess.js-1.4.0.tgz",
      "integrity": "sha512-BBJgrrtKQOzFLonR0l+k64A98NLemPwNsCskwb+29bRwobUa4iTm51E1kwGPbWXAcfdDa18nad6vpPPKPWarqw==",
      "license": "BSD-2-Clause"
    },
    "node_modules/chokidar": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
      "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
      "license": "MIT",
      "dependencies": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      },
      "engines": {
        "node": ">= 8.10.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/chownr": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz",
      "integrity": "sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg==",
      "license": "ISC"
    },
    "node_modules/chrome-launcher": {
      "version": "0.15.2",
      "resolved": "https://registry.npmjs.org/chrome-launcher/-/chrome-launcher-0.15.2.tgz",
      "integrity": "sha512-zdLEwNo3aUVzIhKhTtXfxhdvZhUghrnmkvcAq2NoDd+LeOHKf03H5jwZ8T/STsAlzyALkBVK552iaG1fGf1xVQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@types/node": "*",
        "escape-string-regexp": "^4.0.0",
        "is-wsl": "^2.2.0",
        "lighthouse-logger": "^1.0.0"
      },
      "bin": {
        "print-chrome-path": "bin/print-chrome-path.js"
      },
      "engines": {
        "node": ">=12.13.0"
      }
    },
    "node_modules/chrome-trace-event": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/chrome-trace-event/-/chrome-trace-event-1.0.4.tgz",
      "integrity": "sha512-rNjApaLzuwaOTjCiT8lSDdGN1APCiqkChLMJxJPWLunPAt5fy8xgU9/jNOchV84wfIxrA0lRQB7oCT8jrn/wrQ==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=6.0"
      }
    },
    "node_modules/chromium-bidi": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/chromium-bidi/-/chromium-bidi-0.11.0.tgz",
      "integrity": "sha512-6CJWHkNRoyZyjV9Rwv2lYONZf1Xm0IuDyNq97nwSsxxP3wf5Bwy15K5rOvVKMtJ127jJBmxFUanSAOjgFRxgrA==",
      "license": "Apache-2.0",
      "dependencies": {
        "mitt": "3.0.1",
        "zod": "3.23.8"
      },
      "peerDependencies": {
        "devtools-protocol": "*"
      }
    },
    "node_modules/ci-info": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
      "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
      "license": "MIT"
    },
    "node_modules/cli-boxes": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/cli-boxes/-/cli-boxes-2.2.1.tgz",
      "integrity": "sha512-y4coMcylgSCdVinjiDBuR8PCC2bLjyGTwEmPb9NHR/QaNU6EUOXcTY/s6VjGMD6ENSEaeQYHCY0GNGS5jfMwPw==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/cli-cursor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-3.1.0.tgz",
      "integrity": "sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==",
      "license": "MIT",
      "dependencies": {
        "restore-cursor": "^3.1.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui": {
      "version": "8.0.1",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz",
      "integrity": "sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==",
      "license": "ISC",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.1",
        "wrap-ansi": "^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/cliui/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/clone-deep": {
      "version": "0.2.4",
      "resolved": "https://registry.npmjs.org/clone-deep/-/clone-deep-0.2.4.tgz",
      "integrity": "sha512-we+NuQo2DHhSl+DP6jlUiAhyAjBQrYnpOk15rN6c6JSPScjiCLh8IbSU+VTcph6YS3o7mASE8a0+gbZ7ChLpgg==",
      "license": "MIT",
      "dependencies": {
        "for-own": "^0.1.3",
        "is-plain-object": "^2.0.1",
        "kind-of": "^3.0.2",
        "lazy-cache": "^1.0.3",
        "shallow-clone": "^0.1.2"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/clone-deep/node_modules/kind-of": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
      "integrity": "sha512-NOW9QQXMoZGg/oqnVNoNTTIFEIid1627WCffUBJEdMxYApq7mNE7CpzucIPc+ZQg25Phej7IJSmX3hO+oblOtQ==",
      "license": "MIT",
      "dependencies": {
        "is-buffer": "^1.1.5"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/clone-response": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/clone-response/-/clone-response-1.0.2.tgz",
      "integrity": "sha512-yjLXh88P599UOyPTFX0POsd7WxnbsVsGohcwzHOLspIhhpalPw1BcqED8NblyZLKcGrL8dTgMlcaZxV2jAD41Q==",
      "license": "MIT",
      "dependencies": {
        "mimic-response": "^1.0.0"
      }
    },
    "node_modules/clone-response/node_modules/mimic-response": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
      "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/cloudflared": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/cloudflared/-/cloudflared-0.5.3.tgz",
      "integrity": "sha512-v2Hxnm9uZsc3ub4hf7xEzn1MSovY2mGZR2SB/xrvMuV6l+YfFLbE8KYPNuEdpFOS6sWldOvy/bpNhKvMQKsM+Q==",
      "hasInstallScript": true,
      "license": "MIT",
      "bin": {
        "cloudflared": "lib/cloudflared.js"
      }
    },
    "node_modules/code-block-writer": {
      "version": "10.1.1",
      "resolved": "https://registry.npmjs.org/code-block-writer/-/code-block-writer-10.1.1.tgz",
      "integrity": "sha512-67ueh2IRGst/51p0n6FvPrnRjAGHY5F8xdjkgrYE7DDzpJe6qA07RYQ9VcoUeo5ATOjSOiWpSL3SWBRRbempMw==",
      "license": "MIT"
    },
    "node_modules/color": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/color/-/color-3.2.1.tgz",
      "integrity": "sha512-aBl7dZI9ENN6fUGC7mWpMTPNHmWUSNan9tuWN6ahh5ZLNk9baLJOnSMlrQkHcrfFgz2/RigjUVAjdx36VcemKA==",
      "license": "MIT",
      "dependencies": {
        "color-convert": "^1.9.3",
        "color-string": "^1.6.0"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "license": "MIT",
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
      "license": "MIT"
    },
    "node_modules/color-string": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/color-string/-/color-string-1.9.1.tgz",
      "integrity": "sha512-shrVawQFojnZv6xM40anx4CkoDP+fZsw/ZerEMsW/pyzsRbElpsL/DBVW7q3ExxwusdNXI3lXpuhEZkzs8p5Eg==",
      "license": "MIT",
      "dependencies": {
        "color-name": "^1.0.0",
        "simple-swizzle": "^0.2.2"
      }
    },
    "node_modules/color/node_modules/color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "license": "MIT",
      "dependencies": {
        "color-name": "1.1.3"
      }
    },
    "node_modules/color/node_modules/color-name": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
      "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==",
      "license": "MIT"
    },
    "node_modules/colors": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/colors/-/colors-1.4.0.tgz",
      "integrity": "sha512-a+UqTh4kgZg/SlGvfbzDHpgRu7AAQOmmqRHJnxhRZICKFUT91brVhNNt58CMWU9PsBbv3PDCZUHbVxuDiH2mtA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.1.90"
      }
    },
    "node_modules/colorspace": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/colorspace/-/colorspace-1.1.4.tgz",
      "integrity": "sha512-BgvKJiuVu1igBUF2kEjRCZXol6wiiGbY5ipL/oVPwm0BL9sIpMIzM8IK7vwuxIIzOXMV3Ey5w+vxhm0rR/TN8w==",
      "license": "MIT",
      "dependencies": {
        "color": "^3.1.3",
        "text-hex": "1.0.x"
      }
    },
    "node_modules/combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "license": "MIT",
      "dependencies": {
        "delayed-stream": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/command-exists": {
      "version": "1.2.9",
      "resolved": "https://registry.npmjs.org/command-exists/-/command-exists-1.2.9.tgz",
      "integrity": "sha512-LTQ/SGc+s0Xc0Fu5WaKnR0YiygZkm9eKFvyS+fRsU7/ZWFF8ykFM6Pc9aCVf1+xasOOZpO3BAVgVrKvsqKHV7w==",
      "license": "MIT"
    },
    "node_modules/command-line-usage": {
      "version": "6.1.3",
      "resolved": "https://registry.npmjs.org/command-line-usage/-/command-line-usage-6.1.3.tgz",
      "integrity": "sha512-sH5ZSPr+7UStsloltmDh7Ce5fb8XPlHyoPzTpyyMuYCtervL65+ubVZ6Q61cFtFl62UyJlc8/JwERRbAFPUqgw==",
      "license": "MIT",
      "dependencies": {
        "array-back": "^4.0.2",
        "chalk": "^2.4.2",
        "table-layout": "^1.0.2",
        "typical": "^5.2.0"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/command-line-usage/node_modules/ansi-styles": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
      "license": "MIT",
      "dependencies": {
        "color-convert": "^1.9.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/command-line-usage/node_modules/chalk": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^3.2.1",
        "escape-string-regexp": "^1.0.5",
        "supports-color": "^5.3.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/command-line-usage/node_modules/color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "license": "MIT",
      "dependencies": {
        "color-name": "1.1.3"
      }
    },
    "node_modules/command-line-usage/node_modules/color-name": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
      "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==",
      "license": "MIT"
    },
    "node_modules/command-line-usage/node_modules/escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/command-line-usage/node_modules/has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/command-line-usage/node_modules/supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "license": "MIT",
      "dependencies": {
        "has-flag": "^3.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/commander": {
      "version": "8.3.0",
      "resolved": "https://registry.npmjs.org/commander/-/commander-8.3.0.tgz",
      "integrity": "sha512-OkTL9umf+He2DZkUq8f8J9of7yL6RJKI24dVITBmNfZBmri9zYZQrKkuXiKhyfPSu8tUhnVBB1iKXevvnlR4Ww==",
      "license": "MIT",
      "engines": {
        "node": ">= 12"
      }
    },
    "node_modules/compress-commons": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/compress-commons/-/compress-commons-4.1.2.tgz",
      "integrity": "sha512-D3uMHtGc/fcO1Gt1/L7i1e33VOvD4A9hfQLP+6ewd+BvG/gQ84Yh4oftEhAdjSMgBgwGL+jsppT7JYNpo6MHHg==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "buffer-crc32": "^0.2.13",
        "crc32-stream": "^4.0.2",
        "normalize-path": "^3.0.0",
        "readable-stream": "^3.6.0"
      },
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
      "license": "MIT"
    },
    "node_modules/concat-stream": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.2.tgz",
      "integrity": "sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==",
      "engines": [
        "node >= 0.8"
      ],
      "license": "MIT",
      "dependencies": {
        "buffer-from": "^1.0.0",
        "inherits": "^2.0.3",
        "readable-stream": "^2.2.2",
        "typedarray": "^0.0.6"
      }
    },
    "node_modules/concat-stream/node_modules/readable-stream": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.8.tgz",
      "integrity": "sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==",
      "license": "MIT",
      "dependencies": {
        "core-util-is": "~1.0.0",
        "inherits": "~2.0.3",
        "isarray": "~1.0.0",
        "process-nextick-args": "~2.0.0",
        "safe-buffer": "~5.1.1",
        "string_decoder": "~1.1.1",
        "util-deprecate": "~1.0.1"
      }
    },
    "node_modules/concat-stream/node_modules/safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
      "license": "MIT"
    },
    "node_modules/concat-stream/node_modules/string_decoder": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
      "license": "MIT",
      "dependencies": {
        "safe-buffer": "~5.1.0"
      }
    },
    "node_modules/configstore": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/configstore/-/configstore-5.0.1.tgz",
      "integrity": "sha512-aMKprgk5YhBNyH25hj8wGt2+D52Sw1DRRIzqBwLp2Ya9mFmY8KPvvtvmna8SxVR9JMZ4kzMD68N22vlaRpkeFA==",
      "license": "BSD-2-Clause",
      "dependencies": {
        "dot-prop": "^5.2.0",
        "graceful-fs": "^4.1.2",
        "make-dir": "^3.0.0",
        "unique-string": "^2.0.0",
        "write-file-atomic": "^3.0.0",
        "xdg-basedir": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/constant-case": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/constant-case/-/constant-case-3.0.4.tgz",
      "integrity": "sha512-I2hSBi7Vvs7BEuJDr5dDHfzb/Ruj3FyvFyh7KLilAjNQw3Be+xgqUBA2W6scVEcL0hL1dwPRtIqEPVUCKkSsyQ==",
      "license": "MIT",
      "dependencies": {
        "no-case": "^3.0.4",
        "tslib": "^2.0.3",
        "upper-case": "^2.0.2"
      }
    },
    "node_modules/constant-case/node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/content-disposition": {
      "version": "0.5.4",
      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz",
      "integrity": "sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==",
      "license": "MIT",
      "dependencies": {
        "safe-buffer": "5.2.1"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/content-type": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz",
      "integrity": "sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/cookie": {
      "version": "0.7.1",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.1.tgz",
      "integrity": "sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/cookie-signature": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
      "integrity": "sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==",
      "license": "MIT"
    },
    "node_modules/cookies": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/cookies/-/cookies-0.8.0.tgz",
      "integrity": "sha512-8aPsApQfebXnuI+537McwYsDtjVxGm8gTIzQI3FDW6t5t/DAhERxtnbEPN/8RX+uZthoz4eCOgloXaE5cYyNow==",
      "license": "MIT",
      "dependencies": {
        "depd": "~2.0.0",
        "keygrip": "~1.1.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/core-util-is": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.3.tgz",
      "integrity": "sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==",
      "license": "MIT"
    },
    "node_modules/cors": {
      "version": "2.8.5",
      "resolved": "https://registry.npmjs.org/cors/-/cors-2.8.5.tgz",
      "integrity": "sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==",
      "license": "MIT",
      "dependencies": {
        "object-assign": "^4",
        "vary": "^1"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/crc-32": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/crc-32/-/crc-32-1.2.2.tgz",
      "integrity": "sha512-ROmzCKrTnOwybPcJApAA6WBWij23HVfGVNKqqrZpuyZOHqK2CwHSvpGuyt/UNNvaIjEd8X5IFGp4Mh+Ie1IHJQ==",
      "license": "Apache-2.0",
      "optional": true,
      "bin": {
        "crc32": "bin/crc32.njs"
      },
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/crc32-stream": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/crc32-stream/-/crc32-stream-4.0.3.tgz",
      "integrity": "sha512-NT7w2JVU7DFroFdYkeq8cywxrgjPHWkdX1wjpRQXPX5Asews3tA+Ght6lddQO5Mkumffp3X7GEqku3epj2toIw==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "crc-32": "^1.2.0",
        "readable-stream": "^3.4.0"
      },
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/cross-env": {
      "version": "7.0.3",
      "resolved": "https://registry.npmjs.org/cross-env/-/cross-env-7.0.3.tgz",
      "integrity": "sha512-+/HKd6EgcQCJGh2PSjZuUitQBQynKor4wrFbRg4DtAgS1aWO+gU52xpH7M9ScGgXSYmAVS9bIJ8EzuaGw0oNAw==",
      "license": "MIT",
      "dependencies": {
        "cross-spawn": "^7.0.1"
      },
      "bin": {
        "cross-env": "src/bin/cross-env.js",
        "cross-env-shell": "src/bin/cross-env-shell.js"
      },
      "engines": {
        "node": ">=10.14",
        "npm": ">=6",
        "yarn": ">=1"
      }
    },
    "node_modules/cross-fetch": {
      "version": "3.1.5",
      "resolved": "https://registry.npmjs.org/cross-fetch/-/cross-fetch-3.1.5.tgz",
      "integrity": "sha512-lvb1SBsI0Z7GDwmuid+mU3kWVBwTVUbe7S0H52yaaAdQOXq2YktTCZdlAcNKFzE6QtRz0snpw9bNiPeOIkkQvw==",
      "license": "MIT",
      "dependencies": {
        "node-fetch": "2.6.7"
      }
    },
    "node_modules/cross-fetch/node_modules/node-fetch": {
      "version": "2.6.7",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.7.tgz",
      "integrity": "sha512-ZjMPFEfVx5j+y2yF35Kzx5sF7kDzxuDj6ziH4FFbOp87zKDZNx8yExJIb05OGF4Nlt9IHFIMBkRl41VdvcNdbQ==",
      "license": "MIT",
      "dependencies": {
        "whatwg-url": "^5.0.0"
      },
      "engines": {
        "node": "4.x || >=6.0.0"
      },
      "peerDependencies": {
        "encoding": "^0.1.0"
      },
      "peerDependenciesMeta": {
        "encoding": {
          "optional": true
        }
      }
    },
    "node_modules/cross-spawn": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
      "license": "MIT",
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/cross-spawn/node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "license": "ISC",
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/crypto-random-string": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/crypto-random-string/-/crypto-random-string-2.0.0.tgz",
      "integrity": "sha512-v1plID3y9r/lPhviJ1wrXpLeyUIGAZ2SHNYTEapm7/8A9nLPoyvVp3RK/EPFqn5kEznyWgYZNsRtYYIWbuG8KA==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/csv-parse": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/csv-parse/-/csv-parse-6.0.0.tgz",
      "integrity": "sha512-6aB9WrymEruVDwQOwa5AuYk4/Gb+HaJgLHGKOA9BXTqgsIFvbdHzQzZOuqNCOooTGciPDaHzTlGkU5P6kYVUYw=="
    },
    "node_modules/data-uri-to-buffer": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-6.0.2.tgz",
      "integrity": "sha512-7hvf7/GW8e86rW0ptuwS3OcBGDjIi6SZva7hCyWC0yYry2cOPmLIjXAUHI6DK2HsnwJd9ifmt57i8eV2n4YNpw==",
      "license": "MIT",
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/data-view-buffer": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/data-view-buffer/-/data-view-buffer-1.0.2.tgz",
      "integrity": "sha512-EmKO5V3OLXh1rtK2wgXRansaK1/mtVdTUEiEI0W8RkvgT05kfxaH29PliLnpLP73yYO6142Q72QNa8Wx/A5CqQ==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/data-view-byte-length": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/data-view-byte-length/-/data-view-byte-length-1.0.2.tgz",
      "integrity": "sha512-tuhGbE6CfTM9+5ANGf+oQb72Ky/0+s3xKUpHvShfiz2RxMFgFPjsXuRLBVMtvMs15awe45SRb83D6wH4ew6wlQ==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/inspect-js"
      }
    },
    "node_modules/data-view-byte-offset": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/data-view-byte-offset/-/data-view-byte-offset-1.0.1.tgz",
      "integrity": "sha512-BS8PfmtDGnrgYdOonGZQdLZslWIeCGFP9tpan0hi1Co2Zr2NKADsvGYA8XxuG/4UWgJ6Cjtv+YJnB6MM69QGlQ==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/datauri": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/datauri/-/datauri-4.1.0.tgz",
      "integrity": "sha512-y17kh32+I82G+ED9MNWFkZiP/Cq/vO1hN9+tSZsT9C9qn3NrvcBnh7crSepg0AQPge1hXx2Ca44s1FRdv0gFWA==",
      "license": "MIT",
      "dependencies": {
        "image-size": "1.0.0",
        "mimer": "^2.0.2"
      },
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/death": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/death/-/death-1.1.0.tgz",
      "integrity": "sha512-vsV6S4KVHvTGxbEcij7hkWRv0It+sGGWVOM67dQde/o5Xjnr+KmLjxWJii2uEObIrt1CcM9w0Yaovx+iOlIL+w=="
    },
    "node_modules/debug": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
      "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/decamelize": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",
      "integrity": "sha512-z2S+W9X73hAUUki+N+9Za2lBlun89zigOyGrsax+KUQ6wKW4ZoWpEYBkGhQjwAjjDCkWxhY0VKEhk8wzY7F5cA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/decamelize-keys": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/decamelize-keys/-/decamelize-keys-1.1.1.tgz",
      "integrity": "sha512-WiPxgEirIV0/eIOMcnFBA3/IJZAZqKnwAwWyvvdi4lsr1WCN22nhdf/3db3DoZcUjTV2SqfzIwNyp6y2xs3nmg==",
      "license": "MIT",
      "dependencies": {
        "decamelize": "^1.1.0",
        "map-obj": "^1.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/decamelize-keys/node_modules/map-obj": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/map-obj/-/map-obj-1.0.1.tgz",
      "integrity": "sha512-7N/q3lyZ+LVCp7PzuxrJr4KMbBE2hW7BT7YNia330OFxIf4d3r5zVpicP2650l7CPN6RM9zOJRl3NGpqSiw3Eg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/decode-uri-component": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.2.tgz",
      "integrity": "sha512-FqUYQ+8o158GyGTrMFJms9qh3CqTKvAqgqsTnkLI8sKu0028orqBhxNMFkFen0zGyg6epACD32pjVk58ngIErQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/decompress-response": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-6.0.0.tgz",
      "integrity": "sha512-aW35yZM6Bb/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9QhXmREyIfv0pji9ejCQ==",
      "license": "MIT",
      "dependencies": {
        "mimic-response": "^3.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/deep-extend": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/deep-extend/-/deep-extend-0.6.0.tgz",
      "integrity": "sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA==",
      "license": "MIT",
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/deep-is": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
      "license": "MIT"
    },
    "node_modules/deepmerge": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz",
      "integrity": "sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/defer-to-connect": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-1.1.3.tgz",
      "integrity": "sha512-0ISdNousHvZT2EiFlZeZAHBUvSxmKswVCEf8hW7KWgG4a8MVEu/3Vb6uWYozkjylyCxe0JBIiRB1jV45S70WVQ==",
      "license": "MIT"
    },
    "node_modules/define-data-property": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz",
      "integrity": "sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==",
      "license": "MIT",
      "dependencies": {
        "es-define-property": "^1.0.0",
        "es-errors": "^1.3.0",
        "gopd": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/define-lazy-prop": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/define-lazy-prop/-/define-lazy-prop-2.0.0.tgz",
      "integrity": "sha512-Ds09qNh8yw3khSjiJjiUInaGX9xlqZDY7JVryGxdxV7NPeuqQfplOpQ66yJFZut3jLa5zOwkXw1g9EI2uKh4Og==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/define-properties": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz",
      "integrity": "sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==",
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.0.1",
        "has-property-descriptors": "^1.0.0",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/define-property": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
      "integrity": "sha512-cZTYKFWspt9jZsMscWo8sc/5lbPC9Q0N5nBLgb+Yd915iL3udB1uFgS3B8YCx66UVHq018DAVFoee7x+gxggeA==",
      "license": "MIT",
      "dependencies": {
        "is-descriptor": "^1.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/degenerator": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/degenerator/-/degenerator-5.0.1.tgz",
      "integrity": "sha512-TllpMR/t0M5sqCXfj85i4XaAzxmS5tVA16dqvdkMwGmzI+dXLXnw3J+3Vdv7VKw+ThlTMboK6i9rnZ6Nntj5CQ==",
      "license": "MIT",
      "dependencies": {
        "ast-types": "^0.13.4",
        "escodegen": "^2.1.0",
        "esprima": "^4.0.1"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/destroy": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz",
      "integrity": "sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8",
        "npm": "1.2.8000 || >= 1.4.16"
      }
    },
    "node_modules/detect-libc": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.4.tgz",
      "integrity": "sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/devtools-protocol": {
      "version": "0.0.1367902",
      "resolved": "https://registry.npmjs.org/devtools-protocol/-/devtools-protocol-0.0.1367902.tgz",
      "integrity": "sha512-XxtPuC3PGakY6PD7dG66/o8KwJ/LkH2/EKe19Dcw58w53dv4/vSQEkn/SzuyhHE2q4zPgCkxQBxus3VV4ql+Pg==",
      "license": "BSD-3-Clause"
    },
    "node_modules/dom-serializer": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-0.2.2.tgz",
      "integrity": "sha512-2/xPb3ORsQ42nHYiSunXkDjPLBaEj/xTwUO4B7XCZQTRk7EBtTOPaygh10YAAh2OI1Qrp6NWfpAhzswj0ydt9g==",
      "license": "MIT",
      "dependencies": {
        "domelementtype": "^2.0.1",
        "entities": "^2.0.0"
      }
    },
    "node_modules/dom-serializer/node_modules/domelementtype": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-2.3.0.tgz",
      "integrity": "sha512-OLETBj6w0OsagBwdXnPdN0cnMfF9opN69co+7ZrbfPGrdpPVNBUj02spi6B1N7wChLQiPn4CSH/zJvXw56gmHw==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/fb55"
        }
      ],
      "license": "BSD-2-Clause"
    },
    "node_modules/dom-serializer/node_modules/entities": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/entities/-/entities-2.2.0.tgz",
      "integrity": "sha512-p92if5Nz619I0w+akJrLZH0MX0Pb5DX39XOwQTtXSdQQOaYH03S1uIQp4mhOZtAXrxq4ViO67YTiLBo2638o9A==",
      "license": "BSD-2-Clause",
      "funding": {
        "url": "https://github.com/fb55/entities?sponsor=1"
      }
    },
    "node_modules/dom-walk": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/dom-walk/-/dom-walk-0.1.2.tgz",
      "integrity": "sha512-6QvTW9mrGeIegrFXdtQi9pk7O/nSK6lSdXW2eqUspN5LWD7UTji2Fqw5V2YLjBpHEoU9Xl/eUWNpDeZvoyOv2w=="
    },
    "node_modules/domelementtype": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-1.3.1.tgz",
      "integrity": "sha512-BSKB+TSpMpFI/HOxCNr1O8aMOTZ8hT3pM3GQ0w/mWRmkhEDSFJkkyzz4XQsBV44BChwGkrDfMyjVD0eA2aFV3w==",
      "license": "BSD-2-Clause"
    },
    "node_modules/domhandler": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/domhandler/-/domhandler-2.4.2.tgz",
      "integrity": "sha512-JiK04h0Ht5u/80fdLMCEmV4zkNh2BcoMFBmZ/91WtYZ8qVXSKjiw7fXMgFPnHcSZgOo3XdinHvmnDUeMf5R4wA==",
      "license": "BSD-2-Clause",
      "dependencies": {
        "domelementtype": "1"
      }
    },
    "node_modules/domutils": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/domutils/-/domutils-1.7.0.tgz",
      "integrity": "sha512-Lgd2XcJ/NjEw+7tFvfKxOzCYKZsdct5lczQ2ZaQY8Djz7pfAD3Gbp8ySJWtreII/vDlMVmxwa6pHmdxIYgttDg==",
      "license": "BSD-2-Clause",
      "dependencies": {
        "dom-serializer": "0",
        "domelementtype": "1"
      }
    },
    "node_modules/dot-case": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/dot-case/-/dot-case-3.0.4.tgz",
      "integrity": "sha512-Kv5nKlh6yRrdrGvxeJ2e5y2eRUpkUosIW4A2AS38zwSz27zu7ufDwQPi5Jhs3XAlGNetl3bmnGhQsMtkKJnj3w==",
      "license": "MIT",
      "dependencies": {
        "no-case": "^3.0.4",
        "tslib": "^2.0.3"
      }
    },
    "node_modules/dot-case/node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/dot-prop": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-5.3.0.tgz",
      "integrity": "sha512-QM8q3zDe58hqUqjraQOmzZ1LIH9SWQJTlEKCH4kJ2oQvLZk7RbQXvtDM2XEq3fwkV9CCvvH4LA0AV+ogFsBM2Q==",
      "license": "MIT",
      "dependencies": {
        "is-obj": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/dotenv": {
      "version": "17.2.0",
      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-17.2.0.tgz",
      "integrity": "sha512-Q4sgBT60gzd0BB0lSyYD3xM4YxrXA9y4uBDof1JNYGzOXrQdQ6yX+7XIAqoFOGQFOTK1D3Hts5OllpxMDZFONQ==",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://dotenvx.com"
      }
    },
    "node_modules/dunder-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.1",
        "es-errors": "^1.3.0",
        "gopd": "^1.2.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/duplexer": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/duplexer/-/duplexer-0.1.2.tgz",
      "integrity": "sha512-jtD6YG370ZCIi/9GTaJKQxWTZD045+4R4hTk/x1UyoqadyJ9x9CgSi1RlVDQF8U2sxLLSnFkCaMihqljHIWgMg==",
      "license": "MIT"
    },
    "node_modules/duplexer2": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/duplexer2/-/duplexer2-0.1.4.tgz",
      "integrity": "sha512-asLFVfWWtJ90ZyOUHMqk7/S2w2guQKxUI2itj3d92ADHhxUSbCMGi1f1cBcJ7xM1To+pE/Khbwo1yuNbMEPKeA==",
      "license": "BSD-3-Clause",
      "optional": true,
      "dependencies": {
        "readable-stream": "^2.0.2"
      }
    },
    "node_modules/duplexer2/node_modules/readable-stream": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.8.tgz",
      "integrity": "sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "core-util-is": "~1.0.0",
        "inherits": "~2.0.3",
        "isarray": "~1.0.0",
        "process-nextick-args": "~2.0.0",
        "safe-buffer": "~5.1.1",
        "string_decoder": "~1.1.1",
        "util-deprecate": "~1.0.1"
      }
    },
    "node_modules/duplexer2/node_modules/safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/duplexer2/node_modules/string_decoder": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "safe-buffer": "~5.1.0"
      }
    },
    "node_modules/duplexer3": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/duplexer3/-/duplexer3-0.1.5.tgz",
      "integrity": "sha512-1A8za6ws41LQgv9HrE/66jyC5yuSjQ3L/KOpFtoBilsAK2iA2wuS5rTt1OCzIvtS2V7nVmedsUU+DGRcjBmOYA==",
      "license": "BSD-3-Clause"
    },
    "node_modules/ee-first": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
      "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==",
      "license": "MIT"
    },
    "node_modules/electron-to-chromium": {
      "version": "1.5.180",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.180.tgz",
      "integrity": "sha512-ED+GEyEh3kYMwt2faNmgMB0b8O5qtATGgR4RmRsIp4T6p7B8vdMbIedYndnvZfsaXvSzegtpfqRMDNCjjiSduA==",
      "license": "ISC",
      "peer": true
    },
    "node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/enabled": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/enabled/-/enabled-2.0.0.tgz",
      "integrity": "sha512-AKrN98kuwOzMIdAizXGI86UFBoo26CL21UM763y1h/GMSJ4/OHU9k2YlsmBpyScFo/wbLzWQJBMCW4+IO3/+OQ==",
      "license": "MIT"
    },
    "node_modules/encode32": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/encode32/-/encode32-1.1.0.tgz",
      "integrity": "sha512-BCmijZ4lWec5+fuGHclf7HSZf+mos2ncQkBjtvomvRWVEGAMI/tw56fuN2x4e+FTgQuTPbZjODPwX80lFy958w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4.7"
      }
    },
    "node_modules/encodeurl": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz",
      "integrity": "sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/end-of-stream": {
      "version": "1.4.5",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.5.tgz",
      "integrity": "sha512-ooEGc6HP26xXq/N+GCGOT0JKCLDGrq2bQUZrQ7gyrJiZANJ/8YDTxTpQBXGMn+WbIQXNVpyWymm7KYVICQnyOg==",
      "license": "MIT",
      "dependencies": {
        "once": "^1.4.0"
      }
    },
    "node_modules/engine.io": {
      "version": "6.6.4",
      "resolved": "https://registry.npmjs.org/engine.io/-/engine.io-6.6.4.tgz",
      "integrity": "sha512-ZCkIjSYNDyGn0R6ewHDtXgns/Zre/NT6Agvq1/WobF7JXgFff4SeDroKiCO3fNJreU9YG429Sc81o4w5ok/W5g==",
      "license": "MIT",
      "dependencies": {
        "@types/cors": "^2.8.12",
        "@types/node": ">=10.0.0",
        "accepts": "~1.3.4",
        "base64id": "2.0.0",
        "cookie": "~0.7.2",
        "cors": "~2.8.5",
        "debug": "~4.3.1",
        "engine.io-parser": "~5.2.1",
        "ws": "~8.17.1"
      },
      "engines": {
        "node": ">=10.2.0"
      }
    },
    "node_modules/engine.io-client": {
      "version": "6.6.3",
      "resolved": "https://registry.npmjs.org/engine.io-client/-/engine.io-client-6.6.3.tgz",
      "integrity": "sha512-T0iLjnyNWahNyv/lcjS2y4oE358tVS/SYQNxYXGAJ9/GLgH4VCvOQ/mhTjqU88mLZCQgiG8RIegFHYCdVC+j5w==",
      "license": "MIT",
      "dependencies": {
        "@socket.io/component-emitter": "~3.1.0",
        "debug": "~4.3.1",
        "engine.io-parser": "~5.2.1",
        "ws": "~8.17.1",
        "xmlhttprequest-ssl": "~2.1.1"
      }
    },
    "node_modules/engine.io-client/node_modules/debug": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.7.tgz",
      "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/engine.io-client/node_modules/ws": {
      "version": "8.17.1",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.17.1.tgz",
      "integrity": "sha512-6XQFvXTkbfUOZOKKILFG1PDK2NDQs4azKQl26T0YS5CxqWLgXajbPZ+h4gZekJyRqFU8pvnbAbbs/3TgRPy+GQ==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/engine.io-parser": {
      "version": "5.2.3",
      "resolved": "https://registry.npmjs.org/engine.io-parser/-/engine.io-parser-5.2.3.tgz",
      "integrity": "sha512-HqD3yTBfnBxIrbnM1DoD6Pcq8NECnh8d4As1Qgh0z5Gg3jRRIqijury0CL3ghu/edArpUYiYqQiDUQBIs4np3Q==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/engine.io/node_modules/cookie": {
      "version": "0.7.2",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.2.tgz",
      "integrity": "sha512-yki5XnKuf750l50uGTllt6kKILY4nQ1eNIQatoXEByZ5dWgnKqbnqmTrBE5B4N7lrMJKQ2ytWMiTO2o0v6Ew/w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/engine.io/node_modules/debug": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.7.tgz",
      "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/engine.io/node_modules/ws": {
      "version": "8.17.1",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.17.1.tgz",
      "integrity": "sha512-6XQFvXTkbfUOZOKKILFG1PDK2NDQs4azKQl26T0YS5CxqWLgXajbPZ+h4gZekJyRqFU8pvnbAbbs/3TgRPy+GQ==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/enhanced-resolve": {
      "version": "5.18.2",
      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.2.tgz",
      "integrity": "sha512-6Jw4sE1maoRJo3q8MsSIn2onJFbLTOjY9hlx4DZXmOKvLRd1Ok2kXmAGXaafL2+ijsJZ1ClYbl/pmqr9+k4iUQ==",
      "license": "MIT",
      "dependencies": {
        "graceful-fs": "^4.2.4",
        "tapable": "^2.2.0"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/entities": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/entities/-/entities-1.1.2.tgz",
      "integrity": "sha512-f2LZMYl1Fzu7YSBKg+RoROelpOaNrcGmE9AZubeDfrCEia483oW4MI4VyFd5VNHIgQ/7qm1I0wUHK1eJnn2y2w==",
      "license": "BSD-2-Clause"
    },
    "node_modules/env-paths": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/env-paths/-/env-paths-2.2.1.tgz",
      "integrity": "sha512-+h1lkLKhZMTYjog1VEpJNG7NZJWcuc2DDk/qsqSTRRCOXiLjeQ1d1/udrUGhqMxUgAlwKNZ0cf2uqan5GLuS2A==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/error-ex": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
      "license": "MIT",
      "dependencies": {
        "is-arrayish": "^0.2.1"
      }
    },
    "node_modules/es-abstract": {
      "version": "1.24.0",
      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.24.0.tgz",
      "integrity": "sha512-WSzPgsdLtTcQwm4CROfS5ju2Wa1QQcVeT37jFjYzdFz1r9ahadC8B8/a4qxJxM+09F18iumCdRmlr96ZYkQvEg==",
      "license": "MIT",
      "dependencies": {
        "array-buffer-byte-length": "^1.0.2",
        "arraybuffer.prototype.slice": "^1.0.4",
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "data-view-buffer": "^1.0.2",
        "data-view-byte-length": "^1.0.2",
        "data-view-byte-offset": "^1.0.1",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "es-set-tostringtag": "^2.1.0",
        "es-to-primitive": "^1.3.0",
        "function.prototype.name": "^1.1.8",
        "get-intrinsic": "^1.3.0",
        "get-proto": "^1.0.1",
        "get-symbol-description": "^1.1.0",
        "globalthis": "^1.0.4",
        "gopd": "^1.2.0",
        "has-property-descriptors": "^1.0.2",
        "has-proto": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "internal-slot": "^1.1.0",
        "is-array-buffer": "^3.0.5",
        "is-callable": "^1.2.7",
        "is-data-view": "^1.0.2",
        "is-negative-zero": "^2.0.3",
        "is-regex": "^1.2.1",
        "is-set": "^2.0.3",
        "is-shared-array-buffer": "^1.0.4",
        "is-string": "^1.1.1",
        "is-typed-array": "^1.1.15",
        "is-weakref": "^1.1.1",
        "math-intrinsics": "^1.1.0",
        "object-inspect": "^1.13.4",
        "object-keys": "^1.1.1",
        "object.assign": "^4.1.7",
        "own-keys": "^1.0.1",
        "regexp.prototype.flags": "^1.5.4",
        "safe-array-concat": "^1.1.3",
        "safe-push-apply": "^1.0.0",
        "safe-regex-test": "^1.1.0",
        "set-proto": "^1.0.0",
        "stop-iteration-iterator": "^1.1.0",
        "string.prototype.trim": "^1.2.10",
        "string.prototype.trimend": "^1.0.9",
        "string.prototype.trimstart": "^1.0.8",
        "typed-array-buffer": "^1.0.3",
        "typed-array-byte-length": "^1.0.3",
        "typed-array-byte-offset": "^1.0.4",
        "typed-array-length": "^1.0.7",
        "unbox-primitive": "^1.1.0",
        "which-typed-array": "^1.1.19"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/es-define-property": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-errors": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-module-lexer": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/es-module-lexer/-/es-module-lexer-1.7.0.tgz",
      "integrity": "sha512-jEQoCwk8hyb2AZziIOLhDqpm5+2ww5uIE6lkO/6jcOCusfk6LhMHpXXfBLXTZ7Ydyt0j4VoUQv6uGNYbdW+kBA==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/es-object-atoms": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-set-tostringtag": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz",
      "integrity": "sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6",
        "has-tostringtag": "^1.0.2",
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-to-primitive": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.3.0.tgz",
      "integrity": "sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==",
      "license": "MIT",
      "dependencies": {
        "is-callable": "^1.2.7",
        "is-date-object": "^1.0.5",
        "is-symbol": "^1.0.4"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/escalade": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/escape-goat": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/escape-goat/-/escape-goat-2.1.1.tgz",
      "integrity": "sha512-8/uIhbG12Csjy2JEW7D9pHbreaVaS/OpN3ycnyvElTdwM5n6GY6W6e2IPemfvGZeUMqZ9A/3GqIZMgKnBhAw/Q==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/escape-html": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
      "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==",
      "license": "MIT"
    },
    "node_modules/escape-string-regexp": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/escodegen": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/escodegen/-/escodegen-2.1.0.tgz",
      "integrity": "sha512-2NlIDTwUWJN0mRPQOdtQBzbUHvdGY2P1VXSyU83Q3xKxM7WHX2Ql8dKq782Q9TgQUNOLEzEYu9bzLNj1q88I5w==",
      "license": "BSD-2-Clause",
      "dependencies": {
        "esprima": "^4.0.1",
        "estraverse": "^5.2.0",
        "esutils": "^2.0.2"
      },
      "bin": {
        "escodegen": "bin/escodegen.js",
        "esgenerate": "bin/esgenerate.js"
      },
      "engines": {
        "node": ">=6.0"
      },
      "optionalDependencies": {
        "source-map": "~0.6.1"
      }
    },
    "node_modules/eslint-scope": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz",
      "integrity": "sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==",
      "license": "BSD-2-Clause",
      "peer": true,
      "dependencies": {
        "esrecurse": "^4.3.0",
        "estraverse": "^4.1.1"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/eslint-scope/node_modules/estraverse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz",
      "integrity": "sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==",
      "license": "BSD-2-Clause",
      "peer": true,
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/esprima": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
      "license": "BSD-2-Clause",
      "bin": {
        "esparse": "bin/esparse.js",
        "esvalidate": "bin/esvalidate.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/esrecurse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
      "license": "BSD-2-Clause",
      "peer": true,
      "dependencies": {
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/estraverse": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/etag": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
      "integrity": "sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/event-stream": {
      "version": "3.3.4",
      "resolved": "https://registry.npmjs.org/event-stream/-/event-stream-3.3.4.tgz",
      "integrity": "sha512-QHpkERcGsR0T7Qm3HNJSyXKEEj8AHNxkY3PK8TS2KJvQ7NiSHe3DDpwVKKtoYprL/AreyzFBeIkBIWChAqn60g==",
      "license": "MIT",
      "dependencies": {
        "duplexer": "~0.1.1",
        "from": "~0",
        "map-stream": "~0.1.0",
        "pause-stream": "0.0.11",
        "split": "0.3",
        "stream-combiner": "~0.0.4",
        "through": "~2.3.1"
      }
    },
    "node_modules/event-target-shim": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/event-target-shim/-/event-target-shim-5.0.1.tgz",
      "integrity": "sha512-i/2XbnSz/uxRCU6+NdVJgKWDTM427+MqYbkQzD321DuCQJUqOuJKIA0IM2+W2xtYHdKOmZ4dR6fExsd4SXL+WQ==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/eventemitter2": {
      "version": "6.4.9",
      "resolved": "https://registry.npmjs.org/eventemitter2/-/eventemitter2-6.4.9.tgz",
      "integrity": "sha512-JEPTiaOt9f04oa6NOkc4aH+nVp5I3wEjpHbIPqfgCdD5v5bUzy7xQqwcVO2aDQgOWhI28da57HksMrzK9HlRxg==",
      "license": "MIT"
    },
    "node_modules/eventemitter3": {
      "version": "4.0.7",
      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.7.tgz",
      "integrity": "sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw==",
      "license": "MIT"
    },
    "node_modules/events": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/events/-/events-3.3.0.tgz",
      "integrity": "sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==",
      "license": "MIT",
      "engines": {
        "node": ">=0.8.x"
      }
    },
    "node_modules/execa": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/execa/-/execa-4.1.0.tgz",
      "integrity": "sha512-j5W0//W7f8UxAn8hXVnwG8tLwdiUy4FJLcSupCg6maBYZDpyBvTApK7KyuI4bKj8KOh1r2YH+6ucuYtJv1bTZA==",
      "license": "MIT",
      "dependencies": {
        "cross-spawn": "^7.0.0",
        "get-stream": "^5.0.0",
        "human-signals": "^1.1.1",
        "is-stream": "^2.0.0",
        "merge-stream": "^2.0.0",
        "npm-run-path": "^4.0.0",
        "onetime": "^5.1.0",
        "signal-exit": "^3.0.2",
        "strip-final-newline": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/execa?sponsor=1"
      }
    },
    "node_modules/exif-parser": {
      "version": "0.1.12",
      "resolved": "https://registry.npmjs.org/exif-parser/-/exif-parser-0.1.12.tgz",
      "integrity": "sha512-c2bQfLNbMzLPmzQuOr8fy0csy84WmwnER81W88DzTp9CYNPJ6yzOj2EZAh9pywYpqHnshVLHQJ8WzldAyfY+Iw=="
    },
    "node_modules/expand-template": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/expand-template/-/expand-template-2.0.3.tgz",
      "integrity": "sha512-XYfuKMvj4O35f/pOXLObndIRvyQ+/+6AhODh+OKWj9S9498pHHn/IMszH+gt0fBCRWMNfk1ZSp5x3AifmnI2vg==",
      "license": "(MIT OR WTFPL)",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/express": {
      "version": "4.21.2",
      "resolved": "https://registry.npmjs.org/express/-/express-4.21.2.tgz",
      "integrity": "sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==",
      "license": "MIT",
      "dependencies": {
        "accepts": "~1.3.8",
        "array-flatten": "1.1.1",
        "body-parser": "1.20.3",
        "content-disposition": "0.5.4",
        "content-type": "~1.0.4",
        "cookie": "0.7.1",
        "cookie-signature": "1.0.6",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "finalhandler": "1.3.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "merge-descriptors": "1.0.3",
        "methods": "~1.1.2",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "path-to-regexp": "0.1.12",
        "proxy-addr": "~2.0.7",
        "qs": "6.13.0",
        "range-parser": "~1.2.1",
        "safe-buffer": "5.2.1",
        "send": "0.19.0",
        "serve-static": "1.16.2",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "type-is": "~1.6.18",
        "utils-merge": "1.0.1",
        "vary": "~1.1.2"
      },
      "engines": {
        "node": ">= 0.10.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/express"
      }
    },
    "node_modules/express-ipfilter": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/express-ipfilter/-/express-ipfilter-1.3.2.tgz",
      "integrity": "sha512-yMzCWGuVMnR8CFlsIC2spHWoQYp9vtyZXUgS/JdV5GOJgrz6zmKOEZsA4eF1XrxkOIVzaVk6yzTBk65pBhliNw==",
      "license": "MIT",
      "dependencies": {
        "ip": "^2.0.1",
        "lodash": "^4.17.11",
        "proxy-addr": "^2.0.7",
        "range_check": "^2.0.4"
      },
      "engines": {
        "node": ">=8.9.0"
      }
    },
    "node_modules/express-robots-txt": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/express-robots-txt/-/express-robots-txt-1.0.0.tgz",
      "integrity": "sha512-ZzXTJgvHY6N8MIPzWidIrOGngkNJ8nrSP9Ox0nztVkQxvpwcX8egJvhM6tBUojf9xDmnSc7J5RlWQJJK91N3aA==",
      "license": "MIT",
      "peerDependencies": {
        "express": "^4.12.1"
      }
    },
    "node_modules/express/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/express/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "license": "MIT"
    },
    "node_modules/express/node_modules/qs": {
      "version": "6.13.0",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.13.0.tgz",
      "integrity": "sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "side-channel": "^1.0.6"
      },
      "engines": {
        "node": ">=0.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/extract-zip": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/extract-zip/-/extract-zip-2.0.1.tgz",
      "integrity": "sha512-GDhU9ntwuKyGXdZBUgTIe+vXnWj0fppUEtMDL0+idd5Sta8TGpHssn/eusA9mrPr9qNDym6SxAYZjNvCn/9RBg==",
      "license": "BSD-2-Clause",
      "dependencies": {
        "debug": "^4.1.1",
        "get-stream": "^5.1.0",
        "yauzl": "^2.10.0"
      },
      "bin": {
        "extract-zip": "cli.js"
      },
      "engines": {
        "node": ">= 10.17.0"
      },
      "optionalDependencies": {
        "@types/yauzl": "^2.9.1"
      }
    },
    "node_modules/faker": {
      "version": "5.5.3",
      "resolved": "https://registry.npmjs.org/faker/-/faker-5.5.3.tgz",
      "integrity": "sha512-wLTv2a28wjUyWkbnX7u/ABZBkUkIF2fCd73V6P2oFqEGEktDfzWx4UxrSqtPRw0xPRAcjeAOIiJWqZm3pP4u3g==",
      "license": "MIT"
    },
    "node_modules/fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/fast-fifo": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/fast-fifo/-/fast-fifo-1.3.2.tgz",
      "integrity": "sha512-/d9sfos4yxzpwkDkuN7k2SqFKtYNmCTzgfEpz82x34IM9/zc8KGxQoXg1liNC/izpRM/MBdt44Nmx41ZWqk+FQ==",
      "license": "MIT"
    },
    "node_modules/fast-glob": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz",
      "integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.8"
      },
      "engines": {
        "node": ">=8.6.0"
      }
    },
    "node_modules/fast-uri": {
      "version": "3.0.6",
      "resolved": "https://registry.npmjs.org/fast-uri/-/fast-uri-3.0.6.tgz",
      "integrity": "sha512-Atfo14OibSv5wAp4VWNsFYE1AchQRTv9cBGWET4pZWHzYshFSS9NQI6I57rdKn9croWVMbYFbLhJ+yJvmZIIHw==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/fastify"
        },
        {
          "type": "opencollective",
          "url": "https://opencollective.com/fastify"
        }
      ],
      "license": "BSD-3-Clause",
      "peer": true
    },
    "node_modules/fastq": {
      "version": "1.19.1",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
      "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
      "license": "ISC",
      "dependencies": {
        "reusify": "^1.0.4"
      }
    },
    "node_modules/fd-slicer": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/fd-slicer/-/fd-slicer-1.1.0.tgz",
      "integrity": "sha512-cE1qsB/VwyQozZ+q1dGxR8LBYNZeofhEdUNGSMbQD3Gw2lAzX9Zb3uIU6Ebc/Fmyjo9AWWfnn0AUCHqtevs/8g==",
      "license": "MIT",
      "dependencies": {
        "pend": "~1.2.0"
      }
    },
    "node_modules/fecha": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/fecha/-/fecha-4.2.3.tgz",
      "integrity": "sha512-OP2IUU6HeYKJi3i0z4A19kHMQoLVs4Hc+DPqqxI2h/DPZHTm/vjsfC6P0b4jCMy14XizLBqvndQ+UilD7707Jw==",
      "license": "MIT"
    },
    "node_modules/file-stream-rotator": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/file-stream-rotator/-/file-stream-rotator-0.6.1.tgz",
      "integrity": "sha512-u+dBid4PvZw17PmDeRcNOtCP9CCK/9lRN2w+r1xIS7yOL9JFrIBKTvrYsxT4P0pGtThYTn++QS5ChHaUov3+zQ==",
      "license": "MIT",
      "dependencies": {
        "moment": "^2.29.1"
      }
    },
    "node_modules/file-type": {
      "version": "18.7.0",
      "resolved": "https://registry.npmjs.org/file-type/-/file-type-18.7.0.tgz",
      "integrity": "sha512-ihHtXRzXEziMrQ56VSgU7wkxh55iNchFkosu7Y9/S+tXHdKyrGjVK0ujbqNnsxzea+78MaLhN6PGmfYSAv1ACw==",
      "license": "MIT",
      "dependencies": {
        "readable-web-to-node-stream": "^3.0.2",
        "strtok3": "^7.0.0",
        "token-types": "^5.0.1"
      },
      "engines": {
        "node": ">=14.16"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/file-type?sponsor=1"
      }
    },
    "node_modules/file-uri-to-path": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/file-uri-to-path/-/file-uri-to-path-1.0.0.tgz",
      "integrity": "sha512-0Zt+s3L7Vf1biwWZ29aARiVYLx7iMGnEUl9x33fbB/j3jR81u/O2LbqK+Bm1CDSNDKVtJ/YjwY7TUd5SkeLQLw==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/fill-range": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
      "license": "MIT",
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/filter-obj": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/filter-obj/-/filter-obj-1.1.0.tgz",
      "integrity": "sha512-8rXg1ZnX7xzy2NGDVkBVaAy+lSlPNwad13BtgSlLuxfIslyt5Vg64U7tFcCt4WS1R0hvtnQybT/IyCkGZ3DpXQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/finalhandler": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.3.1.tgz",
      "integrity": "sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==",
      "license": "MIT",
      "dependencies": {
        "debug": "2.6.9",
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "statuses": "2.0.1",
        "unpipe": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/finalhandler/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/finalhandler/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "license": "MIT"
    },
    "node_modules/find-up": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
      "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
      "license": "MIT",
      "dependencies": {
        "locate-path": "^6.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/find-yarn-workspace-root": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/find-yarn-workspace-root/-/find-yarn-workspace-root-2.0.0.tgz",
      "integrity": "sha512-1IMnbjt4KzsQfnhnzNd8wUEgXZ44IzZaZmnLYx7D5FZlaHt2gW20Cri8Q+E/t5tIj4+epTBub+2Zxu/vNILzqQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "micromatch": "^4.0.2"
      }
    },
    "node_modules/fluent-ffmpeg": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/fluent-ffmpeg/-/fluent-ffmpeg-2.1.3.tgz",
      "integrity": "sha512-Be3narBNt2s6bsaqP6Jzq91heDgOEaDCJAXcE3qcma/EJBSy5FB4cvO31XBInuAuKBx8Kptf8dkhjK0IOru39Q==",
      "deprecated": "Package no longer supported. Contact Support at https://www.npmjs.com/support for more info.",
      "license": "MIT",
      "dependencies": {
        "async": "^0.2.9",
        "which": "^1.1.1"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/fluent-ffmpeg/node_modules/async": {
      "version": "0.2.10",
      "resolved": "https://registry.npmjs.org/async/-/async-0.2.10.tgz",
      "integrity": "sha512-eAkdoKxU6/LkKDBzLpT+t6Ff5EtfSF4wx1WfJiPEEV7WNLnDaRXk0oVysiEPm262roaachGexwUv94WhSgN5TQ=="
    },
    "node_modules/fn.name": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/fn.name/-/fn.name-1.1.0.tgz",
      "integrity": "sha512-GRnmB5gPyJpAhTQdSZTSp9uaPSvl09KoYcMQtsB9rQoOmzs9dH6ffeccH+Z+cv6P68Hu5bC6JjRh4Ah/mHSNRw==",
      "license": "MIT"
    },
    "node_modules/follow-redirects": {
      "version": "1.15.9",
      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.9.tgz",
      "integrity": "sha512-gew4GsXizNgdoRyqmyfMHyAmXsZDk6mHkSxZFCzW9gwlbtOW44CDtYavM+y+72qD/Vq2l550kMF52DT8fOLJqQ==",
      "funding": [
        {
          "type": "individual",
          "url": "https://github.com/sponsors/RubenVerborgh"
        }
      ],
      "license": "MIT",
      "engines": {
        "node": ">=4.0"
      },
      "peerDependenciesMeta": {
        "debug": {
          "optional": true
        }
      }
    },
    "node_modules/for-each": {
      "version": "0.3.5",
      "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.5.tgz",
      "integrity": "sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==",
      "license": "MIT",
      "dependencies": {
        "is-callable": "^1.2.7"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/for-in": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/for-in/-/for-in-1.0.2.tgz",
      "integrity": "sha512-7EwmXrOjyL+ChxMhmG5lnW9MPt1aIeZEwKhQzoBUdTV0N3zuwWDZYVJatDvZ2OyzPUvdIAZDsCetk3coyMfcnQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/for-own": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/for-own/-/for-own-0.1.5.tgz",
      "integrity": "sha512-SKmowqGTJoPzLO1T0BBJpkfp3EMacCMOuH40hOUbrbzElVktk4DioXVM99QkLCyKoiuOmyjgcWMpVz2xjE7LZw==",
      "license": "MIT",
      "dependencies": {
        "for-in": "^1.0.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/form-data": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.3.tgz",
      "integrity": "sha512-qsITQPfmvMOSAdeyZ+12I1c+CKSstAFAwu+97zrnWAbIr5u8wfsExUzCesVLC8NgHuRUqNN4Zy6UPWUTRGslcA==",
      "license": "MIT",
      "dependencies": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.8",
        "es-set-tostringtag": "^2.1.0",
        "hasown": "^2.0.2",
        "mime-types": "^2.1.12"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/forwarded": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
      "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/fresh": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
      "integrity": "sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/from": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/from/-/from-0.1.7.tgz",
      "integrity": "sha512-twe20eF1OxVxp/ML/kq2p1uc6KvFK/+vs8WjEbeKmV2He22MKm7YF2ANIt+EOqhJ5L3K/SuuPhk0hWQDjOM23g==",
      "license": "MIT"
    },
    "node_modules/from2": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/from2/-/from2-2.3.0.tgz",
      "integrity": "sha512-OMcX/4IC/uqEPVgGeyfN22LJk6AZrMkRZHxcHBMBvHScDGgwTm2GT2Wkgtocyd3JfZffjj2kYUDXXII0Fk9W0g==",
      "license": "MIT",
      "dependencies": {
        "inherits": "^2.0.1",
        "readable-stream": "^2.0.0"
      }
    },
    "node_modules/from2/node_modules/readable-stream": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.8.tgz",
      "integrity": "sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==",
      "license": "MIT",
      "dependencies": {
        "core-util-is": "~1.0.0",
        "inherits": "~2.0.3",
        "isarray": "~1.0.0",
        "process-nextick-args": "~2.0.0",
        "safe-buffer": "~5.1.1",
        "string_decoder": "~1.1.1",
        "util-deprecate": "~1.0.1"
      }
    },
    "node_modules/from2/node_modules/safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
      "license": "MIT"
    },
    "node_modules/from2/node_modules/string_decoder": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
      "license": "MIT",
      "dependencies": {
        "safe-buffer": "~5.1.0"
      }
    },
    "node_modules/fs-constants": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs-constants/-/fs-constants-1.0.0.tgz",
      "integrity": "sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow==",
      "license": "MIT"
    },
    "node_modules/fs-extra": {
      "version": "10.1.0",
      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-10.1.0.tgz",
      "integrity": "sha512-oRXApq54ETRj4eMiFzGnHWGy+zo5raudjuxN0b8H7s/RU2oW0Wvsx9O0ACRN/kRq9E8Vu/ReskGB5o3ji+FzHQ==",
      "license": "MIT",
      "dependencies": {
        "graceful-fs": "^4.2.0",
        "jsonfile": "^6.0.1",
        "universalify": "^2.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
      "license": "ISC"
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "hasInstallScript": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/fstream": {
      "version": "1.0.12",
      "resolved": "https://registry.npmjs.org/fstream/-/fstream-1.0.12.tgz",
      "integrity": "sha512-WvJ193OHa0GHPEL+AycEJgxvBEwyfRkN1vhjca23OaPVMCaLCXTd5qAu82AjTcgP1UJmytkOKb63Ypde7raDIg==",
      "deprecated": "This package is no longer supported.",
      "license": "ISC",
      "optional": true,
      "dependencies": {
        "graceful-fs": "^4.1.2",
        "inherits": "~2.0.0",
        "mkdirp": ">=0.5 0",
        "rimraf": "2"
      },
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/fstream/node_modules/rimraf": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
      "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
      "deprecated": "Rimraf versions prior to v4 are no longer supported",
      "license": "ISC",
      "optional": true,
      "dependencies": {
        "glob": "^7.1.3"
      },
      "bin": {
        "rimraf": "bin.js"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/function.prototype.name": {
      "version": "1.1.8",
      "resolved": "https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.8.tgz",
      "integrity": "sha512-e5iwyodOHhbMr/yNrc7fDYG4qlbIvI5gajyzPnb5TCwyhjApznQh1BMFou9b30SevY43gCJKXycoCBjMbsuW0Q==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "functions-have-names": "^1.2.3",
        "hasown": "^2.0.2",
        "is-callable": "^1.2.7"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/functions-have-names": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz",
      "integrity": "sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/futoin-hkdf": {
      "version": "1.5.3",
      "resolved": "https://registry.npmjs.org/futoin-hkdf/-/futoin-hkdf-1.5.3.tgz",
      "integrity": "sha512-SewY5KdMpaoCeh7jachEWFsh1nNlaDjNHZXWqL5IGwtpEYHTgkr2+AMCgNwKWkcc0wpSYrZfR7he4WdmHFtDxQ==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
      "license": "ISC",
      "engines": {
        "node": "6.* || 8.* || >= 10.*"
      }
    },
    "node_modules/get-intrinsic": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
      "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "function-bind": "^1.1.2",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "math-intrinsics": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-port": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/get-port/-/get-port-5.1.1.tgz",
      "integrity": "sha512-g/Q1aTSDOxFpchXC4i8ZWvxA1lnPqx/JHqcpIw0/LX9T8x/GBbi6YnlN5nhaKIFkT8oFsscUKgDJYxfwfS6QsQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/get-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/get-stream": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
      "integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
      "license": "MIT",
      "dependencies": {
        "pump": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/get-symbol-description": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.1.0.tgz",
      "integrity": "sha512-w9UMqWwJxHNOvoNzSJ2oPF5wvYcvP7jUvYzhp67yEhTi17ZDBBC1z9pTdGuzjD+EFIqLSYRweZjqfiPzQ06Ebg==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-uri": {
      "version": "6.0.5",
      "resolved": "https://registry.npmjs.org/get-uri/-/get-uri-6.0.5.tgz",
      "integrity": "sha512-b1O07XYq8eRuVzBNgJLstU6FYc1tS6wnMtF1I1D9lE8LxZSOGZ7LhxN54yPP6mGw5f2CkXY2BQUL9Fx41qvcIg==",
      "license": "MIT",
      "dependencies": {
        "basic-ftp": "^5.0.2",
        "data-uri-to-buffer": "^6.0.2",
        "debug": "^4.3.4"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/gifwrap": {
      "version": "0.9.4",
      "resolved": "https://registry.npmjs.org/gifwrap/-/gifwrap-0.9.4.tgz",
      "integrity": "sha512-MDMwbhASQuVeD4JKd1fKgNgCRL3fGqMM4WaqpNhWO0JiMOAjbQdumbs4BbBZEy9/M00EHEjKN3HieVhCUlwjeQ==",
      "dependencies": {
        "image-q": "^4.0.0",
        "omggif": "^1.0.10"
      }
    },
    "node_modules/github-from-package": {
      "version": "0.0.0",
      "resolved": "https://registry.npmjs.org/github-from-package/-/github-from-package-0.0.0.tgz",
      "integrity": "sha512-SyHy3T1v2NUXn29OsWdxmK6RwHD+vkj3v8en8AOBZ1wBQ/hCAQ5bAQTD02kW4W9tUp/3Qh6J8r9EvntiyCmOOw==",
      "license": "MIT"
    },
    "node_modules/glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "deprecated": "Glob versions prior to v9 are no longer supported",
      "license": "ISC",
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      },
      "engines": {
        "node": "*"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/glob-to-regexp": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/glob-to-regexp/-/glob-to-regexp-0.4.1.tgz",
      "integrity": "sha512-lkX1HJXwyMcprw/5YUZc2s7DrpAiHB21/V+E1rHUrVNokkvB6bqMzT0VfV6/86ZNabt1k14YOIaT7nDvOX3Iiw==",
      "license": "BSD-2-Clause",
      "peer": true
    },
    "node_modules/global": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/global/-/global-4.4.0.tgz",
      "integrity": "sha512-wv/LAoHdRE3BeTGz53FAamhGlPLhlssK45usmGFThIi4XqnBmjKQ16u+RNbP7WvigRZDxUsM0J3gcQ5yicaL0w==",
      "dependencies": {
        "min-document": "^2.19.0",
        "process": "^0.11.10"
      }
    },
    "node_modules/global-dirs": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/global-dirs/-/global-dirs-3.0.1.tgz",
      "integrity": "sha512-NBcGGFbBA9s1VzD41QXDG+3++t9Mn5t1FpLdhESY6oKY4gYTFpX4wO3sqGUa0Srjtbfj3szX0RnemmrVRUdULA==",
      "license": "MIT",
      "dependencies": {
        "ini": "2.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/global-dirs/node_modules/ini": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ini/-/ini-2.0.0.tgz",
      "integrity": "sha512-7PnF4oN3CvZF23ADhA5wRaYEQpJ8qygSkbtTXWBeXWXmEVRXK+1ITciHWwHhsjv1TmW0MgacIv6hEi5pX5NQdA==",
      "license": "ISC",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/globalthis": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/globalthis/-/globalthis-1.0.4.tgz",
      "integrity": "sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==",
      "license": "MIT",
      "dependencies": {
        "define-properties": "^1.2.1",
        "gopd": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/glossy": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/glossy/-/glossy-0.1.7.tgz",
      "integrity": "sha512-mTCC51QFadK75MvAhrL5nPVIP291NjML1guo10Sa7Yj04tJU4V++Vgm780NIddg9etQD9D8FM67hFGqM8EE2HQ==",
      "engines": {
        "node": ">= 0.2.5"
      }
    },
    "node_modules/gopd": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/got": {
      "version": "8.3.2",
      "resolved": "https://registry.npmjs.org/got/-/got-8.3.2.tgz",
      "integrity": "sha512-qjUJ5U/hawxosMryILofZCkm3C84PLJS/0grRIpjAwu+Lkxxj5cxeCU25BG0/3mDSpXKTyZr8oh8wIgLaH0QCw==",
      "license": "MIT",
      "dependencies": {
        "@sindresorhus/is": "^0.7.0",
        "cacheable-request": "^2.1.1",
        "decompress-response": "^3.3.0",
        "duplexer3": "^0.1.4",
        "get-stream": "^3.0.0",
        "into-stream": "^3.1.0",
        "is-retry-allowed": "^1.1.0",
        "isurl": "^1.0.0-alpha5",
        "lowercase-keys": "^1.0.0",
        "mimic-response": "^1.0.0",
        "p-cancelable": "^0.4.0",
        "p-timeout": "^2.0.1",
        "pify": "^3.0.0",
        "safe-buffer": "^5.1.1",
        "timed-out": "^4.0.1",
        "url-parse-lax": "^3.0.0",
        "url-to-options": "^1.0.1"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/got/node_modules/decompress-response": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-3.3.0.tgz",
      "integrity": "sha512-BzRPQuY1ip+qDonAOz42gRm/pg9F768C+npV/4JOsxRC2sq+Rlk+Q4ZCAsOhnIaMrgarILY+RMUIvMmmX1qAEA==",
      "license": "MIT",
      "dependencies": {
        "mimic-response": "^1.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/got/node_modules/get-stream": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-3.0.0.tgz",
      "integrity": "sha512-GlhdIUuVakc8SJ6kK0zAFbiGzRFzNnY4jUuEbV9UROo4Y+0Ny4fjvcZFVTeDA4odpFyOQzaw6hXukJSq/f28sQ==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/got/node_modules/mimic-response": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
      "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/got/node_modules/p-timeout": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/p-timeout/-/p-timeout-2.0.1.tgz",
      "integrity": "sha512-88em58dDVB/KzPEx1X0N3LwFfYZPyDc4B6eF38M1rk9VTZMbxXXgjugz8mmwpS9Ox4BDZ+t6t3QP5+/gazweIA==",
      "license": "MIT",
      "dependencies": {
        "p-finally": "^1.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/graceful-fs": {
      "version": "4.2.11",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
      "license": "ISC"
    },
    "node_modules/hard-rejection": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/hard-rejection/-/hard-rejection-2.1.0.tgz",
      "integrity": "sha512-VIZB+ibDhx7ObhAe7OVtoEbuP4h/MuOTHJ+J8h/eBXotJYl0fBgR72xDFCKgIh22OJZIOVNxBMWuhAr10r8HdA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/has-bigints": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-bigints/-/has-bigints-1.1.0.tgz",
      "integrity": "sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/has-property-descriptors": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz",
      "integrity": "sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==",
      "license": "MIT",
      "dependencies": {
        "es-define-property": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-proto": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/has-proto/-/has-proto-1.2.0.tgz",
      "integrity": "sha512-KIL7eQPfHQRC8+XluaIw7BHUwwqL19bQn4hzNgdr+1wXoU0KKj6rufu47lhY7KbJR2C6T6+PfyN0Ea7wkSS+qQ==",
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-symbol-support-x": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/has-symbol-support-x/-/has-symbol-support-x-1.4.2.tgz",
      "integrity": "sha512-3ToOva++HaW+eCpgqZrCfN51IPB+7bJNVT6CUATzueB5Heb8o6Nam0V3HG5dlDvZU1Gn5QLcbahiKw/XVk5JJw==",
      "license": "MIT",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/has-symbols": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-to-string-tag-x": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/has-to-string-tag-x/-/has-to-string-tag-x-1.4.1.tgz",
      "integrity": "sha512-vdbKfmw+3LoOYVr+mtxHaX5a96+0f3DljYd8JOqvOLsf5mw2Otda2qCDT9qRqLAhrjyQ0h7ual5nOiASpsGNFw==",
      "license": "MIT",
      "dependencies": {
        "has-symbol-support-x": "^1.4.1"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/has-tostringtag": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
      "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
      "license": "MIT",
      "dependencies": {
        "has-symbols": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-yarn": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/has-yarn/-/has-yarn-2.1.0.tgz",
      "integrity": "sha512-UqBRqi4ju7T+TqGNdqAO0PaSVGsDGJUBQvk9eUWNGRY1CFGDzYhLWoM7JQEemnlvVcv/YEmc2wNW8BC24EnUsw==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/hasha": {
      "version": "5.2.2",
      "resolved": "https://registry.npmjs.org/hasha/-/hasha-5.2.2.tgz",
      "integrity": "sha512-Hrp5vIK/xr5SkeN2onO32H0MgNZ0f17HRNH39WfL0SYUNOTZ5Lz1TJ8Pajo/87dYGEFlLMm7mIc/k/s6Bvz9HQ==",
      "license": "MIT",
      "dependencies": {
        "is-stream": "^2.0.0",
        "type-fest": "^0.8.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/hasha/node_modules/type-fest": {
      "version": "0.8.1",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.8.1.tgz",
      "integrity": "sha512-4dbzIzqvjtgiM5rw1k5rEHtBANKmdudhGyBEajN01fEyhaAIhsoKNy6y7+IN93IfpFtwY9iqi7kD+xwKhQsNJA==",
      "license": "(MIT OR CC0-1.0)",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "license": "MIT",
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/header-case": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/header-case/-/header-case-2.0.4.tgz",
      "integrity": "sha512-H/vuk5TEEVZwrR0lp2zed9OCo1uAILMlx0JEMgC26rzyJJ3N1v6XkwHHXJQdR2doSjcGPM6OKPYoJgf0plJ11Q==",
      "license": "MIT",
      "dependencies": {
        "capital-case": "^1.0.4",
        "tslib": "^2.0.3"
      }
    },
    "node_modules/header-case/node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/helmet": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/helmet/-/helmet-5.1.1.tgz",
      "integrity": "sha512-/yX0oVZBggA9cLJh8aw3PPCfedBnbd7J2aowjzsaWwZh7/UFY0nccn/aHAggIgWUFfnykX8GKd3a1pSbrmlcVQ==",
      "license": "MIT",
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/hosted-git-info": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-4.1.0.tgz",
      "integrity": "sha512-kyCuEOWjJqZuDbRHzL8V93NzQhwIB71oFWSyzVo+KPZI+pnQPPxucdkrOZvkLRnrf5URsQM+IJ09Dw29cRALIA==",
      "license": "ISC",
      "dependencies": {
        "lru-cache": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/htmlparser2": {
      "version": "3.10.1",
      "resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-3.10.1.tgz",
      "integrity": "sha512-IgieNijUMbkDovyoKObU1DUhm1iwNYE/fuifEoEHfd1oZKZDaONBSkal7Y01shxsM49R4XaMdGez3WnF9UfiCQ==",
      "license": "MIT",
      "dependencies": {
        "domelementtype": "^1.3.1",
        "domhandler": "^2.3.0",
        "domutils": "^1.5.1",
        "entities": "^1.1.1",
        "inherits": "^2.0.1",
        "readable-stream": "^3.1.1"
      }
    },
    "node_modules/http-auth": {
      "version": "3.2.4",
      "resolved": "https://registry.npmjs.org/http-auth/-/http-auth-3.2.4.tgz",
      "integrity": "sha512-jeWAPP0UbI3dM6knyYbYbMvBoxwXGQp0eu70GGV9Ezo/pHmpv1dFLwM0CtaG+GFqUBkGZM/V8Jp/0gXFYwIOUQ==",
      "license": "MIT",
      "dependencies": {
        "apache-crypt": "^1.1.2",
        "apache-md5": "^1.0.6",
        "bcryptjs": "^2.3.0",
        "uuid": "^3.0.0"
      },
      "engines": {
        "node": ">=4.6.1"
      }
    },
    "node_modules/http-auth/node_modules/uuid": {
      "version": "3.4.0",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
      "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==",
      "deprecated": "Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.",
      "license": "MIT",
      "bin": {
        "uuid": "bin/uuid"
      }
    },
    "node_modules/http-cache-semantics": {
      "version": "3.8.1",
      "resolved": "https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-3.8.1.tgz",
      "integrity": "sha512-5ai2iksyV8ZXmnZhHH4rWPoxxistEexSi5936zIQ1bnNTW5VnA85B6P/VpXiRM017IgRvb2kKo1a//y+0wSp3w==",
      "license": "BSD-2-Clause"
    },
    "node_modules/http-errors": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
      "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
      "license": "MIT",
      "dependencies": {
        "depd": "2.0.0",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "toidentifier": "1.0.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/http-proxy": {
      "version": "1.18.1",
      "resolved": "https://registry.npmjs.org/http-proxy/-/http-proxy-1.18.1.tgz",
      "integrity": "sha512-7mz/721AbnJwIVbnaSv1Cz3Am0ZLT/UBwkC92VlxhXv/k/BBQfM2fXElQNC27BVGr0uwUpplYPQM9LnaBMR5NQ==",
      "license": "MIT",
      "dependencies": {
        "eventemitter3": "^4.0.0",
        "follow-redirects": "^1.0.0",
        "requires-port": "^1.0.0"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/http-proxy-agent": {
      "version": "7.0.2",
      "resolved": "https://registry.npmjs.org/http-proxy-agent/-/http-proxy-agent-7.0.2.tgz",
      "integrity": "sha512-T1gkAiYYDWYx3V5Bmyu7HcfcvL7mUrTWiM6yOfa3PIphViJ/gFPbvidQ+veqSOHci/PxBcDabeUNCzpOODJZig==",
      "license": "MIT",
      "dependencies": {
        "agent-base": "^7.1.0",
        "debug": "^4.3.4"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/http-proxy-response-rewrite": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/http-proxy-response-rewrite/-/http-proxy-response-rewrite-0.0.1.tgz",
      "integrity": "sha512-smtaa2sKgiWrP9c9W+/MFzgjeh3A4zsQOLh1S3rp1NsmNYIVO07AlWUnhoUnMZIuxY6+3v7OS5NlDGX2I2DWBQ==",
      "license": "MIT",
      "dependencies": {
        "bufferhelper": "^0.2.1",
        "concat-stream": "^1.5.1"
      }
    },
    "node_modules/http-reasons": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/http-reasons/-/http-reasons-0.1.0.tgz",
      "integrity": "sha512-P6kYh0lKZ+y29T2Gqz+RlC9WBLhKe8kDmcJ+A+611jFfxdPsbMRQ5aNmFRM3lENqFkK+HTTL+tlQviAiv0AbLQ==",
      "license": "Apache-2.0"
    },
    "node_modules/http2-wrapper": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/http2-wrapper/-/http2-wrapper-1.0.3.tgz",
      "integrity": "sha512-V+23sDMr12Wnz7iTcDeJr3O6AIxlnvT/bmaAAAP/Xda35C90p9599p0F1eHR/N1KILWSoWVAiOMFjBBXaXSMxg==",
      "license": "MIT",
      "dependencies": {
        "quick-lru": "^5.1.1",
        "resolve-alpn": "^1.0.0"
      },
      "engines": {
        "node": ">=10.19.0"
      }
    },
    "node_modules/http2-wrapper/node_modules/quick-lru": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/quick-lru/-/quick-lru-5.1.1.tgz",
      "integrity": "sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/https-proxy-agent": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-7.0.6.tgz",
      "integrity": "sha512-vK9P5/iUfdl95AI+JVyUuIcVtd4ofvtrOr3HNtM2yxC9bnMbEdp3x01OhQNnjb8IJYi38VlTE3mBXwcfvywuSw==",
      "license": "MIT",
      "dependencies": {
        "agent-base": "^7.1.2",
        "debug": "4"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/human-signals": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/human-signals/-/human-signals-1.1.1.tgz",
      "integrity": "sha512-SEQu7vl8KjNL2eoGBLF3+wAjpsNfA9XMlXAYj/3EdaNfAlxKthD1xjEQfGOUhllCGGJVNY34bRr6lPINhNjyZw==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.12.0"
      }
    },
    "node_modules/iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "license": "MIT",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/ieee754": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz",
      "integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "BSD-3-Clause"
    },
    "node_modules/image-q": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/image-q/-/image-q-4.0.0.tgz",
      "integrity": "sha512-PfJGVgIfKQJuq3s0tTDOKtztksibuUEbJQIYT3by6wctQo+Rdlh7ef4evJ5NCdxY4CfMbvFkocEwbl4BF8RlJw==",
      "dependencies": {
        "@types/node": "16.9.1"
      }
    },
    "node_modules/image-q/node_modules/@types/node": {
      "version": "16.9.1",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-16.9.1.tgz",
      "integrity": "sha512-QpLcX9ZSsq3YYUUnD3nFDY8H7wctAhQj/TFKL8Ya8v5fMm3CFXxo8zStsLAl780ltoYoo1WvKUVGBQK+1ifr7g=="
    },
    "node_modules/image-size": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/image-size/-/image-size-1.0.0.tgz",
      "integrity": "sha512-JLJ6OwBfO1KcA+TvJT+v8gbE6iWbj24LyDNFgFEN0lzegn6cC6a/p3NIDaepMsJjQjlUWqIC7wJv8lBFxPNjcw==",
      "license": "MIT",
      "dependencies": {
        "queue": "6.0.2"
      },
      "bin": {
        "image-size": "bin/image-size.js"
      },
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/image-type": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/image-type/-/image-type-4.1.0.tgz",
      "integrity": "sha512-CFJMJ8QK8lJvRlTCEgarL4ro6hfDQKif2HjSvYCdQZESaIPV4v9imrf7BQHK+sQeTeNeMpWciR9hyC/g8ybXEg==",
      "license": "MIT",
      "dependencies": {
        "file-type": "^10.10.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/image-type/node_modules/file-type": {
      "version": "10.11.0",
      "resolved": "https://registry.npmjs.org/file-type/-/file-type-10.11.0.tgz",
      "integrity": "sha512-uzk64HRpUZyTGZtVuvrjP0FYxzQrBf4rojot6J65YMEbwBLB0CWm0CLojVpwpmFmxcE/lkvYICgfcGozbBq6rw==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/import-fresh": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz",
      "integrity": "sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==",
      "license": "MIT",
      "dependencies": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/import-lazy": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/import-lazy/-/import-lazy-2.1.0.tgz",
      "integrity": "sha512-m7ZEHgtw69qOGw+jwxXkHlrlIPdTGkyh66zXZ1ajZbxkDBNjSY/LGbmjc7h0s2ELsUDTAhFr55TrPSSqJGPG0A==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.8.19"
      }
    },
    "node_modules/indent-string": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/indent-string/-/indent-string-4.0.0.tgz",
      "integrity": "sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "deprecated": "This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.",
      "license": "ISC",
      "dependencies": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
      "license": "ISC"
    },
    "node_modules/ini": {
      "version": "1.3.8",
      "resolved": "https://registry.npmjs.org/ini/-/ini-1.3.8.tgz",
      "integrity": "sha512-JV/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgalhZ6RNXCmEHkUKBKxew==",
      "license": "ISC"
    },
    "node_modules/internal-slot": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/internal-slot/-/internal-slot-1.1.0.tgz",
      "integrity": "sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "hasown": "^2.0.2",
        "side-channel": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/into-stream": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/into-stream/-/into-stream-3.1.0.tgz",
      "integrity": "sha512-TcdjPibTksa1NQximqep2r17ISRiNE9fwlfbg3F8ANdvP5/yrFTew86VcO//jk4QTaMlbjypPBq76HN2zaKfZQ==",
      "license": "MIT",
      "dependencies": {
        "from2": "^2.1.1",
        "p-is-promise": "^1.1.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/ip": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/ip/-/ip-2.0.1.tgz",
      "integrity": "sha512-lJUL9imLTNi1ZfXT+DU6rBBdbiKGBuay9B6xGSPVjUeQwaH1RIGqef8RZkUtHioLmSNpPR5M4HVKJGm1j8FWVQ==",
      "license": "MIT"
    },
    "node_modules/ip-address": {
      "version": "9.0.5",
      "resolved": "https://registry.npmjs.org/ip-address/-/ip-address-9.0.5.tgz",
      "integrity": "sha512-zHtQzGojZXTwZTHQqra+ETKd4Sn3vgi7uBmlPoXVWZqYvuKmtI0l/VZTjqGmJY9x88GGOaZ9+G9ES8hC4T4X8g==",
      "license": "MIT",
      "dependencies": {
        "jsbn": "1.1.0",
        "sprintf-js": "^1.1.3"
      },
      "engines": {
        "node": ">= 12"
      }
    },
    "node_modules/ip-regex": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ip-regex/-/ip-regex-4.3.0.tgz",
      "integrity": "sha512-B9ZWJxHHOHUhUjCPrMpLD4xEq35bUTClHM1S6CBU5ixQnkZmwipwgc96vAd7AAGM9TGHvJR+Uss+/Ak6UphK+Q==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ip6": {
      "version": "0.2.11",
      "resolved": "https://registry.npmjs.org/ip6/-/ip6-0.2.11.tgz",
      "integrity": "sha512-OmTP7FyIp+ZoNvZ7Xr97bWrCgypa3BeuYuRFNTOPT8Y11cxMW1pW1VC70kHZP1onSHHMotADcjdg5QyECiIMUw==",
      "license": "MIT",
      "bin": {
        "ip6": "ip6-cli.js"
      }
    },
    "node_modules/ipaddr.js": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
      "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/is-accessor-descriptor": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.1.tgz",
      "integrity": "sha512-YBUanLI8Yoihw923YeFUS5fs0fF2f5TSFTNiYAAzhhDscDa3lEqYuz1pDOEP5KvX94I9ey3vsqjJcLVFVU+3QA==",
      "license": "MIT",
      "dependencies": {
        "hasown": "^2.0.0"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/is-array-buffer": {
      "version": "3.0.5",
      "resolved": "https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.5.tgz",
      "integrity": "sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-arrayish": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
      "integrity": "sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==",
      "license": "MIT"
    },
    "node_modules/is-async-function": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-async-function/-/is-async-function-2.1.1.tgz",
      "integrity": "sha512-9dgM/cZBnNvjzaMYHVoxxfPj2QXt22Ev7SuuPrs+xav0ukGB0S6d4ydZdEiM48kLx5kDV+QBPrpVnFyefL8kkQ==",
      "license": "MIT",
      "dependencies": {
        "async-function": "^1.0.0",
        "call-bound": "^1.0.3",
        "get-proto": "^1.0.1",
        "has-tostringtag": "^1.0.2",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-bigint": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-bigint/-/is-bigint-1.1.0.tgz",
      "integrity": "sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==",
      "license": "MIT",
      "dependencies": {
        "has-bigints": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "license": "MIT",
      "dependencies": {
        "binary-extensions": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-boolean-object": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.2.2.tgz",
      "integrity": "sha512-wa56o2/ElJMYqjCjGkXri7it5FbebW5usLw/nPmCMs5DeZ7eziSYZhSmPRn0txqeW4LnAmQQU7FgqLpsEFKM4A==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-buffer": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
      "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
      "license": "MIT"
    },
    "node_modules/is-callable": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz",
      "integrity": "sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-ci": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
      "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
      "license": "MIT",
      "dependencies": {
        "ci-info": "^2.0.0"
      },
      "bin": {
        "is-ci": "bin.js"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.16.1",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz",
      "integrity": "sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==",
      "license": "MIT",
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-data-descriptor": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.1.tgz",
      "integrity": "sha512-bc4NlCDiCr28U4aEsQ3Qs2491gVq4V8G7MQyws968ImqjKuYtTJXrl7Vq7jsN7Ly/C3xj5KWFrY7sHNeDkAzXw==",
      "license": "MIT",
      "dependencies": {
        "hasown": "^2.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/is-data-view": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-data-view/-/is-data-view-1.0.2.tgz",
      "integrity": "sha512-RKtWF8pGmS87i2D6gqQu/l7EYRlVdfzemCJN/P3UOs//x1QE7mfhvzHIApBTRf7axvT6DMGwSwBXYCT0nfB9xw==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "get-intrinsic": "^1.2.6",
        "is-typed-array": "^1.1.13"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-date-object": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.1.0.tgz",
      "integrity": "sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-descriptor": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.3.tgz",
      "integrity": "sha512-JCNNGbwWZEVaSPtS45mdtrneRWJFp07LLmykxeFV5F6oBvNF8vHSfJuJgoT472pSfk+Mf8VnlrspaFBHWM8JAw==",
      "license": "MIT",
      "dependencies": {
        "is-accessor-descriptor": "^1.0.1",
        "is-data-descriptor": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/is-docker": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/is-docker/-/is-docker-2.2.1.tgz",
      "integrity": "sha512-F+i2BKsFrH66iaUFc0woD8sLy8getkwTwtOBjvs56Cx4CgJDeKQeqfz8wAYiSb8JOprWhHH5p77PbmYCvvUuXQ==",
      "license": "MIT",
      "bin": {
        "is-docker": "cli.js"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-extendable": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-0.1.1.tgz",
      "integrity": "sha512-5BMULNob1vgFX6EjQw5izWDxrecWK9AM72rugNr0TFldMOi0fj6Jk+zeKIt0xGj4cEfQIJth4w3OKWOJ4f+AFw==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-finalizationregistry": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-finalizationregistry/-/is-finalizationregistry-1.1.1.tgz",
      "integrity": "sha512-1pC6N8qWJbWoPtEjgcL2xyhQOP491EQjeUo3qTKcmV8YSDDJrOepfG8pcC7h/QgnQHYSv0mJ3Z/ZWxmatVrysg==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-function": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-function/-/is-function-1.0.2.tgz",
      "integrity": "sha512-lw7DUp0aWXYg+CBCN+JKkcE0Q2RayZnSvnZBlwgxHBQhqt5pZNVy4Ri7H9GmmXkdu7LUthszM+Tor1u/2iBcpQ=="
    },
    "node_modules/is-generator-function": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.1.0.tgz",
      "integrity": "sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "get-proto": "^1.0.0",
        "has-tostringtag": "^1.0.2",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "license": "MIT",
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-installed-globally": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/is-installed-globally/-/is-installed-globally-0.4.0.tgz",
      "integrity": "sha512-iwGqO3J21aaSkC7jWnHP/difazwS7SFeIqxv6wEtLU8Y5KlzFTjyqcSIT0d8s4+dDhKytsk9PJZ2BkS5eZwQRQ==",
      "license": "MIT",
      "dependencies": {
        "global-dirs": "^3.0.0",
        "is-path-inside": "^3.0.2"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-map": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/is-map/-/is-map-2.0.3.tgz",
      "integrity": "sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-negative-zero": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/is-negative-zero/-/is-negative-zero-2.0.3.tgz",
      "integrity": "sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-npm": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/is-npm/-/is-npm-5.0.0.tgz",
      "integrity": "sha512-WW/rQLOazUq+ST/bCAVBp/2oMERWLsR7OrKyt052dNDk4DHcDE0/7QSXITlmi+VBcV13DfIbysG3tZJm5RfdBA==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "license": "MIT",
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/is-number-object": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-number-object/-/is-number-object-1.1.1.tgz",
      "integrity": "sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-obj": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-obj/-/is-obj-2.0.0.tgz",
      "integrity": "sha512-drqDG3cbczxxEJRoOXcOjtdp1J/lyp1mNn0xaznRs8+muBhgQcrnbspox5X5fOw0HnMnbfDzvnEMEtqDEJEo8w==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-object": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-object/-/is-object-1.0.2.tgz",
      "integrity": "sha512-2rRIahhZr2UWb45fIOuvZGpFtz0TyOZLf32KxBbSoUCeZR495zCKlWUKKUByk3geS2eAs7ZAABt0Y/Rx0GiQGA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-path-inside": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz",
      "integrity": "sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-plain-obj": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-1.1.0.tgz",
      "integrity": "sha512-yvkRyxmFKEOQ4pNXCmJG5AEQNlXJS5LaONXo5/cLdTZdWvsZ1ioJEonLGAosKlMWE8lwUy/bJzMjcw8az73+Fg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-plain-object": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-2.0.4.tgz",
      "integrity": "sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==",
      "license": "MIT",
      "dependencies": {
        "isobject": "^3.0.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-regex": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.2.1.tgz",
      "integrity": "sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "gopd": "^1.2.0",
        "has-tostringtag": "^1.0.2",
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-retry-allowed": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/is-retry-allowed/-/is-retry-allowed-1.2.0.tgz",
      "integrity": "sha512-RUbUeKwvm3XG2VYamhJL1xFktgjvPzL0Hq8C+6yrWIswDy3BIXGqCxhxkc30N9jqK311gVU137K8Ei55/zVJRg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-running": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/is-running/-/is-running-1.0.5.tgz",
      "integrity": "sha512-DFqGeeOOhKNHoaqcg7URyNLWZFaBIwK8+SeIq1kp/OCZnkLFeNBJGrIIGEUfWYR6+uCdK3AqU4l/xPU4tZ9ULQ=="
    },
    "node_modules/is-set": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/is-set/-/is-set-2.0.3.tgz",
      "integrity": "sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-shared-array-buffer": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.4.tgz",
      "integrity": "sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-ssh": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/is-ssh/-/is-ssh-1.4.1.tgz",
      "integrity": "sha512-JNeu1wQsHjyHgn9NcWTaXq6zWSR6hqE0++zhfZlkFBbScNkyvxCdeV8sRkSBaeLKxmbpR21brail63ACNxJ0Tg==",
      "license": "MIT",
      "dependencies": {
        "protocols": "^2.0.1"
      }
    },
    "node_modules/is-ssh/node_modules/protocols": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/protocols/-/protocols-2.0.2.tgz",
      "integrity": "sha512-hHVTzba3wboROl0/aWRRG9dMytgH6ow//STBZh43l/wQgmMhYhOFi0EHWAPtoCz9IAUymsyP0TSBHkhgMEGNnQ==",
      "license": "MIT"
    },
    "node_modules/is-stream": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz",
      "integrity": "sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-string": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-string/-/is-string-1.1.1.tgz",
      "integrity": "sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-symbol": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.1.1.tgz",
      "integrity": "sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "has-symbols": "^1.1.0",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-typed-array": {
      "version": "1.1.15",
      "resolved": "https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.15.tgz",
      "integrity": "sha512-p3EcsicXjit7SaskXHs1hA91QxgTw46Fv6EFKKGS5DRFLD8yKnohjF3hxoju94b/OcMZoQukzpPpBE9uLVKzgQ==",
      "license": "MIT",
      "dependencies": {
        "which-typed-array": "^1.1.16"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-typedarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
      "integrity": "sha512-cyA56iCMHAh5CdzjJIa4aohJyeO1YbwLi3Jc35MmRU6poroFjIGZzUzupGiRPOjgHg9TLu43xbpwXk523fMxKA==",
      "license": "MIT"
    },
    "node_modules/is-url": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/is-url/-/is-url-1.2.4.tgz",
      "integrity": "sha512-ITvGim8FhRiYe4IQ5uHSkj7pVaPDrCTkNd3yq3cV7iZAcJdHTUMPMEHcqSOy9xZ9qFenQCvi+2wjH9a1nXqHww==",
      "license": "MIT"
    },
    "node_modules/is-url-superb": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/is-url-superb/-/is-url-superb-5.0.0.tgz",
      "integrity": "sha512-jGkG59ra7/JlcV8ap3dsc0M79IgpuFU/obfsSf6X5D0z1NVvFTFuzt4ob7nfBTZEPbTwjGXVKNQDfWfPghapKQ==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-weakmap": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/is-weakmap/-/is-weakmap-2.0.2.tgz",
      "integrity": "sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-weakref": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-weakref/-/is-weakref-1.1.1.tgz",
      "integrity": "sha512-6i9mGWSlqzNMEqpCp93KwRS1uUOodk2OJ6b+sq7ZPDSy2WuI5NFIxp/254TytR8ftefexkWn5xNiHUNpPOfSew==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-weakset": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.4.tgz",
      "integrity": "sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-wsl": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-2.2.0.tgz",
      "integrity": "sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3n1oBnohoVTBaN7Lww==",
      "license": "MIT",
      "dependencies": {
        "is-docker": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-yarn-global": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/is-yarn-global/-/is-yarn-global-0.3.0.tgz",
      "integrity": "sha512-VjSeb/lHmkoyd8ryPVIKvOCn4D1koMqY+vqyjjUfc3xyKtP4dYOxM44sZrnqQSzSds3xyOrUTLTC9LVCVgLngw==",
      "license": "MIT"
    },
    "node_modules/is2": {
      "version": "2.0.9",
      "resolved": "https://registry.npmjs.org/is2/-/is2-2.0.9.tgz",
      "integrity": "sha512-rZkHeBn9Zzq52sd9IUIV3a5mfwBY+o2HePMh0wkGBM4z4qjvy2GwVxQ6nNXSfw6MmVP6gf1QIlWjiOavhM3x5g==",
      "license": "MIT",
      "dependencies": {
        "deep-is": "^0.1.3",
        "ip-regex": "^4.1.0",
        "is-url": "^1.2.4"
      },
      "engines": {
        "node": ">=v0.10.0"
      }
    },
    "node_modules/isarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
      "integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==",
      "license": "MIT"
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "license": "ISC"
    },
    "node_modules/isobject": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
      "integrity": "sha512-WhB9zCku7EGTj/HQQRz5aUQEUeoQZH2bWcltRErOpymJ4boYE6wL9Tbr23krRPSZ+C5zqNSrSw+Cc7sZZ4b7vg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/isurl": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/isurl/-/isurl-1.0.0.tgz",
      "integrity": "sha512-1P/yWsxPlDtn7QeRD+ULKQPaIaN6yF368GZ2vDfv0AL0NwpStafjWCDDdn0k8wgFMWpVAqG7oJhxHnlud42i9w==",
      "license": "MIT",
      "dependencies": {
        "has-to-string-tag-x": "^1.2.0",
        "is-object": "^1.0.1"
      },
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/jest-worker": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-27.5.1.tgz",
      "integrity": "sha512-7vuh85V5cdDofPyxn58nrPjBktZo0u9x1g8WtjQol+jZDaE+fhN+cIvTj11GndBnMnyfrUOG1sZQxCdjKh+DKg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@types/node": "*",
        "merge-stream": "^2.0.0",
        "supports-color": "^8.0.0"
      },
      "engines": {
        "node": ">= 10.13.0"
      }
    },
    "node_modules/jest-worker/node_modules/supports-color": {
      "version": "8.1.1",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz",
      "integrity": "sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/supports-color?sponsor=1"
      }
    },
    "node_modules/jimp": {
      "version": "0.16.1",
      "resolved": "https://registry.npmjs.org/jimp/-/jimp-0.16.1.tgz",
      "integrity": "sha512-+EKVxbR36Td7Hfd23wKGIeEyHbxShZDX6L8uJkgVW3ESA9GiTEPK08tG1XI2r/0w5Ch0HyJF5kPqF9K7EmGjaw==",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/custom": "^0.16.1",
        "@jimp/plugins": "^0.16.1",
        "@jimp/types": "^0.16.1",
        "regenerator-runtime": "^0.13.3"
      }
    },
    "node_modules/jpeg-js": {
      "version": "0.4.4",
      "resolved": "https://registry.npmjs.org/jpeg-js/-/jpeg-js-0.4.4.tgz",
      "integrity": "sha512-WZzeDOEtTOBK4Mdsar0IqEU5sMr3vSV2RqkAIzUEV2BHnUfKGyswWFPFwK5EeDo93K3FohSHbLAjj0s1Wzd+dg=="
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
      "license": "MIT"
    },
    "node_modules/js-yaml": {
      "version": "3.14.1",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz",
      "integrity": "sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==",
      "license": "MIT",
      "dependencies": {
        "argparse": "^1.0.7",
        "esprima": "^4.0.0"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/jsbn": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-1.1.0.tgz",
      "integrity": "sha512-4bYVV3aAMtDTTu4+xsDYa6sy9GyJ69/amsu9sYF2zqjiEoZA5xJi3BrfX3uY+/IekIu7MwdObdbDWpoZdBv3/A==",
      "license": "MIT"
    },
    "node_modules/json-buffer": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.0.tgz",
      "integrity": "sha512-CuUqjv0FUZIdXkHPI8MezCnFCdaTAacej1TZYulLoAg1h/PhwkdXFN4V/gzY4g+fMBCOV2xF+rp7t2XD2ns/NQ==",
      "license": "MIT"
    },
    "node_modules/json-parse-even-better-errors": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
      "integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==",
      "license": "MIT"
    },
    "node_modules/json-schema-traverse": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz",
      "integrity": "sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/json5": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
      "license": "MIT",
      "bin": {
        "json5": "lib/cli.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/jsonfile": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
      "integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
      "license": "MIT",
      "dependencies": {
        "universalify": "^2.0.0"
      },
      "optionalDependencies": {
        "graceful-fs": "^4.1.6"
      }
    },
    "node_modules/kareem": {
      "version": "2.6.3",
      "resolved": "https://registry.npmjs.org/kareem/-/kareem-2.6.3.tgz",
      "integrity": "sha512-C3iHfuGUXK2u8/ipq9LfjFfXFxAZMQJJq7vLS45r3D9Y2xQ/m4S8zaR4zMLFWh9AsNPXmcFfUDhTEO8UIC/V6Q==",
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/keygrip": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/keygrip/-/keygrip-1.1.0.tgz",
      "integrity": "sha512-iYSchDJ+liQ8iwbSI2QqsQOvqv58eJCEanyJPJi+Khyu8smkcKSFUCbPwzFcL7YVtZ6eONjqRX/38caJ7QjRAQ==",
      "license": "MIT",
      "dependencies": {
        "tsscmp": "1.0.6"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/keyv": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-3.0.0.tgz",
      "integrity": "sha512-eguHnq22OE3uVoSYG0LVWNP+4ppamWr9+zWBe1bsNcovIMy6huUJFPgy4mGwCd/rnl3vOLGW1MTlu4c57CT1xA==",
      "license": "MIT",
      "dependencies": {
        "json-buffer": "3.0.0"
      }
    },
    "node_modules/kind-of": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
      "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/klaw-sync": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/klaw-sync/-/klaw-sync-6.0.0.tgz",
      "integrity": "sha512-nIeuVSzdCCs6TDPTqI8w1Yre34sSq7AkZ4B3sfOBbI2CgVSB4Du4aLQijFU2+lhAFCwt9+42Hel6lQNIv6AntQ==",
      "license": "MIT",
      "dependencies": {
        "graceful-fs": "^4.1.11"
      }
    },
    "node_modules/klona": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/klona/-/klona-2.0.6.tgz",
      "integrity": "sha512-dhG34DXATL5hSxJbIexCft8FChFXtmskoZYnoPWjXQuebWYCNkVeV3KkGegCK9CP1oswI/vQibS2GY7Em/sJJA==",
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/kuler": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/kuler/-/kuler-2.0.0.tgz",
      "integrity": "sha512-Xq9nH7KlWZmXAtodXDDRE7vs6DU1gTU8zYDHDiWLSip45Egwq3plLHzPn27NgvzL2r1LMPC1vdqh98sQxtqj4A==",
      "license": "MIT"
    },
    "node_modules/latest-version": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/latest-version/-/latest-version-5.1.0.tgz",
      "integrity": "sha512-weT+r0kTkRQdCdYCNtkMwWXQTMEswKrFBkm4ckQOMVhhqhIMI1UT2hMj+1iigIhgSZm5gTmrRXBNoGUgaTY1xA==",
      "license": "MIT",
      "dependencies": {
        "package-json": "^6.3.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/lazy-cache": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/lazy-cache/-/lazy-cache-1.0.4.tgz",
      "integrity": "sha512-RE2g0b5VGZsOCFOCgP7omTRYFqydmZkBwl5oNnQ1lDYC57uyO9KqNnNVxT7COSHTxrRCWVcAVOcbjk+tvh/rgQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/lazystream": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/lazystream/-/lazystream-1.0.1.tgz",
      "integrity": "sha512-b94GiNHQNy6JNTrt5w6zNyffMrNkXZb3KTkCZJb2V1xaEGCk093vkZ2jk3tpaeP33/OiXC+WvK9AxUebnf5nbw==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "readable-stream": "^2.0.5"
      },
      "engines": {
        "node": ">= 0.6.3"
      }
    },
    "node_modules/lazystream/node_modules/readable-stream": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.8.tgz",
      "integrity": "sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "core-util-is": "~1.0.0",
        "inherits": "~2.0.3",
        "isarray": "~1.0.0",
        "process-nextick-args": "~2.0.0",
        "safe-buffer": "~5.1.1",
        "string_decoder": "~1.1.1",
        "util-deprecate": "~1.0.1"
      }
    },
    "node_modules/lazystream/node_modules/safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/lazystream/node_modules/string_decoder": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "safe-buffer": "~5.1.0"
      }
    },
    "node_modules/lighthouse-logger": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/lighthouse-logger/-/lighthouse-logger-1.4.2.tgz",
      "integrity": "sha512-gPWxznF6TKmUHrOQjlVo2UbaL2EJ71mb2CCeRs/2qBpi4L/g4LUVc9+3lKQ6DTUZwJswfM7ainGrLO1+fOqa2g==",
      "license": "Apache-2.0",
      "dependencies": {
        "debug": "^2.6.9",
        "marky": "^1.2.2"
      }
    },
    "node_modules/lighthouse-logger/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/lighthouse-logger/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "license": "MIT"
    },
    "node_modules/lines-and-columns": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==",
      "license": "MIT"
    },
    "node_modules/liquid-json": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/liquid-json/-/liquid-json-0.3.1.tgz",
      "integrity": "sha512-wUayTU8MS827Dam6MxgD72Ui+KOSF+u/eIqpatOtjnvgJ0+mnDq33uC2M7J0tPK+upe/DpUAuK4JUU89iBoNKQ==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/listenercount": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/listenercount/-/listenercount-1.0.1.tgz",
      "integrity": "sha512-3mk/Zag0+IJxeDrxSgaDPy4zZ3w05PRZeJNnlWhzFz5OkX49J4krc+A8X2d2M69vGMBEX0uyl8M+W+8gH+kBqQ==",
      "license": "ISC",
      "optional": true
    },
    "node_modules/load-bmfont": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/load-bmfont/-/load-bmfont-1.4.2.tgz",
      "integrity": "sha512-qElWkmjW9Oq1F9EI5Gt7aD9zcdHb9spJCW1L/dmPf7KzCCEJxq8nhHz5eCgI9aMf7vrG/wyaCqdsI+Iy9ZTlog==",
      "dependencies": {
        "buffer-equal": "0.0.1",
        "mime": "^1.3.4",
        "parse-bmfont-ascii": "^1.0.3",
        "parse-bmfont-binary": "^1.0.5",
        "parse-bmfont-xml": "^1.1.4",
        "phin": "^3.7.1",
        "xhr": "^2.0.1",
        "xtend": "^4.0.0"
      }
    },
    "node_modules/load-bmfont/node_modules/mime": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
      "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
      "bin": {
        "mime": "cli.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/load-bmfont/node_modules/phin": {
      "version": "3.7.1",
      "resolved": "https://registry.npmjs.org/phin/-/phin-3.7.1.tgz",
      "integrity": "sha512-GEazpTWwTZaEQ9RhL7Nyz0WwqilbqgLahDM3D0hxWwmVDI52nXEybHqiN6/elwpkJBhcuj+WbBu+QfT0uhPGfQ==",
      "dependencies": {
        "centra": "^2.7.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/loader-runner": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/loader-runner/-/loader-runner-4.3.0.tgz",
      "integrity": "sha512-3R/1M+yS3j5ou80Me59j7F9IMs4PXs3VqRrm0TU3AbKPxlmpoY1TNscJV/oGJXo8qCatFGTfDbY6W6ipGOYXfg==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=6.11.5"
      }
    },
    "node_modules/localtunnel": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/localtunnel/-/localtunnel-2.0.2.tgz",
      "integrity": "sha512-n418Cn5ynvJd7m/N1d9WVJISLJF/ellZnfsLnx8WBWGzxv/ntNcFkJ1o6se5quUhCplfLGBNL5tYHiq5WF3Nug==",
      "license": "MIT",
      "dependencies": {
        "axios": "0.21.4",
        "debug": "4.3.2",
        "openurl": "1.1.1",
        "yargs": "17.1.1"
      },
      "bin": {
        "lt": "bin/lt.js"
      },
      "engines": {
        "node": ">=8.3.0"
      }
    },
    "node_modules/localtunnel/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/localtunnel/node_modules/axios": {
      "version": "0.21.4",
      "resolved": "https://registry.npmjs.org/axios/-/axios-0.21.4.tgz",
      "integrity": "sha512-ut5vewkiu8jjGBdqpM44XxjuCjq9LAKeHVmoVfHVzy8eHgxxq8SbAVQNovDA8mVi05kP0Ea/n/UzcSHcTJQfNg==",
      "license": "MIT",
      "dependencies": {
        "follow-redirects": "^1.14.0"
      }
    },
    "node_modules/localtunnel/node_modules/cliui": {
      "version": "7.0.4",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz",
      "integrity": "sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==",
      "license": "ISC",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "wrap-ansi": "^7.0.0"
      }
    },
    "node_modules/localtunnel/node_modules/debug": {
      "version": "4.3.2",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.2.tgz",
      "integrity": "sha512-mOp8wKcvj7XxC78zLgw/ZA+6TSgkoE2C/ienthhRD298T7UNwAg9diBpLRxC0mOezLl4B0xV7M0cCO6P/O0Xhw==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/localtunnel/node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
      "license": "MIT"
    },
    "node_modules/localtunnel/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/localtunnel/node_modules/yargs": {
      "version": "17.1.1",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.1.1.tgz",
      "integrity": "sha512-c2k48R0PwKIqKhPMWjeiF6y2xY/gPMUlro0sgxqXpbOIohWiLNXWslsootttv7E1e73QPAMQSg5FeySbVcpsPQ==",
      "license": "MIT",
      "dependencies": {
        "cliui": "^7.0.2",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.0",
        "y18n": "^5.0.5",
        "yargs-parser": "^20.2.2"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/locate-path": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
      "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
      "license": "MIT",
      "dependencies": {
        "p-locate": "^5.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
      "license": "MIT"
    },
    "node_modules/lodash.clonedeep": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/lodash.clonedeep/-/lodash.clonedeep-4.5.0.tgz",
      "integrity": "sha512-H5ZhCF25riFd9uB5UCkVKo61m3S/xZk1x4wA6yp/L3RFP6Z/eHH1ymQcGLo7J3GMPfm0V/7m1tryHuGVxpqEBQ==",
      "license": "MIT"
    },
    "node_modules/lodash.defaults": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/lodash.defaults/-/lodash.defaults-4.2.0.tgz",
      "integrity": "sha512-qjxPLHd3r5DnsdGacqOMU6pb/avJzdh9tFX2ymgoZE27BmjXrNy/y4LoaiTeAb+O3gL8AfpJGtqfX/ae2leYYQ==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/lodash.difference": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/lodash.difference/-/lodash.difference-4.5.0.tgz",
      "integrity": "sha512-dS2j+W26TQ7taQBGN8Lbbq04ssV3emRw4NY58WErlTO29pIqS0HmoT5aJ9+TUQ1N3G+JOZSji4eugsWwGp9yPA==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/lodash.escaperegexp": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/lodash.escaperegexp/-/lodash.escaperegexp-4.1.2.tgz",
      "integrity": "sha512-TM9YBvyC84ZxE3rgfefxUWiQKLilstD6k7PTGt6wfbtXF8ixIJLOL3VYyV/z+ZiPLsVxAsKAFVwWlWeb2Y8Yyw==",
      "license": "MIT"
    },
    "node_modules/lodash.flatten": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/lodash.flatten/-/lodash.flatten-4.4.0.tgz",
      "integrity": "sha512-C5N2Z3DgnnKr0LOpv/hKCgKdb7ZZwafIrsesve6lmzvZIRZRGaZ/l6Q8+2W7NaT+ZwO3fFlSCzCzrDCFdJfZ4g==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/lodash.isplainobject": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz",
      "integrity": "sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==",
      "license": "MIT"
    },
    "node_modules/lodash.isstring": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz",
      "integrity": "sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw==",
      "license": "MIT"
    },
    "node_modules/lodash.mergewith": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/lodash.mergewith/-/lodash.mergewith-4.6.2.tgz",
      "integrity": "sha512-GK3g5RPZWTRSeLSpgP8Xhra+pnjBC56q9FZYe1d5RN3TJ35dbkGy3YqBSMbyCrlbi+CM9Z3Jk5yTL7RCsqboyQ==",
      "license": "MIT"
    },
    "node_modules/lodash.union": {
      "version": "4.6.0",
      "resolved": "https://registry.npmjs.org/lodash.union/-/lodash.union-4.6.0.tgz",
      "integrity": "sha512-c4pB2CdGrGdjMKYLA+XiRDO7Y0PRQbm/Gzg8qMj+QH+pFVAoTp5sBpO0odL3FjoPCGjK96p6qsP+yQoiLoOBcw==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/lodash.uniq": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/lodash.uniq/-/lodash.uniq-4.5.0.tgz",
      "integrity": "sha512-xfBaXQd9ryd9dlSDvnvI0lvxfLJlYAZzXomUYzLKtUeOQvOP5piqAWuGtrhWeqaXK9hhoM/iyJc5AV+XfsX3HQ==",
      "license": "MIT"
    },
    "node_modules/logform": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/logform/-/logform-2.7.0.tgz",
      "integrity": "sha512-TFYA4jnP7PVbmlBIfhlSe+WKxs9dklXMTEGcBCIvLhE/Tn3H6Gk1norupVW7m5Cnd4bLcr08AytbyV/xj7f/kQ==",
      "license": "MIT",
      "dependencies": {
        "@colors/colors": "1.6.0",
        "@types/triple-beam": "^1.3.2",
        "fecha": "^4.2.0",
        "ms": "^2.1.1",
        "safe-stable-stringify": "^2.3.1",
        "triple-beam": "^1.3.0"
      },
      "engines": {
        "node": ">= 12.0.0"
      }
    },
    "node_modules/lower-case": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/lower-case/-/lower-case-2.0.2.tgz",
      "integrity": "sha512-7fm3l3NAF9WfN6W3JOmf5drwpVqX78JtoGJ3A6W0a6ZnldM41w2fV5D490psKFTpMds8TJse/eHLFFsNHHjHgg==",
      "license": "MIT",
      "dependencies": {
        "tslib": "^2.0.3"
      }
    },
    "node_modules/lower-case/node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/lowercase-keys": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-1.0.1.tgz",
      "integrity": "sha512-G2Lj61tXDnVFFOi8VZds+SoQjtQC3dgokKdDG2mTm1tx4m50NUHBOZSBwQQHyy0V12A0JTG4icfZQH+xPyh8VA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/lru-cache": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
      "license": "ISC",
      "dependencies": {
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/m3u8stream": {
      "version": "0.8.6",
      "resolved": "https://registry.npmjs.org/m3u8stream/-/m3u8stream-0.8.6.tgz",
      "integrity": "sha512-LZj8kIVf9KCphiHmH7sbFQTVe4tOemb202fWwvJwR9W5ENW/1hxJN6ksAWGhQgSBSa3jyWhnjKU1Fw1GaOdbyA==",
      "license": "MIT",
      "dependencies": {
        "miniget": "^4.2.2",
        "sax": "^1.2.4"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/macos-release": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/macos-release/-/macos-release-2.5.1.tgz",
      "integrity": "sha512-DXqXhEM7gW59OjZO8NIjBCz9AQ1BEMrfiOAl4AYByHCtVHRF4KoGNO8mqQeM8lRCtQe/UnJ4imO/d2HdkKsd+A==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/make-dir": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.1.0.tgz",
      "integrity": "sha512-g3FeP20LNwhALb/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J/fiSf1sa1ADhXqi5+oVwOM/eGw==",
      "license": "MIT",
      "dependencies": {
        "semver": "^6.0.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/make-dir/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/map-obj": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/map-obj/-/map-obj-4.3.0.tgz",
      "integrity": "sha512-hdN1wVrZbb29eBGiGjJbeP8JbKjq1urkHJ/LIP/NY48MZ1QVXUsQBV1G1zvYFHn1XE06cwjBsOI2K3Ulnj1YXQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/map-stream": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/map-stream/-/map-stream-0.1.0.tgz",
      "integrity": "sha512-CkYQrPYZfWnu/DAmVCpTSX/xHpKZ80eKh2lAkyA6AJTef6bW+6JpbQZN5rofum7da+SyN1bi5ctTm+lTfcCW3g=="
    },
    "node_modules/marked": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/marked/-/marked-2.0.1.tgz",
      "integrity": "sha512-5+/fKgMv2hARmMW7DOpykr2iLhl0NgjyELk5yn92iE7z8Se1IS9n3UsFm86hFXIkvMBmVxki8+ckcpjBeyo/hw==",
      "license": "MIT",
      "bin": {
        "marked": "bin/marked"
      },
      "engines": {
        "node": ">= 8.16.2"
      }
    },
    "node_modules/marky": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/marky/-/marky-1.3.0.tgz",
      "integrity": "sha512-ocnPZQLNpvbedwTy9kNrQEsknEfgvcLMvOtz3sFeWApDq1MXH1TqkCIx58xlpESsfwQOnuBO9beyQuNGzVvuhQ==",
      "license": "Apache-2.0"
    },
    "node_modules/math-intrinsics": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/media-typer": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
      "integrity": "sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/memory-pager": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/memory-pager/-/memory-pager-1.5.0.tgz",
      "integrity": "sha512-ZS4Bp4r/Zoeq6+NLJpP+0Zzm0pR8whtGPf1XExKLJBAczGMnSi3It14OiNCStjQjM6NU1okjQGSxgEZN8eBYKg=="
    },
    "node_modules/meow": {
      "version": "9.0.0",
      "resolved": "https://registry.npmjs.org/meow/-/meow-9.0.0.tgz",
      "integrity": "sha512-+obSblOQmRhcyBt62furQqRAQpNyWXo8BuQ5bN7dG8wmwQ+vwHKp/rCFD4CrTP8CsDQD1sjoZ94K417XEUk8IQ==",
      "license": "MIT",
      "dependencies": {
        "@types/minimist": "^1.2.0",
        "camelcase-keys": "^6.2.2",
        "decamelize": "^1.2.0",
        "decamelize-keys": "^1.1.0",
        "hard-rejection": "^2.1.0",
        "minimist-options": "4.1.0",
        "normalize-package-data": "^3.0.0",
        "read-pkg-up": "^7.0.1",
        "redent": "^3.0.0",
        "trim-newlines": "^3.0.0",
        "type-fest": "^0.18.0",
        "yargs-parser": "^20.2.3"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/meow/node_modules/type-fest": {
      "version": "0.18.1",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.18.1.tgz",
      "integrity": "sha512-OIAYXk8+ISY+qTOwkHtKqzAuxchoMiD9Udx+FSGQDuiRR+PJKJHc2NJAXlbhkGwTt/4/nKZxELY1w3ReWOL8mw==",
      "license": "(MIT OR CC0-1.0)",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/merge-deep": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/merge-deep/-/merge-deep-3.0.3.tgz",
      "integrity": "sha512-qtmzAS6t6grwEkNrunqTBdn0qKwFgNWvlxUbAV8es9M7Ot1EbyApytCnvE0jALPa46ZpKDUo527kKiaWplmlFA==",
      "license": "MIT",
      "dependencies": {
        "arr-union": "^3.1.0",
        "clone-deep": "^0.2.4",
        "kind-of": "^3.0.2"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/merge-deep/node_modules/kind-of": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
      "integrity": "sha512-NOW9QQXMoZGg/oqnVNoNTTIFEIid1627WCffUBJEdMxYApq7mNE7CpzucIPc+ZQg25Phej7IJSmX3hO+oblOtQ==",
      "license": "MIT",
      "dependencies": {
        "is-buffer": "^1.1.5"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/merge-descriptors": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.3.tgz",
      "integrity": "sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/merge-stream": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz",
      "integrity": "sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==",
      "license": "MIT"
    },
    "node_modules/merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/methods": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
      "integrity": "sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/micromatch": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
      "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
      "license": "MIT",
      "dependencies": {
        "braces": "^3.0.3",
        "picomatch": "^2.3.1"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/mime": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/mime/-/mime-3.0.0.tgz",
      "integrity": "sha512-jSCU7/VB1loIWBZe14aEYHU/+1UMEHoaO7qxCOVJOw9GgH72VAWppxNcjU+x9a2k3GSIBXNKxXQFqRvvZ7vr3A==",
      "license": "MIT",
      "bin": {
        "mime": "cli.js"
      },
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime-format": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/mime-format/-/mime-format-2.0.1.tgz",
      "integrity": "sha512-XxU3ngPbEnrYnNbIX+lYSaYg0M01v6p2ntd2YaFksTu0vayaw5OJvbdRyWs07EYRlLED5qadUZ+xo+XhOvFhwg==",
      "license": "Apache-2.0",
      "dependencies": {
        "charset": "^1.0.0"
      }
    },
    "node_modules/mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "license": "MIT",
      "dependencies": {
        "mime-db": "1.52.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mimer": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/mimer/-/mimer-2.0.2.tgz",
      "integrity": "sha512-izxvjsB7Ur5HrTbPu6VKTrzxSMBFBqyZQc6dWlZNQ4/wAvf886fD4lrjtFd8IQ8/WmZKdxKjUtqFFNaj3hQ52g==",
      "license": "MIT",
      "bin": {
        "mimer": "bin/mimer"
      },
      "engines": {
        "node": ">= 12"
      }
    },
    "node_modules/mimic-fn": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz",
      "integrity": "sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/mimic-response": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-3.1.0.tgz",
      "integrity": "sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr4N/wv0DzQTjNzHNGQ==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/min-document": {
      "version": "2.19.0",
      "resolved": "https://registry.npmjs.org/min-document/-/min-document-2.19.0.tgz",
      "integrity": "sha512-9Wy1B3m3f66bPPmU5hdA4DR4PB2OfDU/+GS3yAB7IQozE3tqXaVv2zOjgla7MEGSRv95+ILmOuvhLkOK6wJtCQ==",
      "dependencies": {
        "dom-walk": "^0.1.0"
      }
    },
    "node_modules/min-indent": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/min-indent/-/min-indent-1.0.1.tgz",
      "integrity": "sha512-I9jwMn07Sy/IwOj3zVkVik2JTvgpaykDZEigL6Rx6N9LbMywwUSMtxET+7lVoDLLd3O3IXwJwvuuns8UB/HeAg==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/miniget": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/miniget/-/miniget-4.2.3.tgz",
      "integrity": "sha512-SjbDPDICJ1zT+ZvQwK0hUcRY4wxlhhNpHL9nJOB2MEAXRGagTljsO8MEDzQMTFf0Q8g4QNi8P9lEm/g7e+qgzA==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/minimist": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz",
      "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/minimist-options": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/minimist-options/-/minimist-options-4.1.0.tgz",
      "integrity": "sha512-Q4r8ghd80yhO/0j1O3B2BjweX3fiHg9cdOwjJd2J76Q135c+NDxGCqdYKQ1SKBuFfgWbAUzBfvYjPUEeNgqN1A==",
      "license": "MIT",
      "dependencies": {
        "arrify": "^1.0.1",
        "is-plain-obj": "^1.1.0",
        "kind-of": "^6.0.3"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/mitt": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/mitt/-/mitt-3.0.1.tgz",
      "integrity": "sha512-vKivATfr97l2/QBCYAkXYDbrIWPM2IIKEl7YPhjCvKlG3kE2gm+uBo6nEXK3M5/Ffh/FLpKExzOQ3JJoJGFKBw==",
      "license": "MIT"
    },
    "node_modules/mixin-object": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/mixin-object/-/mixin-object-2.0.1.tgz",
      "integrity": "sha512-ALGF1Jt9ouehcaXaHhn6t1yGWRqGaHkPFndtFVHfZXOvkIZ/yoGaSi0AHVTafb3ZBGg4dr/bDwnaEKqCXzchMA==",
      "license": "MIT",
      "dependencies": {
        "for-in": "^0.1.3",
        "is-extendable": "^0.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/mixin-object/node_modules/for-in": {
      "version": "0.1.8",
      "resolved": "https://registry.npmjs.org/for-in/-/for-in-0.1.8.tgz",
      "integrity": "sha512-F0to7vbBSHP8E3l6dCjxNOLuSFAACIxFy3UehTUlG7svlXi37HHsDkyVcHo0Pq8QwrE+pXvWSVX3ZT1T9wAZ9g==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/mkdirp": {
      "version": "0.5.6",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.6.tgz",
      "integrity": "sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==",
      "license": "MIT",
      "dependencies": {
        "minimist": "^1.2.6"
      },
      "bin": {
        "mkdirp": "bin/cmd.js"
      }
    },
    "node_modules/mkdirp-classic": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/mkdirp-classic/-/mkdirp-classic-0.5.3.tgz",
      "integrity": "sha512-gKLcREMhtuZRwRAfqP3RFW+TK4JqApVBtOIftVgjuABpAtpxhPGaDcfvbhNvD0B8iD1oUr/txX35NjcaY6Ns/A==",
      "license": "MIT"
    },
    "node_modules/moment": {
      "version": "2.30.1",
      "resolved": "https://registry.npmjs.org/moment/-/moment-2.30.1.tgz",
      "integrity": "sha512-uEmtNhbDOrWPFS+hdjFCBfy9f2YoyzRpwcl+DqpC6taX21FzsTLQVbMV/W7PzNSX6x/bhC1zA3c2UQ5NzH6how==",
      "license": "MIT",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/mongodb": {
      "version": "6.17.0",
      "resolved": "https://registry.npmjs.org/mongodb/-/mongodb-6.17.0.tgz",
      "integrity": "sha512-neerUzg/8U26cgruLysKEjJvoNSXhyID3RvzvdcpsIi2COYM3FS3o9nlH7fxFtefTb942dX3W9i37oPfCVj4wA==",
      "dependencies": {
        "@mongodb-js/saslprep": "^1.1.9",
        "bson": "^6.10.4",
        "mongodb-connection-string-url": "^3.0.0"
      },
      "engines": {
        "node": ">=16.20.1"
      },
      "peerDependencies": {
        "@aws-sdk/credential-providers": "^3.188.0",
        "@mongodb-js/zstd": "^1.1.0 || ^2.0.0",
        "gcp-metadata": "^5.2.0",
        "kerberos": "^2.0.1",
        "mongodb-client-encryption": ">=6.0.0 <7",
        "snappy": "^7.2.2",
        "socks": "^2.7.1"
      },
      "peerDependenciesMeta": {
        "@aws-sdk/credential-providers": {
          "optional": true
        },
        "@mongodb-js/zstd": {
          "optional": true
        },
        "gcp-metadata": {
          "optional": true
        },
        "kerberos": {
          "optional": true
        },
        "mongodb-client-encryption": {
          "optional": true
        },
        "snappy": {
          "optional": true
        },
        "socks": {
          "optional": true
        }
      }
    },
    "node_modules/mongodb-connection-string-url": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/mongodb-connection-string-url/-/mongodb-connection-string-url-3.0.2.tgz",
      "integrity": "sha512-rMO7CGo/9BFwyZABcKAWL8UJwH/Kc2x0g72uhDWzG48URRax5TCIcJ7Rc3RZqffZzO/Gwff/jyKwCU9TN8gehA==",
      "dependencies": {
        "@types/whatwg-url": "^11.0.2",
        "whatwg-url": "^14.1.0 || ^13.0.0"
      }
    },
    "node_modules/mongodb-connection-string-url/node_modules/tr46": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-5.1.1.tgz",
      "integrity": "sha512-hdF5ZgjTqgAntKkklYw0R03MG2x/bSzTtkxmIRw/sTNV8YXsCJ1tfLAX23lhxhHJlEf3CRCOCGGWw3vI3GaSPw==",
      "dependencies": {
        "punycode": "^2.3.1"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/mongodb-connection-string-url/node_modules/webidl-conversions": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-7.0.0.tgz",
      "integrity": "sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/mongodb-connection-string-url/node_modules/whatwg-url": {
      "version": "14.2.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-14.2.0.tgz",
      "integrity": "sha512-De72GdQZzNTUBBChsXueQUnPKDkg/5A5zp7pFDuQAj5UFoENpiACU0wlCvzpAGnTkj++ihpKwKyYewn/XNUbKw==",
      "dependencies": {
        "tr46": "^5.1.0",
        "webidl-conversions": "^7.0.0"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/mongoose": {
      "version": "8.16.4",
      "resolved": "https://registry.npmjs.org/mongoose/-/mongoose-8.16.4.tgz",
      "integrity": "sha512-jslgdQ8pY2vcNSKPv3Dbi5ogo/NT8zcvf6kPDyD8Sdsjsa1at3AFAF0F5PT+jySPGSPbvlNaQ49nT9h+Kx2UDA==",
      "dependencies": {
        "bson": "^6.10.4",
        "kareem": "2.6.3",
        "mongodb": "~6.17.0",
        "mpath": "0.9.0",
        "mquery": "5.0.0",
        "ms": "2.1.3",
        "sift": "17.1.3"
      },
      "engines": {
        "node": ">=16.20.1"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/mongoose"
      }
    },
    "node_modules/mpath": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/mpath/-/mpath-0.9.0.tgz",
      "integrity": "sha512-ikJRQTk8hw5DEoFVxHG1Gn9T/xcjtdnOKIU1JTmGjZZlg9LST2mBLmcX3/ICIbgJydT2GOc15RnNy5mHmzfSew==",
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/mquery": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/mquery/-/mquery-5.0.0.tgz",
      "integrity": "sha512-iQMncpmEK8R8ncT8HJGsGc9Dsp8xcgYMVSbs5jgnm1lFHTZqMJTUWTDx1LBO8+mK3tPNZWFLBghQEIOULSTHZg==",
      "dependencies": {
        "debug": "4.x"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "license": "MIT"
    },
    "node_modules/nan": {
      "version": "2.22.2",
      "resolved": "https://registry.npmjs.org/nan/-/nan-2.22.2.tgz",
      "integrity": "sha512-DANghxFkS1plDdRsX0X9pm0Z6SJNN6gBdtXfanwoZ8hooC5gosGFSBGRYHUVPz1asKA/kMRqDRdHrluZ61SpBQ==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/napi-build-utils": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/napi-build-utils/-/napi-build-utils-2.0.0.tgz",
      "integrity": "sha512-GEbrYkbfF7MoNaoh2iGG84Mnf/WZfB0GdGEsM8wz7Expx/LlWf5U8t9nvJKXSp3qr5IsEbK04cBGhol/KwOsWA==",
      "license": "MIT"
    },
    "node_modules/negotiator": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz",
      "integrity": "sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/neo-async": {
      "version": "2.6.2",
      "resolved": "https://registry.npmjs.org/neo-async/-/neo-async-2.6.2.tgz",
      "integrity": "sha512-Yd3UES5mWCSqR+qNT93S3UoYUkqAZ9lLg8a7g9rimsWmYGK8cVToA4/sF3RrshdyV3sAGMXVUmpMYOw+dLpOuw==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/netmask": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/netmask/-/netmask-2.0.2.tgz",
      "integrity": "sha512-dBpDMdxv9Irdq66304OLfEmQ9tbNRFnFTuZiLo+bD+r332bBmMJ8GBLXklIXXgxd3+v9+KUnZaUR5PJMa75Gsg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/nice-try": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/nice-try/-/nice-try-1.0.5.tgz",
      "integrity": "sha512-1nh45deeb5olNY7eX82BkPO7SSxR5SSYJiPTrTdFUVYwAl8CKMA5N9PjTYkHiRjisVcxcQ1HXdLhx2qxxJzLNQ==",
      "license": "MIT"
    },
    "node_modules/no-case": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/no-case/-/no-case-3.0.4.tgz",
      "integrity": "sha512-fgAN3jGAh+RoxUGZHTSOLJIqUc2wmoBwGR4tbpNAKmmovFoWq0OdRkb0VkldReO2a2iBT/OEulG9XSUc10r3zg==",
      "license": "MIT",
      "dependencies": {
        "lower-case": "^2.0.2",
        "tslib": "^2.0.3"
      }
    },
    "node_modules/no-case/node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/node-abi": {
      "version": "3.75.0",
      "resolved": "https://registry.npmjs.org/node-abi/-/node-abi-3.75.0.tgz",
      "integrity": "sha512-OhYaY5sDsIka7H7AtijtI9jwGYLyl29eQn/W623DiN/MIv5sUqc4g7BIDThX+gb7di9f6xK02nkp8sdfFWZLTg==",
      "license": "MIT",
      "dependencies": {
        "semver": "^7.3.5"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/node-addon-api": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-7.1.1.tgz",
      "integrity": "sha512-5m3bsyrjFWE1xf7nz7YXdN4udnVtXK6/Yfgn5qnahL6bCkf2yKt4k3nuTKAtT4r3IG8JNR2ncsIMdZuAzJjHQQ==",
      "license": "MIT"
    },
    "node_modules/node-fetch": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.7.0.tgz",
      "integrity": "sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==",
      "license": "MIT",
      "dependencies": {
        "whatwg-url": "^5.0.0"
      },
      "engines": {
        "node": "4.x || >=6.0.0"
      },
      "peerDependencies": {
        "encoding": "^0.1.0"
      },
      "peerDependenciesMeta": {
        "encoding": {
          "optional": true
        }
      }
    },
    "node_modules/node-persist": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/node-persist/-/node-persist-3.1.3.tgz",
      "integrity": "sha512-CaFv+kSZtsc+VeDRldK1yR47k1vPLBpzYB9re2z7LIwITxwBtljMq3s8VQnnr+x3E8pQfHbc5r2IyJsBLJhtXg==",
      "license": "MIT",
      "engines": {
        "node": ">=10.12.0"
      }
    },
    "node_modules/node-releases": {
      "version": "2.0.19",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz",
      "integrity": "sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/node-webpmux": {
      "version": "3.1.7",
      "resolved": "https://registry.npmjs.org/node-webpmux/-/node-webpmux-3.1.7.tgz",
      "integrity": "sha512-ySkL4lBCto86OyQ0blAGzylWSECcn5I0lM3bYEhe75T8Zxt/BFUMHa8ktUguR7zwXNdS/Hms31VfSsYKN1383g==",
      "license": "ISC"
    },
    "node_modules/normalize-package-data": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-3.0.3.tgz",
      "integrity": "sha512-p2W1sgqij3zMMyRC067Dg16bfzVH+w7hyegmpIvZ4JNjqtGOVAIvLmjBx3yP7YTe9vKJgkoNOPjwQGogDoMXFA==",
      "license": "BSD-2-Clause",
      "dependencies": {
        "hosted-git-info": "^4.0.1",
        "is-core-module": "^2.5.0",
        "semver": "^7.3.4",
        "validate-npm-package-license": "^3.0.1"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/normalize-url": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-6.1.0.tgz",
      "integrity": "sha512-DlL+XwOy3NxAQ8xuC0okPgK46iuVNAK01YN7RueYBqqFeGsBjV9XmCAzAdgt+667bCl5kPh9EqKKDwnaPG1I7A==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/npm-run-path": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz",
      "integrity": "sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==",
      "license": "MIT",
      "dependencies": {
        "path-key": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/number-is-nan": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz",
      "integrity": "sha512-4jbtZXNAsfZbAHiiqjLPBiCl16dES1zI4Hpzzxw61Tk+loF+sBDBKx1ICKKKwIqQ7M0mFn1TmkN7euSncWgHiQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-hash": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-2.2.0.tgz",
      "integrity": "sha512-gScRMn0bS5fH+IuwyIFgnh9zBdo4DV+6GhygmWM9HyNJSgS0hScp1f5vjtm7oIIOiT9trXrShAkLFSc2IqKNgw==",
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/object-inspect": {
      "version": "1.13.4",
      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz",
      "integrity": "sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object-keys": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/object.assign": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.7.tgz",
      "integrity": "sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0",
        "has-symbols": "^1.1.0",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/omggif": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/omggif/-/omggif-1.0.10.tgz",
      "integrity": "sha512-LMJTtvgc/nugXj0Vcrrs68Mn2D1r0zf630VNtqtpI1FEO7e+O9FP4gqs9AcnBaSEeoHIPm28u6qgPR0oyEpGSw=="
    },
    "node_modules/on-finished": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
      "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
      "license": "MIT",
      "dependencies": {
        "ee-first": "1.1.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "license": "ISC",
      "dependencies": {
        "wrappy": "1"
      }
    },
    "node_modules/one-time": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/one-time/-/one-time-1.0.0.tgz",
      "integrity": "sha512-5DXOiRKwuSEcQ/l0kGCF6Q3jcADFv5tSmRaJck/OqkVFcOzutB134KRSfF0xDrL39MNnqxbHBbUUcjZIhTgb2g==",
      "license": "MIT",
      "dependencies": {
        "fn.name": "1.x.x"
      }
    },
    "node_modules/onetime": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz",
      "integrity": "sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==",
      "license": "MIT",
      "dependencies": {
        "mimic-fn": "^2.1.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/open": {
      "version": "8.4.2",
      "resolved": "https://registry.npmjs.org/open/-/open-8.4.2.tgz",
      "integrity": "sha512-7x81NCL719oNbsq/3mh+hVrAWmFuEYUqrq/Iw3kUzH8ReypT9QQ0BLoJS7/G9k6N81XjW4qHWtjWwe/9eLy1EQ==",
      "license": "MIT",
      "dependencies": {
        "define-lazy-prop": "^2.0.0",
        "is-docker": "^2.1.1",
        "is-wsl": "^2.2.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/openurl": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/openurl/-/openurl-1.1.1.tgz",
      "integrity": "sha512-d/gTkTb1i1GKz5k3XE3XFV/PxQ1k45zDqGP2OA7YhgsaLoqm6qRvARAZOFer1fcXritWlGBRCu/UgeS4HAnXAA==",
      "license": "MIT"
    },
    "node_modules/os-name": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/os-name/-/os-name-4.0.1.tgz",
      "integrity": "sha512-xl9MAoU97MH1Xt5K9ERft2YfCAoaO6msy1OBA0ozxEC0x0TmIoE6K3QvgJMMZA9yKGLmHXNY/YZoDbiGDj4zYw==",
      "license": "MIT",
      "dependencies": {
        "macos-release": "^2.5.0",
        "windows-release": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/os-tmpdir": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz",
      "integrity": "sha512-D2FR03Vir7FIu45XBY20mTb+/ZSWB00sjU9jdQXt83gDrI4Ztz5Fs7/yy74g2N5SVQY4xY1qDr4rNddwYRVX0g==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/ow": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/ow/-/ow-0.4.0.tgz",
      "integrity": "sha512-kJNzxUgVd6EF5LoGs+s2/etJPwjfRDLXPTCfEgV8At77sRrV+PSFA8lcoW2HF15Qd455mIR2Stee/2MzDiFBDA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/own-keys": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/own-keys/-/own-keys-1.0.1.tgz",
      "integrity": "sha512-qFOyK5PjiWZd+QQIh+1jhdb9LpxTF0qs7Pm8o5QHYZ0M3vKqSqzsZaEB6oWlxZ+q2sJBMI/Ktgd2N5ZwQoRHfg==",
      "license": "MIT",
      "dependencies": {
        "get-intrinsic": "^1.2.6",
        "object-keys": "^1.1.1",
        "safe-push-apply": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/p-cancelable": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-0.4.1.tgz",
      "integrity": "sha512-HNa1A8LvB1kie7cERyy21VNeHb2CWJJYqyyC2o3klWFfMGlFmWv2Z7sFgZH8ZiaYL95ydToKTFVXgMV/Os0bBQ==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/p-finally": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/p-finally/-/p-finally-1.0.0.tgz",
      "integrity": "sha512-LICb2p9CB7FS+0eR1oqWnHhp0FljGLZCWBE9aix0Uye9W8LTQPwMTYVGWQWIw9RdQiDg4+epXQODwIYJtSJaow==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/p-is-promise": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/p-is-promise/-/p-is-promise-1.1.0.tgz",
      "integrity": "sha512-zL7VE4JVS2IFSkR2GQKDSPEVxkoH43/p7oEnwpdCndKYJO0HVeRB7fA8TJwuLOTBREtK0ea8eHaxdwcpob5dmg==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/p-limit": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
      "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
      "license": "MIT",
      "dependencies": {
        "yocto-queue": "^0.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-locate": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
      "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
      "license": "MIT",
      "dependencies": {
        "p-limit": "^3.0.2"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-queue": {
      "version": "6.6.2",
      "resolved": "https://registry.npmjs.org/p-queue/-/p-queue-6.6.2.tgz",
      "integrity": "sha512-RwFpb72c/BhQLEXIZ5K2e+AhgNVmIejGlTgiB9MzZ0e93GRvqZ7uSi0dvRF7/XIXDeNkra2fNHBxTyPDGySpjQ==",
      "license": "MIT",
      "dependencies": {
        "eventemitter3": "^4.0.4",
        "p-timeout": "^3.2.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-timeout": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/p-timeout/-/p-timeout-3.2.0.tgz",
      "integrity": "sha512-rhIwUycgwwKcP9yTOOFK/AKsAopjjCakVqLHePO3CC6Mir1Z99xT+R63jZxAT5lFZLa2inS5h+ZS2GvR99/FBg==",
      "license": "MIT",
      "dependencies": {
        "p-finally": "^1.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/p-try": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
      "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/pac-proxy-agent": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/pac-proxy-agent/-/pac-proxy-agent-7.2.0.tgz",
      "integrity": "sha512-TEB8ESquiLMc0lV8vcd5Ql/JAKAoyzHFXaStwjkzpOpC5Yv+pIzLfHvjTSdf3vpa2bMiUQrg9i6276yn8666aA==",
      "license": "MIT",
      "dependencies": {
        "@tootallnate/quickjs-emscripten": "^0.23.0",
        "agent-base": "^7.1.2",
        "debug": "^4.3.4",
        "get-uri": "^6.0.1",
        "http-proxy-agent": "^7.0.0",
        "https-proxy-agent": "^7.0.6",
        "pac-resolver": "^7.0.1",
        "socks-proxy-agent": "^8.0.5"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/pac-resolver": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/pac-resolver/-/pac-resolver-7.0.1.tgz",
      "integrity": "sha512-5NPgf87AT2STgwa2ntRMr45jTKrYBGkVU36yT0ig/n/GMAa3oPqhZfIQ2kMEimReg0+t9kZViDVZ83qfVUlckg==",
      "license": "MIT",
      "dependencies": {
        "degenerator": "^5.0.0",
        "netmask": "^2.0.2"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/package-json": {
      "version": "6.5.0",
      "resolved": "https://registry.npmjs.org/package-json/-/package-json-6.5.0.tgz",
      "integrity": "sha512-k3bdm2n25tkyxcjSKzB5x8kfVxlMdgsbPr0GkZcwHsLpba6cBjqCt1KlcChKEvxHIcTB1FVMuwoijZ26xex5MQ==",
      "license": "MIT",
      "dependencies": {
        "got": "^9.6.0",
        "registry-auth-token": "^4.0.0",
        "registry-url": "^5.0.0",
        "semver": "^6.2.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/package-json/node_modules/@sindresorhus/is": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@sindresorhus/is/-/is-0.14.0.tgz",
      "integrity": "sha512-9NET910DNaIPngYnLLPeg+Ogzqsi9uM4mSboU5y6p8S5DzMTVEsJZrawi+BoDNUVBa2DhJqQYUFvMDfgU062LQ==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/package-json/node_modules/cacheable-request": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/cacheable-request/-/cacheable-request-6.1.0.tgz",
      "integrity": "sha512-Oj3cAGPCqOZX7Rz64Uny2GYAZNliQSqfbePrgAQ1wKAihYmCUnraBtJtKcGR4xz7wF+LoJC+ssFZvv5BgF9Igg==",
      "license": "MIT",
      "dependencies": {
        "clone-response": "^1.0.2",
        "get-stream": "^5.1.0",
        "http-cache-semantics": "^4.0.0",
        "keyv": "^3.0.0",
        "lowercase-keys": "^2.0.0",
        "normalize-url": "^4.1.0",
        "responselike": "^1.0.2"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/package-json/node_modules/cacheable-request/node_modules/lowercase-keys": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
      "integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/package-json/node_modules/decompress-response": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-3.3.0.tgz",
      "integrity": "sha512-BzRPQuY1ip+qDonAOz42gRm/pg9F768C+npV/4JOsxRC2sq+Rlk+Q4ZCAsOhnIaMrgarILY+RMUIvMmmX1qAEA==",
      "license": "MIT",
      "dependencies": {
        "mimic-response": "^1.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/package-json/node_modules/got": {
      "version": "9.6.0",
      "resolved": "https://registry.npmjs.org/got/-/got-9.6.0.tgz",
      "integrity": "sha512-R7eWptXuGYxwijs0eV+v3o6+XH1IqVK8dJOEecQfTmkncw9AV4dcw/Dhxi8MdlqPthxxpZyizMzyg8RTmEsG+Q==",
      "license": "MIT",
      "dependencies": {
        "@sindresorhus/is": "^0.14.0",
        "@szmarczak/http-timer": "^1.1.2",
        "cacheable-request": "^6.0.0",
        "decompress-response": "^3.3.0",
        "duplexer3": "^0.1.4",
        "get-stream": "^4.1.0",
        "lowercase-keys": "^1.0.1",
        "mimic-response": "^1.0.1",
        "p-cancelable": "^1.0.0",
        "to-readable-stream": "^1.0.0",
        "url-parse-lax": "^3.0.0"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/package-json/node_modules/got/node_modules/get-stream": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-4.1.0.tgz",
      "integrity": "sha512-GMat4EJ5161kIy2HevLlr4luNjBgvmj413KaQA7jt4V8B4RDsfpHk7WQ9GVqfYyyx8OS/L66Kox+rJRNklLK7w==",
      "license": "MIT",
      "dependencies": {
        "pump": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/package-json/node_modules/http-cache-semantics": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.2.0.tgz",
      "integrity": "sha512-dTxcvPXqPvXBQpq5dUr6mEMJX4oIEFv6bwom3FDwKRDsuIjjJGANqhBuoAn9c1RQJIdAKav33ED65E2ys+87QQ==",
      "license": "BSD-2-Clause"
    },
    "node_modules/package-json/node_modules/mimic-response": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
      "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/package-json/node_modules/normalize-url": {
      "version": "4.5.1",
      "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-4.5.1.tgz",
      "integrity": "sha512-9UZCFRHQdNrfTpGg8+1INIg93B6zE0aXMVFkw1WFwvO4SlZywU6aLg5Of0Ap/PgcbSw4LNxvMWXMeugwMCX0AA==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/package-json/node_modules/p-cancelable": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-1.1.0.tgz",
      "integrity": "sha512-s73XxOZ4zpt1edZYZzvhqFa6uvQc1vwUa0K0BdtIZgQMAJj9IbebH+JkgKZc9h+B05PKHLOTl4ajG1BmNrVZlw==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/package-json/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/pako": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/pako/-/pako-1.0.11.tgz",
      "integrity": "sha512-4hLB8Py4zZce5s4yd9XzopqwVv/yGNhV1Bl8NTmCq1763HeK2+EwVTv+leGeL13Dnh2wfbqowVPXCIO0z4taYw=="
    },
    "node_modules/param-case": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/param-case/-/param-case-3.0.4.tgz",
      "integrity": "sha512-RXlj7zCYokReqWpOPH9oYivUzLYZ5vAPIfEmCTNViosC78F8F0H9y7T7gG2M39ymgutxF5gcFEsyZQSph9Bp3A==",
      "license": "MIT",
      "dependencies": {
        "dot-case": "^3.0.4",
        "tslib": "^2.0.3"
      }
    },
    "node_modules/param-case/node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "license": "MIT",
      "dependencies": {
        "callsites": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/parse-bmfont-ascii": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/parse-bmfont-ascii/-/parse-bmfont-ascii-1.0.6.tgz",
      "integrity": "sha512-U4RrVsUFCleIOBsIGYOMKjn9PavsGOXxbvYGtMOEfnId0SVNsgehXh1DxUdVPLoxd5mvcEtvmKs2Mmf0Mpa1ZA=="
    },
    "node_modules/parse-bmfont-binary": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/parse-bmfont-binary/-/parse-bmfont-binary-1.0.6.tgz",
      "integrity": "sha512-GxmsRea0wdGdYthjuUeWTMWPqm2+FAd4GI8vCvhgJsFnoGhTrLhXDDupwTo7rXVAgaLIGoVHDZS9p/5XbSqeWA=="
    },
    "node_modules/parse-bmfont-xml": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/parse-bmfont-xml/-/parse-bmfont-xml-1.1.6.tgz",
      "integrity": "sha512-0cEliVMZEhrFDwMh4SxIyVJpqYoOWDJ9P895tFuS+XuNzI5UBmBk5U5O4KuJdTnZpSBI4LFA2+ZiJaiwfSwlMA==",
      "dependencies": {
        "xml-parse-from-string": "^1.0.0",
        "xml2js": "^0.5.0"
      }
    },
    "node_modules/parse-function": {
      "version": "5.6.10",
      "resolved": "https://registry.npmjs.org/parse-function/-/parse-function-5.6.10.tgz",
      "integrity": "sha512-mrMwHEIn8mCgTTZxCVtXbcv8+Suf13z+81004BupjoAfZfIuwEzOYy9NNS3xKYXRRVR7Ej1sjvgjjcqQmYGK4A==",
      "funding": [
        "https://ko-fi.com/tunnckoCore/commissions",
        "https://github.com/sponsors/tunnckoCore",
        "https://patreon.com/tunnckoCore",
        "https://tidelift.com/funding/github/npm/parse-function"
      ],
      "license": "MPL-2.0",
      "dependencies": {
        "@babel/parser": "^7.8.3",
        "arrify": "^2.0.1"
      },
      "engines": {
        "node": ">=8.11"
      }
    },
    "node_modules/parse-function/node_modules/arrify": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/arrify/-/arrify-2.0.1.tgz",
      "integrity": "sha512-3duEwti880xqi4eAMN8AyR4a0ByT90zoYdLlevfrvU43vb0YZwZVfxOgxWrLXXXpyugL0hNZc9G6BiB5B3nUug==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/parse-headers": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/parse-headers/-/parse-headers-2.0.6.tgz",
      "integrity": "sha512-Tz11t3uKztEW5FEVZnj1ox8GKblWn+PvHY9TmJV5Mll2uHEwRdR/5Li1OlXoECjLYkApdhWy44ocONwXLiKO5A=="
    },
    "node_modules/parse-json": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz",
      "integrity": "sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==",
      "license": "MIT",
      "dependencies": {
        "@babel/code-frame": "^7.0.0",
        "error-ex": "^1.3.1",
        "json-parse-even-better-errors": "^2.3.0",
        "lines-and-columns": "^1.1.6"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/parse-path": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/parse-path/-/parse-path-4.0.4.tgz",
      "integrity": "sha512-Z2lWUis7jlmXC1jeOG9giRO2+FsuyNipeQ43HAjqAZjwSe3SEf+q/84FGPHoso3kyntbxa4c4i77t3m6fGf8cw==",
      "license": "MIT",
      "dependencies": {
        "is-ssh": "^1.3.0",
        "protocols": "^1.4.0",
        "qs": "^6.9.4",
        "query-string": "^6.13.8"
      }
    },
    "node_modules/parse-url": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/parse-url/-/parse-url-5.0.8.tgz",
      "integrity": "sha512-KFg5QvyiOKJGQSwUT7c5A4ELs0TJ33gmx/NBjK0FvZUD6aonFuXHUVa3SIa2XpbYVkYU8VlDrD3oCbX1ufy0zg==",
      "license": "MIT",
      "dependencies": {
        "is-ssh": "^1.3.0",
        "normalize-url": "^6.1.0",
        "parse-path": "^4.0.4",
        "protocols": "^1.4.0"
      }
    },
    "node_modules/parseurl": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/pascal-case": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/pascal-case/-/pascal-case-3.1.2.tgz",
      "integrity": "sha512-uWlGT3YSnK9x3BQJaOdcZwrnV6hPpd8jFH1/ucpiLRPh/2zCVJKS19E4GvYHvaCcACn3foXZ0cLB9Wrx1KGe5g==",
      "license": "MIT",
      "dependencies": {
        "no-case": "^3.0.4",
        "tslib": "^2.0.3"
      }
    },
    "node_modules/pascal-case/node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/patch-package": {
      "version": "6.5.1",
      "resolved": "https://registry.npmjs.org/patch-package/-/patch-package-6.5.1.tgz",
      "integrity": "sha512-I/4Zsalfhc6bphmJTlrLoOcAF87jcxko4q0qsv4bGcurbr8IskEOtdnt9iCmsQVGL1B+iUhSQqweyTLJfCF9rA==",
      "license": "MIT",
      "dependencies": {
        "@yarnpkg/lockfile": "^1.1.0",
        "chalk": "^4.1.2",
        "cross-spawn": "^6.0.5",
        "find-yarn-workspace-root": "^2.0.0",
        "fs-extra": "^9.0.0",
        "is-ci": "^2.0.0",
        "klaw-sync": "^6.0.0",
        "minimist": "^1.2.6",
        "open": "^7.4.2",
        "rimraf": "^2.6.3",
        "semver": "^5.6.0",
        "slash": "^2.0.0",
        "tmp": "^0.0.33",
        "yaml": "^1.10.2"
      },
      "bin": {
        "patch-package": "index.js"
      },
      "engines": {
        "node": ">=10",
        "npm": ">5"
      }
    },
    "node_modules/patch-package/node_modules/cross-spawn": {
      "version": "6.0.6",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-6.0.6.tgz",
      "integrity": "sha512-VqCUuhcd1iB+dsv8gxPttb5iZh/D0iubSP21g36KXdEuf6I5JiioesUVjpCdHV9MZRUfVFlvwtIUyPfxo5trtw==",
      "license": "MIT",
      "dependencies": {
        "nice-try": "^1.0.4",
        "path-key": "^2.0.1",
        "semver": "^5.5.0",
        "shebang-command": "^1.2.0",
        "which": "^1.2.9"
      },
      "engines": {
        "node": ">=4.8"
      }
    },
    "node_modules/patch-package/node_modules/fs-extra": {
      "version": "9.1.0",
      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz",
      "integrity": "sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==",
      "license": "MIT",
      "dependencies": {
        "at-least-node": "^1.0.0",
        "graceful-fs": "^4.2.0",
        "jsonfile": "^6.0.1",
        "universalify": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/patch-package/node_modules/open": {
      "version": "7.4.2",
      "resolved": "https://registry.npmjs.org/open/-/open-7.4.2.tgz",
      "integrity": "sha512-MVHddDVweXZF3awtlAS+6pgKLlm/JgxZ90+/NBurBoQctVOOB/zDdVjcyPzQ+0laDGbsWgrRkflI65sQeOgT9Q==",
      "license": "MIT",
      "dependencies": {
        "is-docker": "^2.0.0",
        "is-wsl": "^2.1.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/patch-package/node_modules/path-key": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-2.0.1.tgz",
      "integrity": "sha512-fEHGKCSmUSDPv4uoj8AlD+joPlq3peND+HRYyxFz4KPw4z926S/b8rIuFs2FYJg3BwsxJf6A9/3eIdLaYC+9Dw==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/patch-package/node_modules/rimraf": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
      "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
      "deprecated": "Rimraf versions prior to v4 are no longer supported",
      "license": "ISC",
      "dependencies": {
        "glob": "^7.1.3"
      },
      "bin": {
        "rimraf": "bin.js"
      }
    },
    "node_modules/patch-package/node_modules/semver": {
      "version": "5.7.2",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.2.tgz",
      "integrity": "sha512-cBznnQ9KjJqU67B52RMC65CMarK2600WFnbkcaiwWq3xy/5haFJlshgnpjovMVJ+Hff49d8GEn0b87C5pDQ10g==",
      "license": "ISC",
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/patch-package/node_modules/shebang-command": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-1.2.0.tgz",
      "integrity": "sha512-EV3L1+UQWGor21OmnvojK36mhg+TyIKDh3iFBKBohr5xeXIhNBcx8oWdgkTEEQ+BEFFYdLRuqMfd5L84N1V5Vg==",
      "license": "MIT",
      "dependencies": {
        "shebang-regex": "^1.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/patch-package/node_modules/shebang-regex": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-1.0.0.tgz",
      "integrity": "sha512-wpoSFAxys6b2a2wHZ1XpDSgD7N9iVjg29Ph9uV/uaP9Ex/KXlkTZTeddxDPSYQpgvzKLGJke2UU0AzoGCjNIvQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/path-browserify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-browserify/-/path-browserify-1.0.1.tgz",
      "integrity": "sha512-b7uo2UCUOYZcnF/3ID0lulOJi/bafxa1xPe7ZPsammBSpjSWQkjNxlt635YGS2MiR9GjvuXCtz2emr3jbsz98g==",
      "license": "MIT"
    },
    "node_modules/path-case": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/path-case/-/path-case-3.0.4.tgz",
      "integrity": "sha512-qO4qCFjXqVTrcbPt/hQfhTQ+VhFsqNKOPtytgNKkKxSoEp3XPUQ8ObFuePylOIok5gjn69ry8XiULxCwot3Wfg==",
      "license": "MIT",
      "dependencies": {
        "dot-case": "^3.0.4",
        "tslib": "^2.0.3"
      }
    },
    "node_modules/path-case/node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/path-exists": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
      "license": "MIT"
    },
    "node_modules/path-to-regexp": {
      "version": "0.1.12",
      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.12.tgz",
      "integrity": "sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==",
      "license": "MIT"
    },
    "node_modules/pause-stream": {
      "version": "0.0.11",
      "resolved": "https://registry.npmjs.org/pause-stream/-/pause-stream-0.0.11.tgz",
      "integrity": "sha512-e3FBlXLmN/D1S+zHzanP4E/4Z60oFAa3O051qt1pxa7DEJWKAyil6upYVXCWadEnuoqa4Pkc9oUx9zsxYeRv8A==",
      "license": [
        "MIT",
        "Apache2"
      ],
      "dependencies": {
        "through": "~2.3"
      }
    },
    "node_modules/peek-readable": {
      "version": "5.4.2",
      "resolved": "https://registry.npmjs.org/peek-readable/-/peek-readable-5.4.2.tgz",
      "integrity": "sha512-peBp3qZyuS6cNIJ2akRNG1uo1WJ1d0wTxg/fxMdZ0BqCVhx242bSFHM9eNqflfJVS9SsgkzgT/1UgnsurBOTMg==",
      "license": "MIT",
      "engines": {
        "node": ">=14.16"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/Borewit"
      }
    },
    "node_modules/pend": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/pend/-/pend-1.2.0.tgz",
      "integrity": "sha512-F3asv42UuXchdzt+xXqfW1OGlVBe+mxa2mqI0pg5yAHZPvFmY3Y6drSf/GQ1A86WgWEN9Kzh/WrgKa6iGcHXLg==",
      "license": "MIT"
    },
    "node_modules/phin": {
      "version": "2.9.3",
      "resolved": "https://registry.npmjs.org/phin/-/phin-2.9.3.tgz",
      "integrity": "sha512-CzFr90qM24ju5f88quFC/6qohjC144rehe5n6DH900lgXmUe86+xCKc10ev56gRKC4/BkHUoG4uSiQgBiIXwDA==",
      "deprecated": "Package no longer supported. Contact Support at https://www.npmjs.com/support for more info."
    },
    "node_modules/pico-s3": {
      "version": "2.6.0",
      "resolved": "https://registry.npmjs.org/pico-s3/-/pico-s3-2.6.0.tgz",
      "integrity": "sha512-rwMHKdobfkTHu5YxpaDWyj/YjkyEbbUW5iwwvIZNSrFJOAlAh4aCkLCDg0Ri/+eu/pKTAmrQnRNroSIDuFaTyA==",
      "license": "MIT",
      "dependencies": {
        "@brillout/import": "^0.2.3",
        "aws4": "^1.12.0",
        "axios": "^1.6.8",
        "datauri": "^4.1.0",
        "debug": "^4.3.4",
        "file-type": "^19.0.0"
      }
    },
    "node_modules/pico-s3/node_modules/file-type": {
      "version": "19.6.0",
      "resolved": "https://registry.npmjs.org/file-type/-/file-type-19.6.0.tgz",
      "integrity": "sha512-VZR5I7k5wkD0HgFnMsq5hOsSc710MJMu5Nc5QYsbe38NN5iPV/XTObYLc/cpttRTf6lX538+5uO1ZQRhYibiZQ==",
      "license": "MIT",
      "dependencies": {
        "get-stream": "^9.0.1",
        "strtok3": "^9.0.1",
        "token-types": "^6.0.0",
        "uint8array-extras": "^1.3.0"
      },
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/file-type?sponsor=1"
      }
    },
    "node_modules/pico-s3/node_modules/get-stream": {
      "version": "9.0.1",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-9.0.1.tgz",
      "integrity": "sha512-kVCxPF3vQM/N0B1PmoqVUqgHP+EeVjmZSQn+1oCRPxd2P21P2F19lIgbR3HBosbB1PUhOAoctJnfEn2GbN2eZA==",
      "license": "MIT",
      "dependencies": {
        "@sec-ant/readable-stream": "^0.4.1",
        "is-stream": "^4.0.1"
      },
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/pico-s3/node_modules/is-stream": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-4.0.1.tgz",
      "integrity": "sha512-Dnz92NInDqYckGEUJv689RbRiTSEHCQ7wOVeALbkOz999YpqT46yMRIGtSNl2iCL1waAZSx40+h59NV/EwzV/A==",
      "license": "MIT",
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/pico-s3/node_modules/strtok3": {
      "version": "9.1.1",
      "resolved": "https://registry.npmjs.org/strtok3/-/strtok3-9.1.1.tgz",
      "integrity": "sha512-FhwotcEqjr241ZbjFzjlIYg6c5/L/s4yBGWSMvJ9UoExiSqL+FnFA/CaeZx17WGaZMS/4SOZp8wH18jSS4R4lw==",
      "license": "MIT",
      "dependencies": {
        "@tokenizer/token": "^0.3.0",
        "peek-readable": "^5.3.1"
      },
      "engines": {
        "node": ">=16"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/Borewit"
      }
    },
    "node_modules/pico-s3/node_modules/token-types": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/token-types/-/token-types-6.0.3.tgz",
      "integrity": "sha512-IKJ6EzuPPWtKtEIEPpIdXv9j5j2LGJEYk0CKY2efgKoYKLBiZdh6iQkLVBow/CB3phyWAWCyk+bZeaimJn6uRQ==",
      "license": "MIT",
      "dependencies": {
        "@tokenizer/token": "^0.3.0",
        "ieee754": "^1.2.1"
      },
      "engines": {
        "node": ">=14.16"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/Borewit"
      }
    },
    "node_modules/picocolors": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
      "license": "ISC"
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "license": "MIT",
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/pidtree": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/pidtree/-/pidtree-0.6.0.tgz",
      "integrity": "sha512-eG2dWTVw5bzqGRztnHExczNxt5VGsE6OwTeCG3fdUf9KBsZzO3R5OIIIzWR+iZA0NtZ+RDVdaoE2dK1cn6jH4g==",
      "license": "MIT",
      "bin": {
        "pidtree": "bin/pidtree.js"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/pidusage": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/pidusage/-/pidusage-3.0.2.tgz",
      "integrity": "sha512-g0VU+y08pKw5M8EZ2rIGiEBaB8wrQMjYGFfW2QVIfyT8V+fq8YFLkvlz4bz5ljvFDJYNFCWT3PWqcRr2FKO81w==",
      "license": "MIT",
      "dependencies": {
        "safe-buffer": "^5.2.1"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/pify": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
      "integrity": "sha512-C3FsVNH1udSEX48gGX1xfvwTWfsYWj5U+8/uK15BGzIGrKoUpghX8hWZwa/OFnakBiiVNmBvemTJR5mcy7iPcg==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/pixelmatch": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/pixelmatch/-/pixelmatch-4.0.2.tgz",
      "integrity": "sha512-J8B6xqiO37sU/gkcMglv6h5Jbd9xNER7aHzpfRdNmV4IbQBzBpe4l9XmbG+xPF/znacgu2jfEw+wHffaq/YkXA==",
      "dependencies": {
        "pngjs": "^3.0.0"
      },
      "bin": {
        "pixelmatch": "bin/pixelmatch"
      }
    },
    "node_modules/play-audio": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/play-audio/-/play-audio-0.5.2.tgz",
      "integrity": "sha512-ZAqHUKkQLix2Iga7pPbsf1LpUoBjcpwU93F1l3qBIfxYddQLhxS6GKmS0d3jV8kSVaUbr6NnOEcEMFvuX93SWQ==",
      "license": "GPL-3.0"
    },
    "node_modules/play-dl": {
      "version": "1.9.7",
      "resolved": "https://registry.npmjs.org/play-dl/-/play-dl-1.9.7.tgz",
      "integrity": "sha512-KpgerWxUCY4s9Mhze2qdqPhiqd8Ve6HufpH9mBH3FN+vux55qSh6WJKDabfie8IBHN7lnrAlYcT/UdGax58c2A==",
      "license": "GPL-3.0",
      "dependencies": {
        "play-audio": "^0.5.2"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/pngjs": {
      "version": "3.4.0",
      "resolved": "https://registry.npmjs.org/pngjs/-/pngjs-3.4.0.tgz",
      "integrity": "sha512-NCrCHhWmnQklfH4MtJMRjZ2a8c80qXeMlQMv2uVp9ISJMTt562SbGd6n2oq0PaPgKm7Z6pL9E2UlLIhC+SHL3w==",
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/poker-evaluator": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/poker-evaluator/-/poker-evaluator-2.1.0.tgz",
      "integrity": "sha512-ypzbdIDv+llY2WKeqn3ZB9mLaQ4cqiSjLgzUC1RtvC07oVoTFdbHd9B4cqhJ2Q72v1GzBSJQEgWyivr7Jy7n4A==",
      "license": "ISC",
      "dependencies": {
        "@types/node": "^13.1.6",
        "tslib": "^1.10.0",
        "typescript": "^3.7.4"
      },
      "engines": {
        "node": ">= 0.6.0"
      }
    },
    "node_modules/poker-evaluator/node_modules/@types/node": {
      "version": "13.13.52",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-13.13.52.tgz",
      "integrity": "sha512-s3nugnZumCC//n4moGGe6tkNMyYEdaDBitVjwPxXmR5lnMG5dHePinH2EdxkG3Rh1ghFHHixAG4NJhpJW1rthQ==",
      "license": "MIT"
    },
    "node_modules/possible-typed-array-names": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.1.0.tgz",
      "integrity": "sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/postcss": {
      "version": "7.0.39",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-7.0.39.tgz",
      "integrity": "sha512-yioayjNbHn6z1/Bywyb2Y4s3yvDAeXGOyxqD+LnVOinq6Mdmd++SW2wUNVzavyyHxd6+DxzWGIuosg6P1Rj8uA==",
      "license": "MIT",
      "dependencies": {
        "picocolors": "^0.2.1",
        "source-map": "^0.6.1"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/postcss/"
      }
    },
    "node_modules/postcss/node_modules/picocolors": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-0.2.1.tgz",
      "integrity": "sha512-cMlDqaLEqfSaW8Z7N5Jw+lyIW869EzT73/F5lhtY9cLGoVxSXznfgfXMO0Z5K0o0Q2TkTXq+0KFsdnSe3jDViA==",
      "license": "ISC"
    },
    "node_modules/postman-2-swagger": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/postman-2-swagger/-/postman-2-swagger-0.5.0.tgz",
      "integrity": "sha512-raRuEilqUkCOP9w0wht+5k2CXaqiHSvlsBl/lNfXGaC5Xut53bZ9Tqs8rMPKnINPstapU//x+wgxZ6q/QzlGrg==",
      "license": "ISC",
      "dependencies": {
        "postman-collection": "^3.4.5"
      },
      "peerDependencies": {
        "lodash": "^4.17.11"
      }
    },
    "node_modules/postman-collection": {
      "version": "3.6.11",
      "resolved": "https://registry.npmjs.org/postman-collection/-/postman-collection-3.6.11.tgz",
      "integrity": "sha512-22oIsOXwigdEGQJuTgS44964hj0/gN20E6/aiDoO469WiqqOk5JEEVQpW8zCDjsb9vynyk384JqE9zRyvfrH5A==",
      "license": "Apache-2.0",
      "dependencies": {
        "escape-html": "1.0.3",
        "faker": "5.5.3",
        "file-type": "3.9.0",
        "http-reasons": "0.1.0",
        "iconv-lite": "0.6.2",
        "liquid-json": "0.3.1",
        "lodash": "4.17.21",
        "marked": "2.0.1",
        "mime-format": "2.0.1",
        "mime-types": "2.1.30",
        "postman-url-encoder": "3.0.1",
        "sanitize-html": "1.20.1",
        "semver": "7.3.5",
        "uuid": "3.4.0"
      }
    },
    "node_modules/postman-collection/node_modules/file-type": {
      "version": "3.9.0",
      "resolved": "https://registry.npmjs.org/file-type/-/file-type-3.9.0.tgz",
      "integrity": "sha512-RLoqTXE8/vPmMuTI88DAzhMYC99I8BWv7zYP4A1puo5HIjEJ5EX48ighy4ZyKMG9EDXxBgW6e++cn7d1xuFghA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/postman-collection/node_modules/iconv-lite": {
      "version": "0.6.2",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.2.tgz",
      "integrity": "sha512-2y91h5OpQlolefMPmUlivelittSWy0rP+oYVpn6A7GwVHNE8AWzoYOBNmlwks3LobaJxgHCYZAnyNo2GgpNRNQ==",
      "license": "MIT",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/postman-collection/node_modules/mime-db": {
      "version": "1.47.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.47.0.tgz",
      "integrity": "sha512-QBmA/G2y+IfeS4oktet3qRZ+P5kPhCKRXxXnQEudYqUaEioAU1/Lq2us3D/t1Jfo4hE9REQPrbB7K5sOczJVIw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/postman-collection/node_modules/mime-types": {
      "version": "2.1.30",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.30.tgz",
      "integrity": "sha512-crmjA4bLtR8m9qLpHvgxSChT+XoSlZi8J4n/aIdn3z92e/U47Z0V/yl+Wh9W046GgFVAmoNR/fmdbZYcSSIUeg==",
      "license": "MIT",
      "dependencies": {
        "mime-db": "1.47.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/postman-collection/node_modules/semver": {
      "version": "7.3.5",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
      "integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
      "license": "ISC",
      "dependencies": {
        "lru-cache": "^6.0.0"
      },
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/postman-collection/node_modules/uuid": {
      "version": "3.4.0",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
      "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==",
      "deprecated": "Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.",
      "license": "MIT",
      "bin": {
        "uuid": "bin/uuid"
      }
    },
    "node_modules/postman-url-encoder": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/postman-url-encoder/-/postman-url-encoder-3.0.1.tgz",
      "integrity": "sha512-dMPqXnkDlstM2Eya+Gw4MIGWEan8TzldDcUKZIhZUsJ/G5JjubfQPhFhVWKzuATDMvwvrWbSjF+8VmAvbu6giw==",
      "license": "Apache-2.0",
      "dependencies": {
        "punycode": "^2.1.1"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/prebuild-install": {
      "version": "7.1.3",
      "resolved": "https://registry.npmjs.org/prebuild-install/-/prebuild-install-7.1.3.tgz",
      "integrity": "sha512-8Mf2cbV7x1cXPUILADGI3wuhfqWvtiLA1iclTDbFRZkgRQS0NqsPZphna9V+HyTEadheuPmjaJMsbzKQFOzLug==",
      "license": "MIT",
      "dependencies": {
        "detect-libc": "^2.0.0",
        "expand-template": "^2.0.3",
        "github-from-package": "0.0.0",
        "minimist": "^1.2.3",
        "mkdirp-classic": "^0.5.3",
        "napi-build-utils": "^2.0.0",
        "node-abi": "^3.3.0",
        "pump": "^3.0.0",
        "rc": "^1.2.7",
        "simple-get": "^4.0.0",
        "tar-fs": "^2.0.0",
        "tunnel-agent": "^0.6.0"
      },
      "bin": {
        "prebuild-install": "bin.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/prepend-http": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/prepend-http/-/prepend-http-2.0.0.tgz",
      "integrity": "sha512-ravE6m9Atw9Z/jjttRUZ+clIXogdghyZAuWJ3qEzjT+jI/dL1ifAqhZeC5VHzQp1MSt1+jxKkFNemj/iO7tVUA==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/process": {
      "version": "0.11.10",
      "resolved": "https://registry.npmjs.org/process/-/process-0.11.10.tgz",
      "integrity": "sha512-cdGef/drWFoydD1JsMzuFf8100nZl+GT+yacc2bEced5f9Rjk4z+WtFUTBu9PhOi9j/jfmBPu0mMEY4wIdAF8A==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6.0"
      }
    },
    "node_modules/process-nextick-args": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==",
      "license": "MIT"
    },
    "node_modules/progress": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/progress/-/progress-2.0.3.tgz",
      "integrity": "sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/prom-client": {
      "version": "14.2.0",
      "resolved": "https://registry.npmjs.org/prom-client/-/prom-client-14.2.0.tgz",
      "integrity": "sha512-sF308EhTenb/pDRPakm+WgiN+VdM/T1RaHj1x+MvAuT8UiQP8JmOEbxVqtkbfR4LrvOg5n7ic01kRBDGXjYikA==",
      "license": "Apache-2.0",
      "peer": true,
      "dependencies": {
        "tdigest": "^0.1.1"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/protocols": {
      "version": "1.4.8",
      "resolved": "https://registry.npmjs.org/protocols/-/protocols-1.4.8.tgz",
      "integrity": "sha512-IgjKyaUSjsROSO8/D49Ab7hP8mJgTYcqApOqdPhLoPxAplXmkp+zRvsrSQjFn5by0rhm4VH0GAUELIPpx7B1yg==",
      "license": "MIT"
    },
    "node_modules/proxy-addr": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
      "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
      "license": "MIT",
      "dependencies": {
        "forwarded": "0.2.0",
        "ipaddr.js": "1.9.1"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/proxy-agent": {
      "version": "6.5.0",
      "resolved": "https://registry.npmjs.org/proxy-agent/-/proxy-agent-6.5.0.tgz",
      "integrity": "sha512-TmatMXdr2KlRiA2CyDu8GqR8EjahTG3aY3nXjdzFyoZbmB8hrBsTyMezhULIXKnC0jpfjlmiZ3+EaCzoInSu/A==",
      "license": "MIT",
      "dependencies": {
        "agent-base": "^7.1.2",
        "debug": "^4.3.4",
        "http-proxy-agent": "^7.0.1",
        "https-proxy-agent": "^7.0.6",
        "lru-cache": "^7.14.1",
        "pac-proxy-agent": "^7.1.0",
        "proxy-from-env": "^1.1.0",
        "socks-proxy-agent": "^8.0.5"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/proxy-agent/node_modules/lru-cache": {
      "version": "7.18.3",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-7.18.3.tgz",
      "integrity": "sha512-jumlc0BIUrS3qJGgIkWZsyfAM7NCWiBcCDhnd+3NNM5KbBmLTgHVfWBcg6W+rLUsIpzpERPsvwUP7CckAQSOoA==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/proxy-from-env": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz",
      "integrity": "sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==",
      "license": "MIT"
    },
    "node_modules/ps-tree": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/ps-tree/-/ps-tree-1.2.0.tgz",
      "integrity": "sha512-0VnamPPYHl4uaU/nSFeZZpR21QAWRz+sRv4iW9+v/GS/J5U5iZB5BNN6J0RMoOvdx2gWM2+ZFMIm58q24e4UYA==",
      "license": "MIT",
      "dependencies": {
        "event-stream": "=3.3.4"
      },
      "bin": {
        "ps-tree": "bin/ps-tree.js"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/psl": {
      "version": "1.15.0",
      "resolved": "https://registry.npmjs.org/psl/-/psl-1.15.0.tgz",
      "integrity": "sha512-JZd3gMVBAVQkSs6HdNZo9Sdo0LNcQeMNP3CozBJb3JYC/QUYZTnKxP+f8oWRX4rHP5EurWxqAHTSwUCjlNKa1w==",
      "license": "MIT",
      "dependencies": {
        "punycode": "^2.3.1"
      },
      "funding": {
        "url": "https://github.com/sponsors/lupomontero"
      }
    },
    "node_modules/pump": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.3.tgz",
      "integrity": "sha512-todwxLMY7/heScKmntwQG8CXVkWUOdYxIvY2s0VWAAMh/nd8SoYiRaKjlr7+iCs984f2P8zvrfWcDDYVb73NfA==",
      "license": "MIT",
      "dependencies": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      }
    },
    "node_modules/punycode": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/pupa": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/pupa/-/pupa-2.1.1.tgz",
      "integrity": "sha512-l1jNAspIBSFqbT+y+5FosojNpVpF94nlI+wDUpqP9enwOTfHx9f0gh5nB96vl+6yTpsJsypeNrwfzPrKuHB41A==",
      "license": "MIT",
      "dependencies": {
        "escape-goat": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/puppeteer": {
      "version": "23.11.1",
      "resolved": "https://registry.npmjs.org/puppeteer/-/puppeteer-23.11.1.tgz",
      "integrity": "sha512-53uIX3KR5en8l7Vd8n5DUv90Ae9QDQsyIthaUFVzwV6yU750RjqRznEtNMBT20VthqAdemnJN+hxVdmMHKt7Zw==",
      "hasInstallScript": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@puppeteer/browsers": "2.6.1",
        "chromium-bidi": "0.11.0",
        "cosmiconfig": "^9.0.0",
        "devtools-protocol": "0.0.1367902",
        "puppeteer-core": "23.11.1",
        "typed-query-selector": "^2.12.0"
      },
      "bin": {
        "puppeteer": "lib/cjs/puppeteer/node/cli.js"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/puppeteer-core": {
      "version": "23.11.1",
      "resolved": "https://registry.npmjs.org/puppeteer-core/-/puppeteer-core-23.11.1.tgz",
      "integrity": "sha512-3HZ2/7hdDKZvZQ7dhhITOUg4/wOrDRjyK2ZBllRB0ZCOi9u0cwq1ACHDjBB+nX+7+kltHjQvBRdeY7+W0T+7Gg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@puppeteer/browsers": "2.6.1",
        "chromium-bidi": "0.11.0",
        "debug": "^4.4.0",
        "devtools-protocol": "0.0.1367902",
        "typed-query-selector": "^2.12.0",
        "ws": "^8.18.0"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/puppeteer-extra": {
      "version": "3.3.6",
      "resolved": "https://registry.npmjs.org/puppeteer-extra/-/puppeteer-extra-3.3.6.tgz",
      "integrity": "sha512-rsLBE/6mMxAjlLd06LuGacrukP2bqbzKCLzV1vrhHFavqQE/taQ2UXv3H5P0Ls7nsrASa+6x3bDbXHpqMwq+7A==",
      "license": "MIT",
      "dependencies": {
        "@types/debug": "^4.1.0",
        "debug": "^4.1.1",
        "deepmerge": "^4.2.2"
      },
      "engines": {
        "node": ">=8"
      },
      "peerDependencies": {
        "@types/puppeteer": "*",
        "puppeteer": "*",
        "puppeteer-core": "*"
      },
      "peerDependenciesMeta": {
        "@types/puppeteer": {
          "optional": true
        },
        "puppeteer": {
          "optional": true
        },
        "puppeteer-core": {
          "optional": true
        }
      }
    },
    "node_modules/puppeteer-extra-plugin": {
      "version": "3.2.3",
      "resolved": "https://registry.npmjs.org/puppeteer-extra-plugin/-/puppeteer-extra-plugin-3.2.3.tgz",
      "integrity": "sha512-6RNy0e6pH8vaS3akPIKGg28xcryKscczt4wIl0ePciZENGE2yoaQJNd17UiEbdmh5/6WW6dPcfRWT9lxBwCi2Q==",
      "license": "MIT",
      "dependencies": {
        "@types/debug": "^4.1.0",
        "debug": "^4.1.1",
        "merge-deep": "^3.0.1"
      },
      "engines": {
        "node": ">=9.11.2"
      },
      "peerDependencies": {
        "playwright-extra": "*",
        "puppeteer-extra": "*"
      },
      "peerDependenciesMeta": {
        "playwright-extra": {
          "optional": true
        },
        "puppeteer-extra": {
          "optional": true
        }
      }
    },
    "node_modules/puppeteer-extra-plugin-block-resources": {
      "version": "2.4.3",
      "resolved": "https://registry.npmjs.org/puppeteer-extra-plugin-block-resources/-/puppeteer-extra-plugin-block-resources-2.4.3.tgz",
      "integrity": "sha512-WLxkytm3Nn6D+3N8lFMIi9lL9lLA1mTRHZAflR+zDs9/d1oOYVy52pWPaiQaetOObgfHDpPlHBmzHE2Yhr3ZnQ==",
      "license": "MIT",
      "dependencies": {
        "debug": "^4.1.1",
        "puppeteer-extra-plugin": "^3.2.3"
      },
      "engines": {
        "node": ">=8"
      },
      "peerDependencies": {
        "puppeteer-extra": "*"
      },
      "peerDependenciesMeta": {
        "puppeteer-extra": {
          "optional": true
        }
      }
    },
    "node_modules/puppeteer-extra-plugin-devtools": {
      "version": "2.4.6",
      "resolved": "https://registry.npmjs.org/puppeteer-extra-plugin-devtools/-/puppeteer-extra-plugin-devtools-2.4.6.tgz",
      "integrity": "sha512-9L0lBR5aDgXBg5defXp4AbyZmanHHbWRaCtxXdvTai7tQPUMHtD3JxPRjVBcuhgStaa4v//So3vpaQt6W3PeZQ==",
      "license": "MIT",
      "dependencies": {
        "debug": "^4.1.1",
        "get-port": "^3.2.0",
        "got": "^8.3.1",
        "http-auth": "^3.2.3",
        "http-proxy": "^1.17.0",
        "http-proxy-response-rewrite": "^0.0.1",
        "localtunnel": "^2.0.0",
        "ow": "^0.4.0",
        "puppeteer-extra-plugin": "^3.2.3",
        "randomstring": "^1.1.5",
        "url-parse": "^1.5.3"
      },
      "engines": {
        "node": ">=8"
      },
      "peerDependencies": {
        "playwright-extra": "*",
        "puppeteer-extra": "*"
      },
      "peerDependenciesMeta": {
        "playwright-extra": {
          "optional": true
        },
        "puppeteer-extra": {
          "optional": true
        }
      }
    },
    "node_modules/puppeteer-extra-plugin-devtools/node_modules/get-port": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/get-port/-/get-port-3.2.0.tgz",
      "integrity": "sha512-x5UJKlgeUiNT8nyo/AcnwLnZuZNcSjSw0kogRB+Whd1fjjFq4B1hySFxSFWWSn4mIBzg3sRNUDFYc4g5gjPoLg==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/puppeteer-extra-plugin-stealth": {
      "version": "2.11.2",
      "resolved": "https://registry.npmjs.org/puppeteer-extra-plugin-stealth/-/puppeteer-extra-plugin-stealth-2.11.2.tgz",
      "integrity": "sha512-bUemM5XmTj9i2ZerBzsk2AN5is0wHMNE6K0hXBzBXOzP5m5G3Wl0RHhiqKeHToe/uIH8AoZiGhc1tCkLZQPKTQ==",
      "license": "MIT",
      "dependencies": {
        "debug": "^4.1.1",
        "puppeteer-extra-plugin": "^3.2.3",
        "puppeteer-extra-plugin-user-preferences": "^2.4.1"
      },
      "engines": {
        "node": ">=8"
      },
      "peerDependencies": {
        "playwright-extra": "*",
        "puppeteer-extra": "*"
      },
      "peerDependenciesMeta": {
        "playwright-extra": {
          "optional": true
        },
        "puppeteer-extra": {
          "optional": true
        }
      }
    },
    "node_modules/puppeteer-extra-plugin-user-data-dir": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/puppeteer-extra-plugin-user-data-dir/-/puppeteer-extra-plugin-user-data-dir-2.4.1.tgz",
      "integrity": "sha512-kH1GnCcqEDoBXO7epAse4TBPJh9tEpVEK/vkedKfjOVOhZAvLkHGc9swMs5ChrJbRnf8Hdpug6TJlEuimXNQ+g==",
      "license": "MIT",
      "dependencies": {
        "debug": "^4.1.1",
        "fs-extra": "^10.0.0",
        "puppeteer-extra-plugin": "^3.2.3",
        "rimraf": "^3.0.2"
      },
      "engines": {
        "node": ">=8"
      },
      "peerDependencies": {
        "playwright-extra": "*",
        "puppeteer-extra": "*"
      },
      "peerDependenciesMeta": {
        "playwright-extra": {
          "optional": true
        },
        "puppeteer-extra": {
          "optional": true
        }
      }
    },
    "node_modules/puppeteer-extra-plugin-user-preferences": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/puppeteer-extra-plugin-user-preferences/-/puppeteer-extra-plugin-user-preferences-2.4.1.tgz",
      "integrity": "sha512-i1oAZxRbc1bk8MZufKCruCEC3CCafO9RKMkkodZltI4OqibLFXF3tj6HZ4LZ9C5vCXZjYcDWazgtY69mnmrQ9A==",
      "license": "MIT",
      "dependencies": {
        "debug": "^4.1.1",
        "deepmerge": "^4.2.2",
        "puppeteer-extra-plugin": "^3.2.3",
        "puppeteer-extra-plugin-user-data-dir": "^2.4.1"
      },
      "engines": {
        "node": ">=8"
      },
      "peerDependencies": {
        "playwright-extra": "*",
        "puppeteer-extra": "*"
      },
      "peerDependenciesMeta": {
        "playwright-extra": {
          "optional": true
        },
        "puppeteer-extra": {
          "optional": true
        }
      }
    },
    "node_modules/puppeteer/node_modules/argparse": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
      "license": "Python-2.0"
    },
    "node_modules/puppeteer/node_modules/cosmiconfig": {
      "version": "9.0.0",
      "resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-9.0.0.tgz",
      "integrity": "sha512-itvL5h8RETACmOTFc4UfIyB2RfEHi71Ax6E/PivVxq9NseKbOWpeyHEOIbmAw1rs8Ak0VursQNww7lf7YtUwzg==",
      "license": "MIT",
      "dependencies": {
        "env-paths": "^2.2.1",
        "import-fresh": "^3.3.0",
        "js-yaml": "^4.1.0",
        "parse-json": "^5.2.0"
      },
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/d-fischer"
      },
      "peerDependencies": {
        "typescript": ">=4.9.5"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/puppeteer/node_modules/js-yaml": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
      "license": "MIT",
      "dependencies": {
        "argparse": "^2.0.1"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/puppeteer/node_modules/typescript": {
      "version": "5.8.3",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz",
      "integrity": "sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==",
      "license": "Apache-2.0",
      "optional": true,
      "peer": true,
      "bin": {
        "tsc": "bin/tsc",
        "tsserver": "bin/tsserver"
      },
      "engines": {
        "node": ">=14.17"
      }
    },
    "node_modules/q": {
      "version": "0.9.7",
      "resolved": "https://registry.npmjs.org/q/-/q-0.9.7.tgz",
      "integrity": "sha512-ijt0LhxWClXBtc1RCt8H0WhlZLAdVX26nWbpsJy+Hblmp81d2F/pFsvlrJhJDDruFHM+ECtxP0H0HzGSrARkwg==",
      "deprecated": "You or someone you depend on is using Q, the JavaScript Promise library that gave JavaScript developers strong feelings about promises. They can almost certainly migrate to the native JavaScript promise now. Thank you literally everyone for joining me in this bet against the odds. Be excellent to each other.\n\n(For a CapTP with native promises, see @endo/eventual-send and @endo/captp)",
      "engines": {
        "node": ">=0.6.0",
        "teleport": ">=0.2.0"
      }
    },
    "node_modules/qrcode-terminal": {
      "version": "0.12.0",
      "resolved": "https://registry.npmjs.org/qrcode-terminal/-/qrcode-terminal-0.12.0.tgz",
      "integrity": "sha512-EXtzRZmC+YGmGlDFbXKxQiMZNwCLEO6BANKXG4iCtSIM0yqc/pappSx3RIKr4r0uh5JsBckOXeKrB3Iz7mdQpQ==",
      "bin": {
        "qrcode-terminal": "bin/qrcode-terminal.js"
      }
    },
    "node_modules/qs": {
      "version": "6.14.0",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.14.0.tgz",
      "integrity": "sha512-YWWTjgABSKcvs/nWBi9PycY/JiPJqOD4JA6o9Sej2AtvSGarXxKC3OQSk4pAarbdQlKAh5D4FCQkJNkW+GAn3w==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "side-channel": "^1.1.0"
      },
      "engines": {
        "node": ">=0.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/query-string": {
      "version": "6.14.1",
      "resolved": "https://registry.npmjs.org/query-string/-/query-string-6.14.1.tgz",
      "integrity": "sha512-XDxAeVmpfu1/6IjyT/gXHOl+S0vQ9owggJ30hhWKdHAsNPOcasn5o9BW0eejZqL2e4vMjhAxoW3jVHcD6mbcYw==",
      "license": "MIT",
      "dependencies": {
        "decode-uri-component": "^0.2.0",
        "filter-obj": "^1.1.0",
        "split-on-first": "^1.0.0",
        "strict-uri-encode": "^2.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/querystringify": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/querystringify/-/querystringify-2.2.0.tgz",
      "integrity": "sha512-FIqgj2EUvTa7R50u0rGsyTftzjYmv/a3hO345bZNrqabNqjtgiDMgmo4mkUjd+nzU5oF3dClKqFIPUKybUyqoQ==",
      "license": "MIT"
    },
    "node_modules/queue": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/queue/-/queue-6.0.2.tgz",
      "integrity": "sha512-iHZWu+q3IdFZFX36ro/lKBkSvfkztY5Y7HMiPlOUjhupPcG2JMfst2KKEpu5XndviX/3UhFbRngUPNKtgvtZiA==",
      "license": "MIT",
      "dependencies": {
        "inherits": "~2.0.3"
      }
    },
    "node_modules/queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/quick-lru": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/quick-lru/-/quick-lru-4.0.1.tgz",
      "integrity": "sha512-ARhCpm70fzdcvNQfPoy49IaanKkTlRWF2JMzqhcJbhSFRZv7nPTvZJdcY7301IPmvW+/p0RgIWnQDLJxifsQ7g==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/randombytes": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz",
      "integrity": "sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==",
      "license": "MIT",
      "dependencies": {
        "safe-buffer": "^5.1.0"
      }
    },
    "node_modules/randomstring": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/randomstring/-/randomstring-1.3.1.tgz",
      "integrity": "sha512-lgXZa80MUkjWdE7g2+PZ1xDLzc7/RokXVEQOv5NN2UOTChW1I8A9gha5a9xYBOqgaSoI6uJikDmCU8PyRdArRQ==",
      "license": "MIT",
      "dependencies": {
        "randombytes": "2.1.0"
      },
      "bin": {
        "randomstring": "bin/randomstring"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/range_check": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/range_check/-/range_check-2.0.4.tgz",
      "integrity": "sha512-aed0ocXXj+SIiNNN9b+mZWA3Ow2GXHtftOGk2xQwshK5GbEZAvUcPWNQBLTx/lPcdFRIUFlFCRtHTQNIFMqynQ==",
      "license": "BSD-2-Clause",
      "dependencies": {
        "ip6": "^0.2.0",
        "ipaddr.js": "^1.9.1"
      },
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/range-parser": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
      "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/raw-body": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz",
      "integrity": "sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==",
      "license": "MIT",
      "dependencies": {
        "bytes": "3.1.2",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/rc": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/rc/-/rc-1.2.8.tgz",
      "integrity": "sha512-y3bGgqKj3QBdxLbLkomlohkvsA8gdAiUQlSBJnBhfn+BPxg4bc62d8TcBW15wavDfgexCgccckhcZvywyQYPOw==",
      "license": "(BSD-2-Clause OR MIT OR Apache-2.0)",
      "dependencies": {
        "deep-extend": "^0.6.0",
        "ini": "~1.3.0",
        "minimist": "^1.2.0",
        "strip-json-comments": "~2.0.1"
      },
      "bin": {
        "rc": "cli.js"
      }
    },
    "node_modules/read-pkg": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-5.2.0.tgz",
      "integrity": "sha512-Ug69mNOpfvKDAc2Q8DRpMjjzdtrnv9HcSMX+4VsZxD1aZ6ZzrIE7rlzXBtWTyhULSMKg076AW6WR5iZpD0JiOg==",
      "license": "MIT",
      "dependencies": {
        "@types/normalize-package-data": "^2.4.0",
        "normalize-package-data": "^2.5.0",
        "parse-json": "^5.0.0",
        "type-fest": "^0.6.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/read-pkg-up": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-7.0.1.tgz",
      "integrity": "sha512-zK0TB7Xd6JpCLmlLmufqykGE+/TlOePD6qKClNW7hHDKFh/J7/7gCWGR7joEQEW1bKq3a3yUZSObOoWLFQ4ohg==",
      "license": "MIT",
      "dependencies": {
        "find-up": "^4.1.0",
        "read-pkg": "^5.2.0",
        "type-fest": "^0.8.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/read-pkg-up/node_modules/find-up": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
      "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
      "license": "MIT",
      "dependencies": {
        "locate-path": "^5.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/read-pkg-up/node_modules/locate-path": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
      "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
      "license": "MIT",
      "dependencies": {
        "p-locate": "^4.1.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/read-pkg-up/node_modules/p-limit": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
      "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
      "license": "MIT",
      "dependencies": {
        "p-try": "^2.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/read-pkg-up/node_modules/p-locate": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
      "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
      "license": "MIT",
      "dependencies": {
        "p-limit": "^2.2.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/read-pkg-up/node_modules/type-fest": {
      "version": "0.8.1",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.8.1.tgz",
      "integrity": "sha512-4dbzIzqvjtgiM5rw1k5rEHtBANKmdudhGyBEajN01fEyhaAIhsoKNy6y7+IN93IfpFtwY9iqi7kD+xwKhQsNJA==",
      "license": "(MIT OR CC0-1.0)",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/read-pkg/node_modules/hosted-git-info": {
      "version": "2.8.9",
      "resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.8.9.tgz",
      "integrity": "sha512-mxIDAb9Lsm6DoOJ7xH+5+X4y1LU/4Hi50L9C5sIswK3JzULS4bwk1FvjdBgvYR4bzT4tuUQiC15FE2f5HbLvYw==",
      "license": "ISC"
    },
    "node_modules/read-pkg/node_modules/normalize-package-data": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.5.0.tgz",
      "integrity": "sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==",
      "license": "BSD-2-Clause",
      "dependencies": {
        "hosted-git-info": "^2.1.4",
        "resolve": "^1.10.0",
        "semver": "2 || 3 || 4 || 5",
        "validate-npm-package-license": "^3.0.1"
      }
    },
    "node_modules/read-pkg/node_modules/semver": {
      "version": "5.7.2",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.2.tgz",
      "integrity": "sha512-cBznnQ9KjJqU67B52RMC65CMarK2600WFnbkcaiwWq3xy/5haFJlshgnpjovMVJ+Hff49d8GEn0b87C5pDQ10g==",
      "license": "ISC",
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/read-pkg/node_modules/type-fest": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.6.0.tgz",
      "integrity": "sha512-q+MB8nYR1KDLrgr4G5yemftpMC7/QLqVndBmEEdqzmNj5dcFOO4Oo8qlwZE3ULT3+Zim1F8Kq4cBnikNhlCMlg==",
      "license": "(MIT OR CC0-1.0)",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/readable-stream": {
      "version": "3.6.2",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.2.tgz",
      "integrity": "sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==",
      "license": "MIT",
      "dependencies": {
        "inherits": "^2.0.3",
        "string_decoder": "^1.1.1",
        "util-deprecate": "^1.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/readable-web-to-node-stream": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/readable-web-to-node-stream/-/readable-web-to-node-stream-3.0.4.tgz",
      "integrity": "sha512-9nX56alTf5bwXQ3ZDipHJhusu9NTQJ/CVPtb/XHAJCXihZeitfJvIRS4GqQ/mfIoOE3IelHMrpayVrosdHBuLw==",
      "license": "MIT",
      "dependencies": {
        "readable-stream": "^4.7.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/Borewit"
      }
    },
    "node_modules/readable-web-to-node-stream/node_modules/buffer": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-6.0.3.tgz",
      "integrity": "sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.2.1"
      }
    },
    "node_modules/readable-web-to-node-stream/node_modules/readable-stream": {
      "version": "4.7.0",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-4.7.0.tgz",
      "integrity": "sha512-oIGGmcpTLwPga8Bn6/Z75SVaH1z5dUut2ibSyAMVhmUggWpmDn2dapB0n7f8nwaSiRtepAsfJyfXIO5DCVAODg==",
      "license": "MIT",
      "dependencies": {
        "abort-controller": "^3.0.0",
        "buffer": "^6.0.3",
        "events": "^3.3.0",
        "process": "^0.11.10",
        "string_decoder": "^1.3.0"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      }
    },
    "node_modules/readdir-glob": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/readdir-glob/-/readdir-glob-1.1.3.tgz",
      "integrity": "sha512-v05I2k7xN8zXvPD9N+z/uhXPaj0sUFCe2rcWZIpBsqxfP7xXFQ0tipAd/wjj1YxWyWtUS5IDJpOG82JKt2EAVA==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "minimatch": "^5.1.0"
      }
    },
    "node_modules/readdir-glob/node_modules/brace-expansion": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
      "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "balanced-match": "^1.0.0"
      }
    },
    "node_modules/readdir-glob/node_modules/minimatch": {
      "version": "5.1.6",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-5.1.6.tgz",
      "integrity": "sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==",
      "license": "ISC",
      "optional": true,
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "license": "MIT",
      "dependencies": {
        "picomatch": "^2.2.1"
      },
      "engines": {
        "node": ">=8.10.0"
      }
    },
    "node_modules/redent": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/redent/-/redent-3.0.0.tgz",
      "integrity": "sha512-6tDA8g98We0zd0GvVeMT9arEOnTw9qM03L9cJXaCjrip1OO764RDBLBfrB4cwzNGDj5OA5ioymC9GkizgWJDUg==",
      "license": "MIT",
      "dependencies": {
        "indent-string": "^4.0.0",
        "strip-indent": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/reduce-flatten": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/reduce-flatten/-/reduce-flatten-2.0.0.tgz",
      "integrity": "sha512-EJ4UNY/U1t2P/2k6oqotuX2Cc3T6nxJwsM0N0asT7dhrtH1ltUxDn4NalSYmPE2rCkVpcf/X6R0wDwcFpzhd4w==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/reflect.getprototypeof": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.10.tgz",
      "integrity": "sha512-00o4I+DVrefhv+nX0ulyi3biSHCPDe+yLv5o/p6d/UVlirijB8E16FtfwSAi4g3tcqrQ4lRAqQSoFEZJehYEcw==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.9",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.7",
        "get-proto": "^1.0.1",
        "which-builtin-type": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/regenerator-runtime": {
      "version": "0.13.11",
      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.11.tgz",
      "integrity": "sha512-kY1AZVr2Ra+t+piVaJ4gxaFaReZVH40AKNo7UCX6W+dEwBo/2oZJzqfuN1qLq1oL45o56cPaTXELwrTh8Fpggg=="
    },
    "node_modules/regexp.prototype.flags": {
      "version": "1.5.4",
      "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.4.tgz",
      "integrity": "sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-errors": "^1.3.0",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "set-function-name": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/registry-auth-token": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/registry-auth-token/-/registry-auth-token-4.2.2.tgz",
      "integrity": "sha512-PC5ZysNb42zpFME6D/XlIgtNGdTl8bBOCw90xQLVMpzuuubJKYDWFAEuUNc+Cn8Z8724tg2SDhDRrkVEsqfDMg==",
      "license": "MIT",
      "dependencies": {
        "rc": "1.2.8"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/registry-url": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/registry-url/-/registry-url-5.1.0.tgz",
      "integrity": "sha512-8acYXXTI0AkQv6RAOjE3vOaIXZkT9wo4LOFbBKYQEEnnMNBpKqdUrI6S4NT0KPIo/WVvJ5tE/X5LF/TQUf0ekw==",
      "license": "MIT",
      "dependencies": {
        "rc": "^1.2.8"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/require-from-string": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/require-from-string/-/require-from-string-2.0.2.tgz",
      "integrity": "sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/requires-port": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/requires-port/-/requires-port-1.0.0.tgz",
      "integrity": "sha512-KigOCHcocU3XODJxsu8i/j8T9tzT4adHiecwORRQ0ZZFcp7ahwXuRU1m+yuO90C5ZUyGeGfocHDI14M3L3yDAQ==",
      "license": "MIT"
    },
    "node_modules/resolve": {
      "version": "1.22.10",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz",
      "integrity": "sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==",
      "license": "MIT",
      "dependencies": {
        "is-core-module": "^2.16.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/resolve-alpn": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/resolve-alpn/-/resolve-alpn-1.2.1.tgz",
      "integrity": "sha512-0a1F4l73/ZFZOakJnQ3FvkJ2+gSTQWz/r2KE5OdDY0TxPm5h4GkqkWWfM47T7HsbnOtcJVEF4epCVy6u7Q3K+g==",
      "license": "MIT"
    },
    "node_modules/resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/responselike": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/responselike/-/responselike-1.0.2.tgz",
      "integrity": "sha512-/Fpe5guzJk1gPqdJLJR5u7eG/gNY4nImjbRDaVWVMRhne55TCmj2i9Q+54PBRfatRC8v/rIiv9BN0pMd9OV5EQ==",
      "license": "MIT",
      "dependencies": {
        "lowercase-keys": "^1.0.0"
      }
    },
    "node_modules/restore-cursor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-3.1.0.tgz",
      "integrity": "sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==",
      "license": "MIT",
      "dependencies": {
        "onetime": "^5.1.0",
        "signal-exit": "^3.0.2"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/reusify": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
      "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
      "license": "MIT",
      "engines": {
        "iojs": ">=1.0.0",
        "node": ">=0.10.0"
      }
    },
    "node_modules/rimraf": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
      "deprecated": "Rimraf versions prior to v4 are no longer supported",
      "license": "ISC",
      "dependencies": {
        "glob": "^7.1.3"
      },
      "bin": {
        "rimraf": "bin.js"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "queue-microtask": "^1.2.2"
      }
    },
    "node_modules/rxjs": {
      "version": "7.8.2",
      "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-7.8.2.tgz",
      "integrity": "sha512-dhKf903U/PQZY6boNNtAGdWbG85WAbjT/1xYoZIC7FAY0yWapOBQVsVrDl58W86//e1VpMNBtRV4MaXfdMySFA==",
      "license": "Apache-2.0",
      "dependencies": {
        "tslib": "^2.1.0"
      }
    },
    "node_modules/rxjs/node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/safe-array-concat": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.3.tgz",
      "integrity": "sha512-AURm5f0jYEOydBj7VQlVvDrjeFgthDdEF5H1dP+6mNpoXOMo1quQqJ4wvJDyRZ9+pO3kGWoOdmV08cSv2aJV6Q==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "get-intrinsic": "^1.2.6",
        "has-symbols": "^1.1.0",
        "isarray": "^2.0.5"
      },
      "engines": {
        "node": ">=0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safe-array-concat/node_modules/isarray": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz",
      "integrity": "sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==",
      "license": "MIT"
    },
    "node_modules/safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/safe-push-apply": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/safe-push-apply/-/safe-push-apply-1.0.0.tgz",
      "integrity": "sha512-iKE9w/Z7xCzUMIZqdBsp6pEQvwuEebH4vdpjcDWnyzaI6yl6O9FHvVpmGelvEHNsoY6wGblkxR6Zty/h00WiSA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "isarray": "^2.0.5"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safe-push-apply/node_modules/isarray": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz",
      "integrity": "sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==",
      "license": "MIT"
    },
    "node_modules/safe-regex-test": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.1.0.tgz",
      "integrity": "sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "is-regex": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safe-stable-stringify": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/safe-stable-stringify/-/safe-stable-stringify-2.5.0.tgz",
      "integrity": "sha512-b3rppTKm9T+PsVCBEOUR46GWI7fdOs00VKZ1+9c1EWDaDMvjQc6tUwuFyIprgGgTcWoVHSKrU8H31ZHA2e0RHA==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
      "license": "MIT"
    },
    "node_modules/sanitize-html": {
      "version": "1.20.1",
      "resolved": "https://registry.npmjs.org/sanitize-html/-/sanitize-html-1.20.1.tgz",
      "integrity": "sha512-txnH8TQjaQvg2Q0HY06G6CDJLVYCpbnxrdO0WN8gjCKaU5J0KbyGYhZxx5QJg3WLZ1lB7XU9kDkfrCXUozqptA==",
      "license": "MIT",
      "dependencies": {
        "chalk": "^2.4.1",
        "htmlparser2": "^3.10.0",
        "lodash.clonedeep": "^4.5.0",
        "lodash.escaperegexp": "^4.1.2",
        "lodash.isplainobject": "^4.0.6",
        "lodash.isstring": "^4.0.1",
        "lodash.mergewith": "^4.6.1",
        "postcss": "^7.0.5",
        "srcset": "^1.0.0",
        "xtend": "^4.0.1"
      }
    },
    "node_modules/sanitize-html/node_modules/ansi-styles": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
      "license": "MIT",
      "dependencies": {
        "color-convert": "^1.9.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/sanitize-html/node_modules/chalk": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^3.2.1",
        "escape-string-regexp": "^1.0.5",
        "supports-color": "^5.3.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/sanitize-html/node_modules/color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "license": "MIT",
      "dependencies": {
        "color-name": "1.1.3"
      }
    },
    "node_modules/sanitize-html/node_modules/color-name": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
      "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==",
      "license": "MIT"
    },
    "node_modules/sanitize-html/node_modules/escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/sanitize-html/node_modules/has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/sanitize-html/node_modules/supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "license": "MIT",
      "dependencies": {
        "has-flag": "^3.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/sax": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/sax/-/sax-1.4.1.tgz",
      "integrity": "sha512-+aWOz7yVScEGoKNd4PA10LZ8sk0A/z5+nXQG5giUO5rprX9jgYsTdov9qCchZiPIZezbZH+jRut8nPodFAX4Jg==",
      "license": "ISC"
    },
    "node_modules/schema-utils": {
      "version": "4.3.2",
      "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-4.3.2.tgz",
      "integrity": "sha512-Gn/JaSk/Mt9gYubxTtSn/QCV4em9mpAPiR1rqy/Ocu19u/G9J5WWdNoUT4SiV6mFC3y6cxyFcFwdzPM3FgxGAQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@types/json-schema": "^7.0.9",
        "ajv": "^8.9.0",
        "ajv-formats": "^2.1.1",
        "ajv-keywords": "^5.1.0"
      },
      "engines": {
        "node": ">= 10.13.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/webpack"
      }
    },
    "node_modules/semver": {
      "version": "7.7.2",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/semver-diff": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/semver-diff/-/semver-diff-3.1.1.tgz",
      "integrity": "sha512-GX0Ix/CJcHyB8c4ykpHGIAvLyOwOobtM/8d+TQkAd81/bEjgPHrfba41Vpesr7jX/t8Uh+R3EX9eAS5be+jQYg==",
      "license": "MIT",
      "dependencies": {
        "semver": "^6.3.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/semver-diff/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/send": {
      "version": "0.19.0",
      "resolved": "https://registry.npmjs.org/send/-/send-0.19.0.tgz",
      "integrity": "sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==",
      "license": "MIT",
      "dependencies": {
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "mime": "1.6.0",
        "ms": "2.1.3",
        "on-finished": "2.4.1",
        "range-parser": "~1.2.1",
        "statuses": "2.0.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/send/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/send/node_modules/debug/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "license": "MIT"
    },
    "node_modules/send/node_modules/encodeurl": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
      "integrity": "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/send/node_modules/mime": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
      "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
      "license": "MIT",
      "bin": {
        "mime": "cli.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/sentence-case": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/sentence-case/-/sentence-case-3.0.4.tgz",
      "integrity": "sha512-8LS0JInaQMCRoQ7YUytAo/xUu5W2XnQxV2HI/6uM6U7CITS1RqPElr30V6uIqyMKM9lJGRVFy5/4CuzcixNYSg==",
      "license": "MIT",
      "dependencies": {
        "no-case": "^3.0.4",
        "tslib": "^2.0.3",
        "upper-case-first": "^2.0.2"
      }
    },
    "node_modules/sentence-case/node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/serialize-javascript": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-6.0.2.tgz",
      "integrity": "sha512-Saa1xPByTTq2gdeFZYLLo+RFE35NHZkAbqZeWNd3BpzppeVisAqpDjcp8dyf6uIvEqJRd46jemmyA4iFIeVk8g==",
      "license": "BSD-3-Clause",
      "peer": true,
      "dependencies": {
        "randombytes": "^2.1.0"
      }
    },
    "node_modules/serve-static": {
      "version": "1.16.2",
      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.16.2.tgz",
      "integrity": "sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==",
      "license": "MIT",
      "dependencies": {
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "parseurl": "~1.3.3",
        "send": "0.19.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/set-function-length": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz",
      "integrity": "sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==",
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2",
        "get-intrinsic": "^1.2.4",
        "gopd": "^1.0.1",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/set-function-name": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/set-function-name/-/set-function-name-2.0.2.tgz",
      "integrity": "sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==",
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-errors": "^1.3.0",
        "functions-have-names": "^1.2.3",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/set-proto": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/set-proto/-/set-proto-1.0.0.tgz",
      "integrity": "sha512-RJRdvCo6IAnPdsvP/7m6bsQqNnn1FCBX5ZNtFL98MmFF/4xAIJTIg1YbHW5DC2W5SKZanrC6i4HsJqlajw/dZw==",
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/setimmediate": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/setimmediate/-/setimmediate-1.0.5.tgz",
      "integrity": "sha512-MATJdZp8sLqDl/68LfQmbP8zKPLQNV6BIZoIgrscFDQ+RsvK/BxeDQOgyxKKoh0y/8h3BqVFnCqQ/gd+reiIXA==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==",
      "license": "ISC"
    },
    "node_modules/shallow-clone": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/shallow-clone/-/shallow-clone-0.1.2.tgz",
      "integrity": "sha512-J1zdXCky5GmNnuauESROVu31MQSnLoYvlyEn6j2Ztk6Q5EHFIhxkMhYcv6vuDzl2XEzoRr856QwzMgWM/TmZgw==",
      "license": "MIT",
      "dependencies": {
        "is-extendable": "^0.1.1",
        "kind-of": "^2.0.1",
        "lazy-cache": "^0.2.3",
        "mixin-object": "^2.0.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/shallow-clone/node_modules/kind-of": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-2.0.1.tgz",
      "integrity": "sha512-0u8i1NZ/mg0b+W3MGGw5I7+6Eib2nx72S/QvXa0hYjEkjTknYmEYQJwGu3mLC0BrhtJjtQafTkyRUQ75Kx0LVg==",
      "license": "MIT",
      "dependencies": {
        "is-buffer": "^1.0.2"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/shallow-clone/node_modules/lazy-cache": {
      "version": "0.2.7",
      "resolved": "https://registry.npmjs.org/lazy-cache/-/lazy-cache-0.2.7.tgz",
      "integrity": "sha512-gkX52wvU/R8DVMMt78ATVPFMJqfW8FPz1GZ1sVHBVQHmu/WvhIWE4cE1GBzhJNFicDeYhnwp6Rl35BcAIM3YOQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "license": "MIT",
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/side-channel": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
      "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3",
        "side-channel-list": "^1.0.0",
        "side-channel-map": "^1.0.1",
        "side-channel-weakmap": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-list": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
      "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-map": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
      "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-weakmap": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
      "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3",
        "side-channel-map": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/sift": {
      "version": "17.1.3",
      "resolved": "https://registry.npmjs.org/sift/-/sift-17.1.3.tgz",
      "integrity": "sha512-Rtlj66/b0ICeFzYTuNvX/EF1igRbbnGSvEyT79McoZa/DeGhMyC5pWKOEsZKnpkqtSeovd5FL/bjHWC3CIIvCQ=="
    },
    "node_modules/signal-exit": {
      "version": "3.0.7",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz",
      "integrity": "sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==",
      "license": "ISC"
    },
    "node_modules/simple-concat": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/simple-concat/-/simple-concat-1.0.1.tgz",
      "integrity": "sha512-cSFtAPtRhljv69IK0hTVZQ+OfE9nePi/rtJmw5UjHeVyVroEqJXP1sFztKUy1qU+xvz3u/sfYJLa947b7nAN2Q==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/simple-get": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/simple-get/-/simple-get-4.0.1.tgz",
      "integrity": "sha512-brv7p5WgH0jmQJr1ZDDfKDOSeWWg+OVypG99A/5vYGPqJ6pxiaHLy8nxtFjBA7oMa01ebA9gfh1uMCFqOuXxvA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "decompress-response": "^6.0.0",
        "once": "^1.3.1",
        "simple-concat": "^1.0.0"
      }
    },
    "node_modules/simple-swizzle": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz",
      "integrity": "sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==",
      "license": "MIT",
      "dependencies": {
        "is-arrayish": "^0.3.1"
      }
    },
    "node_modules/simple-swizzle/node_modules/is-arrayish": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.3.2.tgz",
      "integrity": "sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==",
      "license": "MIT"
    },
    "node_modules/slash": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-2.0.0.tgz",
      "integrity": "sha512-ZYKh3Wh2z1PpEXWr0MpSBZ0V6mZHAQfYevttO11c51CaWjGTaadiKZ+wVt1PbMlDV5qhMFslpZCemhwOK7C89A==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/smart-buffer": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/smart-buffer/-/smart-buffer-4.2.0.tgz",
      "integrity": "sha512-94hK0Hh8rPqQl2xXc3HsaBoOXKV20MToPkcXvwbISWLEs+64sBq5kFgn2kJDHb1Pry9yrP0dxrCI9RRci7RXKg==",
      "license": "MIT",
      "engines": {
        "node": ">= 6.0.0",
        "npm": ">= 3.0.0"
      }
    },
    "node_modules/smashah-puppeteer-page-proxy": {
      "version": "1.2.9",
      "resolved": "https://registry.npmjs.org/smashah-puppeteer-page-proxy/-/smashah-puppeteer-page-proxy-1.2.9.tgz",
      "integrity": "sha512-fPZLw3gbi74tp7ZDGYBAOXA8YdcMK33px7UeLLF7P4daqjkCRUJmgNwAl8nE2K/smfdtnTgMRY8w+HX3piN6eA==",
      "license": "MIT",
      "dependencies": {
        "got": "^11.5.1",
        "http-proxy-agent": "^4.0.1",
        "https-proxy-agent": "^5.0.0",
        "socks-proxy-agent": "^5.0.0",
        "tough-cookie": "^4.0.0"
      }
    },
    "node_modules/smashah-puppeteer-page-proxy/node_modules/@sindresorhus/is": {
      "version": "4.6.0",
      "resolved": "https://registry.npmjs.org/@sindresorhus/is/-/is-4.6.0.tgz",
      "integrity": "sha512-t09vSN3MdfsyCHoFcTRCH/iUtG7OJ0CsjzB8cjAmKc/va/kIgeDI/TxsigdncE/4be734m0cvIYwNaV4i2XqAw==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/is?sponsor=1"
      }
    },
    "node_modules/smashah-puppeteer-page-proxy/node_modules/@szmarczak/http-timer": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-4.0.6.tgz",
      "integrity": "sha512-4BAffykYOgO+5nzBWYwE3W90sBgLJoUPRWWcL8wlyiM8IB8ipJz3UMJ9KXQd1RKQXpKp8Tutn80HZtWsu2u76w==",
      "license": "MIT",
      "dependencies": {
        "defer-to-connect": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/smashah-puppeteer-page-proxy/node_modules/agent-base": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz",
      "integrity": "sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==",
      "license": "MIT",
      "dependencies": {
        "debug": "4"
      },
      "engines": {
        "node": ">= 6.0.0"
      }
    },
    "node_modules/smashah-puppeteer-page-proxy/node_modules/cacheable-request": {
      "version": "7.0.4",
      "resolved": "https://registry.npmjs.org/cacheable-request/-/cacheable-request-7.0.4.tgz",
      "integrity": "sha512-v+p6ongsrp0yTGbJXjgxPow2+DL93DASP4kXCDKb8/bwRtt9OEF3whggkkDkGNzgcWy2XaF4a8nZglC7uElscg==",
      "license": "MIT",
      "dependencies": {
        "clone-response": "^1.0.2",
        "get-stream": "^5.1.0",
        "http-cache-semantics": "^4.0.0",
        "keyv": "^4.0.0",
        "lowercase-keys": "^2.0.0",
        "normalize-url": "^6.0.1",
        "responselike": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/smashah-puppeteer-page-proxy/node_modules/defer-to-connect": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-2.0.1.tgz",
      "integrity": "sha512-4tvttepXG1VaYGrRibk5EwJd1t4udunSOVMdLSAL6mId1ix438oPwPZMALY41FCijukO1L0twNcGsdzS7dHgDg==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/smashah-puppeteer-page-proxy/node_modules/got": {
      "version": "11.8.6",
      "resolved": "https://registry.npmjs.org/got/-/got-11.8.6.tgz",
      "integrity": "sha512-6tfZ91bOr7bOXnK7PRDCGBLa1H4U080YHNaAQ2KsMGlLEzRbk44nsZF2E1IeRc3vtJHPVbKCYgdFbaGO2ljd8g==",
      "license": "MIT",
      "dependencies": {
        "@sindresorhus/is": "^4.0.0",
        "@szmarczak/http-timer": "^4.0.5",
        "@types/cacheable-request": "^6.0.1",
        "@types/responselike": "^1.0.0",
        "cacheable-lookup": "^5.0.3",
        "cacheable-request": "^7.0.2",
        "decompress-response": "^6.0.0",
        "http2-wrapper": "^1.0.0-beta.5.2",
        "lowercase-keys": "^2.0.0",
        "p-cancelable": "^2.0.0",
        "responselike": "^2.0.0"
      },
      "engines": {
        "node": ">=10.19.0"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/got?sponsor=1"
      }
    },
    "node_modules/smashah-puppeteer-page-proxy/node_modules/http-cache-semantics": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.2.0.tgz",
      "integrity": "sha512-dTxcvPXqPvXBQpq5dUr6mEMJX4oIEFv6bwom3FDwKRDsuIjjJGANqhBuoAn9c1RQJIdAKav33ED65E2ys+87QQ==",
      "license": "BSD-2-Clause"
    },
    "node_modules/smashah-puppeteer-page-proxy/node_modules/http-proxy-agent": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/http-proxy-agent/-/http-proxy-agent-4.0.1.tgz",
      "integrity": "sha512-k0zdNgqWTGA6aeIRVpvfVob4fL52dTfaehylg0Y4UvSySvOq/Y+BOyPrgpUrA7HylqvU8vIZGsRuXmspskV0Tg==",
      "license": "MIT",
      "dependencies": {
        "@tootallnate/once": "1",
        "agent-base": "6",
        "debug": "4"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/smashah-puppeteer-page-proxy/node_modules/https-proxy-agent": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-5.0.1.tgz",
      "integrity": "sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==",
      "license": "MIT",
      "dependencies": {
        "agent-base": "6",
        "debug": "4"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/smashah-puppeteer-page-proxy/node_modules/json-buffer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
      "license": "MIT"
    },
    "node_modules/smashah-puppeteer-page-proxy/node_modules/keyv": {
      "version": "4.5.4",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
      "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
      "license": "MIT",
      "dependencies": {
        "json-buffer": "3.0.1"
      }
    },
    "node_modules/smashah-puppeteer-page-proxy/node_modules/lowercase-keys": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
      "integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/smashah-puppeteer-page-proxy/node_modules/p-cancelable": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-2.1.1.tgz",
      "integrity": "sha512-BZOr3nRQHOntUjTrH8+Lh54smKHoHyur8We1V8DSMVrl5A2malOOwuJRnKRDjSnkoeBh4at6BwEnb5I7Jl31wg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/smashah-puppeteer-page-proxy/node_modules/responselike": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/responselike/-/responselike-2.0.1.tgz",
      "integrity": "sha512-4gl03wn3hj1HP3yzgdI7d3lCkF95F21Pz4BPGvKHinyQzALR5CapwC8yIi0Rh58DEMQ/SguC03wFj2k0M/mHhw==",
      "license": "MIT",
      "dependencies": {
        "lowercase-keys": "^2.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/smashah-puppeteer-page-proxy/node_modules/socks-proxy-agent": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/socks-proxy-agent/-/socks-proxy-agent-5.0.1.tgz",
      "integrity": "sha512-vZdmnjb9a2Tz6WEQVIurybSwElwPxMZaIc7PzqbJTrezcKNznv6giT7J7tZDZ1BojVaa1jvO/UiUdhDVB0ACoQ==",
      "license": "MIT",
      "dependencies": {
        "agent-base": "^6.0.2",
        "debug": "4",
        "socks": "^2.3.3"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/snake-case": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/snake-case/-/snake-case-3.0.4.tgz",
      "integrity": "sha512-LAOh4z89bGQvl9pFfNF8V146i7o7/CqFPbqzYgP+yYzDIDeS9HaNFtXABamRW+AQzEVODcvE79ljJ+8a9YSdMg==",
      "license": "MIT",
      "dependencies": {
        "dot-case": "^3.0.4",
        "tslib": "^2.0.3"
      }
    },
    "node_modules/snake-case/node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/socket.io": {
      "version": "4.8.1",
      "resolved": "https://registry.npmjs.org/socket.io/-/socket.io-4.8.1.tgz",
      "integrity": "sha512-oZ7iUCxph8WYRHHcjBEc9unw3adt5CmSNlppj/5Q4k2RIrhl8Z5yY2Xr4j9zj0+wzVZ0bxmYoGSzKJnRl6A4yg==",
      "license": "MIT",
      "dependencies": {
        "accepts": "~1.3.4",
        "base64id": "~2.0.0",
        "cors": "~2.8.5",
        "debug": "~4.3.2",
        "engine.io": "~6.6.0",
        "socket.io-adapter": "~2.5.2",
        "socket.io-parser": "~4.2.4"
      },
      "engines": {
        "node": ">=10.2.0"
      }
    },
    "node_modules/socket.io-adapter": {
      "version": "2.5.5",
      "resolved": "https://registry.npmjs.org/socket.io-adapter/-/socket.io-adapter-2.5.5.tgz",
      "integrity": "sha512-eLDQas5dzPgOWCk9GuuJC2lBqItuhKI4uxGgo9aIV7MYbk2h9Q6uULEh8WBzThoI7l+qU9Ast9fVUmkqPP9wYg==",
      "license": "MIT",
      "dependencies": {
        "debug": "~4.3.4",
        "ws": "~8.17.1"
      }
    },
    "node_modules/socket.io-adapter/node_modules/debug": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.7.tgz",
      "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/socket.io-adapter/node_modules/ws": {
      "version": "8.17.1",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.17.1.tgz",
      "integrity": "sha512-6XQFvXTkbfUOZOKKILFG1PDK2NDQs4azKQl26T0YS5CxqWLgXajbPZ+h4gZekJyRqFU8pvnbAbbs/3TgRPy+GQ==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/socket.io-client": {
      "version": "4.8.1",
      "resolved": "https://registry.npmjs.org/socket.io-client/-/socket.io-client-4.8.1.tgz",
      "integrity": "sha512-hJVXfu3E28NmzGk8o1sHhN3om52tRvwYeidbj7xKy2eIIse5IoKX3USlS6Tqt3BHAtflLIkCQBkzVrEEfWUyYQ==",
      "license": "MIT",
      "dependencies": {
        "@socket.io/component-emitter": "~3.1.0",
        "debug": "~4.3.2",
        "engine.io-client": "~6.6.1",
        "socket.io-parser": "~4.2.4"
      },
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/socket.io-client/node_modules/debug": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.7.tgz",
      "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/socket.io-parser": {
      "version": "4.2.4",
      "resolved": "https://registry.npmjs.org/socket.io-parser/-/socket.io-parser-4.2.4.tgz",
      "integrity": "sha512-/GbIKmo8ioc+NIWIhwdecY0ge+qVBSMdgxGygevmdHj24bsfgtCmcUUcQ5ZzcylGFHsN3k4HB4Cgkl96KVnuew==",
      "license": "MIT",
      "dependencies": {
        "@socket.io/component-emitter": "~3.1.0",
        "debug": "~4.3.1"
      },
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/socket.io-parser/node_modules/debug": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.7.tgz",
      "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/socket.io/node_modules/debug": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.7.tgz",
      "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/socks": {
      "version": "2.8.5",
      "resolved": "https://registry.npmjs.org/socks/-/socks-2.8.5.tgz",
      "integrity": "sha512-iF+tNDQla22geJdTyJB1wM/qrX9DMRwWrciEPwWLPRWAUEM8sQiyxgckLxWT1f7+9VabJS0jTGGr4QgBuvi6Ww==",
      "license": "MIT",
      "dependencies": {
        "ip-address": "^9.0.5",
        "smart-buffer": "^4.2.0"
      },
      "engines": {
        "node": ">= 10.0.0",
        "npm": ">= 3.0.0"
      }
    },
    "node_modules/socks-proxy-agent": {
      "version": "8.0.5",
      "resolved": "https://registry.npmjs.org/socks-proxy-agent/-/socks-proxy-agent-8.0.5.tgz",
      "integrity": "sha512-HehCEsotFqbPW9sJ8WVYB6UbmIMv7kUUORIF2Nncq4VQvBfNBLibW9YZR5dlYCSUhwcD628pRllm7n+E+YTzJw==",
      "license": "MIT",
      "dependencies": {
        "agent-base": "^7.1.2",
        "debug": "^4.3.4",
        "socks": "^2.8.3"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/sort-keys": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/sort-keys/-/sort-keys-2.0.0.tgz",
      "integrity": "sha512-/dPCrG1s3ePpWm6yBbxZq5Be1dXGLyLn9Z791chDC3NFrpkVbWGzkBwPN1knaciexFXgRJ7hzdnwZ4stHSDmjg==",
      "license": "MIT",
      "dependencies": {
        "is-plain-obj": "^1.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/source-map": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/source-map-support": {
      "version": "0.5.21",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz",
      "integrity": "sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "buffer-from": "^1.0.0",
        "source-map": "^0.6.0"
      }
    },
    "node_modules/sparse-bitfield": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/sparse-bitfield/-/sparse-bitfield-3.0.3.tgz",
      "integrity": "sha512-kvzhi7vqKTfkh0PZU+2D2PIllw2ymqJKujUcyPMd9Y75Nv4nPbGJZXNhxsgdQab2BmlDct1YnfQCguEvHr7VsQ==",
      "dependencies": {
        "memory-pager": "^1.0.2"
      }
    },
    "node_modules/spdx-correct": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/spdx-correct/-/spdx-correct-3.2.0.tgz",
      "integrity": "sha512-kN9dJbvnySHULIluDHy32WHRUu3Og7B9sbY7tsFLctQkIqnMh3hErYgdMjTYuqmcXX+lK5T1lnUt3G7zNswmZA==",
      "license": "Apache-2.0",
      "dependencies": {
        "spdx-expression-parse": "^3.0.0",
        "spdx-license-ids": "^3.0.0"
      }
    },
    "node_modules/spdx-exceptions": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.5.0.tgz",
      "integrity": "sha512-PiU42r+xO4UbUS1buo3LPJkjlO7430Xn5SVAhdpzzsPHsjbYVflnnFdATgabnLude+Cqu25p6N+g2lw/PFsa4w==",
      "license": "CC-BY-3.0"
    },
    "node_modules/spdx-expression-parse": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-3.0.1.tgz",
      "integrity": "sha512-cbqHunsQWnJNE6KhVSMsMeH5H/L9EpymbzqTQ3uLwNCLZ1Q481oWaofqH7nO6V07xlXwY6PhQdQ2IedWx/ZK4Q==",
      "license": "MIT",
      "dependencies": {
        "spdx-exceptions": "^2.1.0",
        "spdx-license-ids": "^3.0.0"
      }
    },
    "node_modules/spdx-license-ids": {
      "version": "3.0.21",
      "resolved": "https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.21.tgz",
      "integrity": "sha512-Bvg/8F5XephndSK3JffaRqdT+gyhfqIPwDHpX80tJrF8QQRYMo8sNMeaZ2Dp5+jhwKnUmIOyFFQfHRkjJm5nXg==",
      "license": "CC0-1.0"
    },
    "node_modules/spinnies": {
      "version": "0.5.1",
      "resolved": "https://registry.npmjs.org/spinnies/-/spinnies-0.5.1.tgz",
      "integrity": "sha512-WpjSXv9NQz0nU3yCT9TFEOfpFrXADY9C5fG6eAJqixLhvTX1jP3w92Y8IE5oafIe42nlF9otjhllnXN/QCaB3A==",
      "license": "MIT",
      "dependencies": {
        "chalk": "^2.4.2",
        "cli-cursor": "^3.0.0",
        "strip-ansi": "^5.2.0"
      }
    },
    "node_modules/spinnies/node_modules/ansi-styles": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
      "license": "MIT",
      "dependencies": {
        "color-convert": "^1.9.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/spinnies/node_modules/chalk": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^3.2.1",
        "escape-string-regexp": "^1.0.5",
        "supports-color": "^5.3.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/spinnies/node_modules/color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "license": "MIT",
      "dependencies": {
        "color-name": "1.1.3"
      }
    },
    "node_modules/spinnies/node_modules/color-name": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
      "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==",
      "license": "MIT"
    },
    "node_modules/spinnies/node_modules/escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/spinnies/node_modules/has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/spinnies/node_modules/supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "license": "MIT",
      "dependencies": {
        "has-flag": "^3.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/split": {
      "version": "0.3.3",
      "resolved": "https://registry.npmjs.org/split/-/split-0.3.3.tgz",
      "integrity": "sha512-wD2AeVmxXRBoX44wAycgjVpMhvbwdI2aZjCkvfNcH1YqHQvJVa1duWc73OyVGJUc05fhFaTZeQ/PYsrmyH0JVA==",
      "license": "MIT",
      "dependencies": {
        "through": "2"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/split-on-first": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/split-on-first/-/split-on-first-1.1.0.tgz",
      "integrity": "sha512-43ZssAJaMusuKWL8sKUBQXHWOpq8d6CfN/u1p4gUzfJkM05C8rxTmYrkIPTXapZpORA6LkkzcUulJ8FqA7Uudw==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/sprintf-js": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.1.3.tgz",
      "integrity": "sha512-Oo+0REFV59/rz3gfJNKQiBlwfHaSESl1pcGyABQsnnIfWOFt6JNj5gCog2U6MLZ//IGYD+nA8nI+mTShREReaA==",
      "license": "BSD-3-Clause"
    },
    "node_modules/srcset": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/srcset/-/srcset-1.0.0.tgz",
      "integrity": "sha512-UH8e80l36aWnhACzjdtLspd4TAWldXJMa45NuOkTTU+stwekswObdqM63TtQixN4PPd/vO/kxLa6RD+tUPeFMg==",
      "license": "MIT",
      "dependencies": {
        "array-uniq": "^1.0.2",
        "number-is-nan": "^1.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/stack-trace": {
      "version": "0.0.10",
      "resolved": "https://registry.npmjs.org/stack-trace/-/stack-trace-0.0.10.tgz",
      "integrity": "sha512-KGzahc7puUKkzyMt+IqAep+TVNbKP+k2Lmwhub39m1AsTSkaDutx56aDCo+HLDzf/D26BIHTJWNiTG1KAJiQCg==",
      "license": "MIT",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/statuses": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
      "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/stop-iteration-iterator": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/stop-iteration-iterator/-/stop-iteration-iterator-1.1.0.tgz",
      "integrity": "sha512-eLoXW/DHyl62zxY4SCaIgnRhuMr6ri4juEYARS8E6sCEqzKpOiE521Ucofdx+KnDZl5xmvGYaaKCk5FEOxJCoQ==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "internal-slot": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/stream-combiner": {
      "version": "0.0.4",
      "resolved": "https://registry.npmjs.org/stream-combiner/-/stream-combiner-0.0.4.tgz",
      "integrity": "sha512-rT00SPnTVyRsaSz5zgSPma/aHSOic5U1prhYdRy5HS2kTZviFpmDgzilbtsJsxiroqACmayynDN/9VzIbX5DOw==",
      "license": "MIT",
      "dependencies": {
        "duplexer": "~0.1.1"
      }
    },
    "node_modules/streamx": {
      "version": "2.22.1",
      "resolved": "https://registry.npmjs.org/streamx/-/streamx-2.22.1.tgz",
      "integrity": "sha512-znKXEBxfatz2GBNK02kRnCXjV+AA4kjZIUxeWSr3UGirZMJfTE9uiwKHobnbgxWyL/JWro8tTq+vOqAK1/qbSA==",
      "license": "MIT",
      "dependencies": {
        "fast-fifo": "^1.3.2",
        "text-decoder": "^1.1.0"
      },
      "optionalDependencies": {
        "bare-events": "^2.2.0"
      }
    },
    "node_modules/strict-uri-encode": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/strict-uri-encode/-/strict-uri-encode-2.0.0.tgz",
      "integrity": "sha512-QwiXZgpRcKkhTj2Scnn++4PKtWsH0kpzZ62L2R6c/LUVYv7hVnZqcg2+sMuT6R7Jusu1vviK/MFsu6kNJfWlEQ==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/string": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/string/-/string-1.7.0.tgz",
      "integrity": "sha512-1f3C1hDPqw/adk1cl9H4AUvnr9GXvce4RljOkDgBhOyBLgCjtf4qTTxLKgs+NS835xUp6j0JdKVspvmMPVvglw=="
    },
    "node_modules/string_decoder": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
      "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
      "license": "MIT",
      "dependencies": {
        "safe-buffer": "~5.2.0"
      }
    },
    "node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string-width/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string-width/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string.prototype.trim": {
      "version": "1.2.10",
      "resolved": "https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.10.tgz",
      "integrity": "sha512-Rs66F0P/1kedk5lyYyH9uBzuiI/kNRmwJAR9quK6VOtIpZ2G+hMZd+HQbbv25MgCA6gEffoMZYxlTod4WcdrKA==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "define-data-property": "^1.1.4",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-object-atoms": "^1.0.0",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.trimend": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.9.tgz",
      "integrity": "sha512-G7Ok5C6E/j4SGfyLCloXTrngQIQU3PWtXGst3yM7Bea9FRURf1S42ZHlZZtsNque2FN2PoUhfZXYLNWwEr4dLQ==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.trimstart": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.8.tgz",
      "integrity": "sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/strip-ansi": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
      "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^4.1.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/strip-final-newline": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-2.0.0.tgz",
      "integrity": "sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/strip-indent": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/strip-indent/-/strip-indent-3.0.0.tgz",
      "integrity": "sha512-laJTa3Jb+VQpaC6DseHhF7dXVqHTfJPCRDaEbid/drOhgitgYku/letMUqOXFoWV0zIIUbjpdH2t+tYj4bQMRQ==",
      "license": "MIT",
      "dependencies": {
        "min-indent": "^1.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-json-comments": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz",
      "integrity": "sha512-4gB8na07fecVVkOI6Rs4e7T6NOTki5EmL7TUduTs6bu3EdnSycntVJ4re8kgZA+wx9IueI2Y11bfbgwtzuE0KQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/strtok3": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/strtok3/-/strtok3-7.1.1.tgz",
      "integrity": "sha512-mKX8HA/cdBqMKUr0MMZAFssCkIGoZeSCMXgnt79yKxNFguMLVFgRe6wB+fsL0NmoHDbeyZXczy7vEPSoo3rkzg==",
      "license": "MIT",
      "dependencies": {
        "@tokenizer/token": "^0.3.0",
        "peek-readable": "^5.1.3"
      },
      "engines": {
        "node": ">=16"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/Borewit"
      }
    },
    "node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "license": "MIT",
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/supports-hyperlinks": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/supports-hyperlinks/-/supports-hyperlinks-2.3.0.tgz",
      "integrity": "sha512-RpsAZlpWcDwOPQA22aCH4J0t7L8JmAvsCxfOSEwm7cQs3LshN36QaTkwd70DnBOXDWGssw2eUoc8CaRWT0XunA==",
      "license": "MIT",
      "dependencies": {
        "has-flag": "^4.0.0",
        "supports-color": "^7.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/swagger-stats": {
      "version": "0.99.7",
      "resolved": "https://registry.npmjs.org/swagger-stats/-/swagger-stats-0.99.7.tgz",
      "integrity": "sha512-niP70m99Cwpz/Fyfk8ydul1jM0pOKD6UofSaDzW2Op6o6WYFsuAl/BhVbmLkZWOAZ7IloDVvFj6vaU5zA0xydg==",
      "license": "MIT",
      "dependencies": {
        "axios": "^1.4.0",
        "basic-auth": "^2.0.1",
        "cookies": "^0.8.0",
        "debug": "^4.3.4",
        "moment": "^2.29.4",
        "path-to-regexp": "^6.2.1",
        "qs": "^6.11.2",
        "send": "^0.18.0",
        "uuid": "^9.0.0"
      },
      "peerDependencies": {
        "prom-client": ">= 10 <= 14"
      }
    },
    "node_modules/swagger-stats/node_modules/encodeurl": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
      "integrity": "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/swagger-stats/node_modules/mime": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
      "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
      "license": "MIT",
      "bin": {
        "mime": "cli.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/swagger-stats/node_modules/path-to-regexp": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-6.3.0.tgz",
      "integrity": "sha512-Yhpw4T9C6hPpgPeA28us07OJeqZ5EzQTkbfwuhsUg0c237RomFoETJgmp2sa3F/41gfLE6G5cqcYwznmeEeOlQ==",
      "license": "MIT"
    },
    "node_modules/swagger-stats/node_modules/send": {
      "version": "0.18.0",
      "resolved": "https://registry.npmjs.org/send/-/send-0.18.0.tgz",
      "integrity": "sha512-qqWzuOjSFOuqPjFe4NOsMLafToQQwBSOEpS+FwEt3A2V3vKubTquT3vmLTQpFgMXp8AlFWFuP1qKaJZOtPpVXg==",
      "license": "MIT",
      "dependencies": {
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "mime": "1.6.0",
        "ms": "2.1.3",
        "on-finished": "2.4.1",
        "range-parser": "~1.2.1",
        "statuses": "2.0.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/swagger-stats/node_modules/send/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/swagger-stats/node_modules/send/node_modules/debug/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "license": "MIT"
    },
    "node_modules/swagger-ui-dist": {
      "version": "4.19.1",
      "resolved": "https://registry.npmjs.org/swagger-ui-dist/-/swagger-ui-dist-4.19.1.tgz",
      "integrity": "sha512-n/gFn+R7G/BXWwl5UZLw6F1YgWOlf3zkwGlsPhTMhNtAAolBGKg0JS5b2RKt5NI6/hSopVaSrki2wTIMUDDy2w==",
      "license": "Apache-2.0"
    },
    "node_modules/swagger-ui-express": {
      "version": "4.6.3",
      "resolved": "https://registry.npmjs.org/swagger-ui-express/-/swagger-ui-express-4.6.3.tgz",
      "integrity": "sha512-CDje4PndhTD2HkgyKH3pab+LKspDeB/NhPN2OF1j+piYIamQqBYwAXWESOT1Yju2xFg51bRW9sUng2WxDjzArw==",
      "license": "MIT",
      "dependencies": {
        "swagger-ui-dist": ">=4.11.0"
      },
      "engines": {
        "node": ">= v0.10.32"
      },
      "peerDependencies": {
        "express": ">=4.0.0 || >=5.0.0-beta"
      }
    },
    "node_modules/table-layout": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/table-layout/-/table-layout-1.0.2.tgz",
      "integrity": "sha512-qd/R7n5rQTRFi+Zf2sk5XVVd9UQl6ZkduPFC3S7WEGJAmetDTjY3qPN50eSKzwuzEyQKy5TN2TiZdkIjos2L6A==",
      "license": "MIT",
      "dependencies": {
        "array-back": "^4.0.1",
        "deep-extend": "~0.6.0",
        "typical": "^5.2.0",
        "wordwrapjs": "^4.0.0"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/tapable": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/tapable/-/tapable-2.2.2.tgz",
      "integrity": "sha512-Re10+NauLTMCudc7T5WLFLAwDhQ0JWdrMK+9B2M8zR5hRExKmsRDCBA7/aV/pNJFltmBFO5BAMlQFi/vq3nKOg==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/tar-fs": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/tar-fs/-/tar-fs-2.1.3.tgz",
      "integrity": "sha512-090nwYJDmlhwFwEW3QQl+vaNnxsO2yVsd45eTKRBzSzu+hlb1w2K9inVq5b0ngXuLVqQ4ApvsUHHnu/zQNkWAg==",
      "license": "MIT",
      "dependencies": {
        "chownr": "^1.1.1",
        "mkdirp-classic": "^0.5.2",
        "pump": "^3.0.0",
        "tar-stream": "^2.1.4"
      }
    },
    "node_modules/tar-stream": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/tar-stream/-/tar-stream-2.2.0.tgz",
      "integrity": "sha512-ujeqbceABgwMZxEJnk2HDY2DlnUZ+9oEcb1KzTVfYHio0UE6dG71n60d8D2I4qNvleWrrXpmjpt7vZeF1LnMZQ==",
      "license": "MIT",
      "dependencies": {
        "bl": "^4.0.3",
        "end-of-stream": "^1.4.1",
        "fs-constants": "^1.0.0",
        "inherits": "^2.0.3",
        "readable-stream": "^3.1.1"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/tcp-port-used": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/tcp-port-used/-/tcp-port-used-1.0.2.tgz",
      "integrity": "sha512-l7ar8lLUD3XS1V2lfoJlCBaeoaWo/2xfYt81hM7VlvR4RrMVFqfmzfhLVk40hAb368uitje5gPtBRL1m/DGvLA==",
      "license": "MIT",
      "dependencies": {
        "debug": "4.3.1",
        "is2": "^2.0.6"
      }
    },
    "node_modules/tcp-port-used/node_modules/debug": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.1.tgz",
      "integrity": "sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/tcp-port-used/node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
      "license": "MIT"
    },
    "node_modules/tdigest": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/tdigest/-/tdigest-0.1.2.tgz",
      "integrity": "sha512-+G0LLgjjo9BZX2MfdvPfH+MKLCrxlXSYec5DaPYP1fe6Iyhf0/fSmJ0bFiZ1F8BT6cGXl2LpltQptzjXKWEkKA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "bintrees": "1.0.2"
      }
    },
    "node_modules/terminal-link": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/terminal-link/-/terminal-link-2.1.1.tgz",
      "integrity": "sha512-un0FmiRUQNr5PJqy9kP7c40F5BOfpGlYTrxonDChEZB7pzZxRNp/bt+ymiy9/npwXya9KH99nJ/GXFIiUkYGFQ==",
      "license": "MIT",
      "dependencies": {
        "ansi-escapes": "^4.2.1",
        "supports-hyperlinks": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/terminate": {
      "version": "2.8.0",
      "resolved": "https://registry.npmjs.org/terminate/-/terminate-2.8.0.tgz",
      "integrity": "sha512-bcbjJEg0wY5nuJXvGxxHfmoEPkyHLCctUKO6suwtxy7jVSgGcgPeGwpbLDLELFhIaxCGRr3dPvyNg1yuz2V0eg==",
      "license": "GPL-2.0",
      "dependencies": {
        "ps-tree": "^1.2.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/terser": {
      "version": "5.43.1",
      "resolved": "https://registry.npmjs.org/terser/-/terser-5.43.1.tgz",
      "integrity": "sha512-+6erLbBm0+LROX2sPXlUYx/ux5PyE9K/a92Wrt6oA+WDAoFTdpHE5tCYCI5PNzq2y8df4rA+QgHLJuR4jNymsg==",
      "license": "BSD-2-Clause",
      "peer": true,
      "dependencies": {
        "@jridgewell/source-map": "^0.3.3",
        "acorn": "^8.14.0",
        "commander": "^2.20.0",
        "source-map-support": "~0.5.20"
      },
      "bin": {
        "terser": "bin/terser"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/terser-webpack-plugin": {
      "version": "5.3.14",
      "resolved": "https://registry.npmjs.org/terser-webpack-plugin/-/terser-webpack-plugin-5.3.14.tgz",
      "integrity": "sha512-vkZjpUjb6OMS7dhV+tILUW6BhpDR7P2L/aQSAv+Uwk+m8KATX9EccViHTJR2qDtACKPIYndLGCyl3FMo+r2LMw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@jridgewell/trace-mapping": "^0.3.25",
        "jest-worker": "^27.4.5",
        "schema-utils": "^4.3.0",
        "serialize-javascript": "^6.0.2",
        "terser": "^5.31.1"
      },
      "engines": {
        "node": ">= 10.13.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/webpack"
      },
      "peerDependencies": {
        "webpack": "^5.1.0"
      },
      "peerDependenciesMeta": {
        "@swc/core": {
          "optional": true
        },
        "esbuild": {
          "optional": true
        },
        "uglify-js": {
          "optional": true
        }
      }
    },
    "node_modules/terser/node_modules/commander": {
      "version": "2.20.3",
      "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
      "integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/text-decoder": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/text-decoder/-/text-decoder-1.2.3.tgz",
      "integrity": "sha512-3/o9z3X0X0fTupwsYvR03pJ/DjWuqqrfwBgTQzdWDiQSm9KitAyz/9WqsT2JQW7KV2m+bC2ol/zqpW37NHxLaA==",
      "license": "Apache-2.0",
      "dependencies": {
        "b4a": "^1.6.4"
      }
    },
    "node_modules/text-hex": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/text-hex/-/text-hex-1.0.0.tgz",
      "integrity": "sha512-uuVGNWzgJ4yhRaNSiubPY7OjISw4sw4E5Uv0wbjp+OzcbmVU/rsT8ujgcXJhn9ypzsgr5vlzpPqP+MBBKcGvbg==",
      "license": "MIT"
    },
    "node_modules/through": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",
      "integrity": "sha512-w89qg7PI8wAdvX60bMDP+bFoD5Dvhm9oLheFp5O4a2QF0cSBGsBX4qZmadPMvVqlLJBBci+WqGGOAPvcDeNSVg==",
      "license": "MIT"
    },
    "node_modules/timed-out": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/timed-out/-/timed-out-4.0.1.tgz",
      "integrity": "sha512-G7r3AhovYtr5YKOWQkta8RKAPb+J9IsO4uVmzjl8AZwfhs8UcUwTiD6gcJYSgOtzyjvQKrKYn41syHbUWMkafA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/timm": {
      "version": "1.7.1",
      "resolved": "https://registry.npmjs.org/timm/-/timm-1.7.1.tgz",
      "integrity": "sha512-IjZc9KIotudix8bMaBW6QvMuq64BrJWFs1+4V0lXwWGQZwH+LnX87doAYhem4caOEusRP9/g6jVDQmZ8XOk1nw=="
    },
    "node_modules/tinycolor2": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/tinycolor2/-/tinycolor2-1.6.0.tgz",
      "integrity": "sha512-XPaBkWQJdsf3pLKJV9p4qN/S+fm2Oj8AIPo1BTUhg5oxkvm9+SVEGFdhyOz7tTdUTfvxMiAs4sp6/eZO2Ew+pw=="
    },
    "node_modules/tmp": {
      "version": "0.0.33",
      "resolved": "https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz",
      "integrity": "sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==",
      "license": "MIT",
      "dependencies": {
        "os-tmpdir": "~1.0.2"
      },
      "engines": {
        "node": ">=0.6.0"
      }
    },
    "node_modules/to-readable-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/to-readable-stream/-/to-readable-stream-1.0.0.tgz",
      "integrity": "sha512-Iq25XBt6zD5npPhlLVXGFN3/gyR2/qODcKNNyTMd4vbm39HUaOiAM4PMq0eMVC/Tkxz+Zjdsc55g9yyz+Yq00Q==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "license": "MIT",
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/token-types": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/token-types/-/token-types-5.0.1.tgz",
      "integrity": "sha512-Y2fmSnZjQdDb9W4w4r1tswlMHylzWIeOKpx0aZH9BgGtACHhrk3OkT52AzwcuqTRBZtvvnTjDBh8eynMulu8Vg==",
      "license": "MIT",
      "dependencies": {
        "@tokenizer/token": "^0.3.0",
        "ieee754": "^1.2.1"
      },
      "engines": {
        "node": ">=14.16"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/Borewit"
      }
    },
    "node_modules/tough-cookie": {
      "version": "4.1.4",
      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-4.1.4.tgz",
      "integrity": "sha512-Loo5UUvLD9ScZ6jh8beX1T6sO1w2/MpCRpEP7V280GKMVUQ0Jzar2U3UJPsrdbziLEMMhu3Ujnq//rhiFuIeag==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "psl": "^1.1.33",
        "punycode": "^2.1.1",
        "universalify": "^0.2.0",
        "url-parse": "^1.5.3"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/tough-cookie/node_modules/universalify": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.2.0.tgz",
      "integrity": "sha512-CJ1QgKmNg3CwvAv/kOFmtnEN05f0D/cn9QntgNOQlQF9dgvVTHj3t+8JPdjqawCHk7V/KA+fbUqzZ9XWhcqPUg==",
      "license": "MIT",
      "engines": {
        "node": ">= 4.0.0"
      }
    },
    "node_modules/tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==",
      "license": "MIT"
    },
    "node_modules/traverse": {
      "version": "0.3.9",
      "resolved": "https://registry.npmjs.org/traverse/-/traverse-0.3.9.tgz",
      "integrity": "sha512-iawgk0hLP3SxGKDfnDJf8wTz4p2qImnyihM5Hh/sGvQ3K37dPi/w8sRhdNIxYA1TwFwc5mDhIJq+O0RsvXBKdQ==",
      "license": "MIT/X11",
      "optional": true,
      "engines": {
        "node": "*"
      }
    },
    "node_modules/trim-newlines": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/trim-newlines/-/trim-newlines-3.0.1.tgz",
      "integrity": "sha512-c1PTsA3tYrIsLGkJkzHF+w9F2EyxfXGo4UyJc4pFL++FMjnq0HJS69T3M7d//gKrFKwy429bouPescbjecU+Zw==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/triple-beam": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/triple-beam/-/triple-beam-1.4.1.tgz",
      "integrity": "sha512-aZbgViZrg1QNcG+LULa7nhZpJTZSLm/mXnHXnbAbjmN5aSa0y7V+wvv6+4WaBtpISJzThKy+PIPxc1Nq1EJ9mg==",
      "license": "MIT",
      "engines": {
        "node": ">= 14.0.0"
      }
    },
    "node_modules/ts-loader": {
      "version": "9.5.2",
      "resolved": "https://registry.npmjs.org/ts-loader/-/ts-loader-9.5.2.tgz",
      "integrity": "sha512-Qo4piXvOTWcMGIgRiuFa6nHNm+54HbYaZCKqc9eeZCLRy3XqafQgwX2F7mofrbJG3g7EEb+lkiR+z2Lic2s3Zw==",
      "license": "MIT",
      "dependencies": {
        "chalk": "^4.1.0",
        "enhanced-resolve": "^5.0.0",
        "micromatch": "^4.0.0",
        "semver": "^7.3.4",
        "source-map": "^0.7.4"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "peerDependencies": {
        "typescript": "*",
        "webpack": "^5.0.0"
      }
    },
    "node_modules/ts-loader/node_modules/source-map": {
      "version": "0.7.4",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.7.4.tgz",
      "integrity": "sha512-l3BikUxvPOcn5E74dZiq5BGsTb5yEwhaTSzccU6t4sDOH8NWJCstKO5QT2CvtFoK6F0saL7p9xHAqHOlCPJygA==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/ts-morph": {
      "version": "12.2.0",
      "resolved": "https://registry.npmjs.org/ts-morph/-/ts-morph-12.2.0.tgz",
      "integrity": "sha512-WHXLtFDcIRwoqaiu0elAoZ/AmI+SwwDafnPKjgJmdwJ2gRVO0jMKBt88rV2liT/c6MTsXyuWbGFiHe9MRddWJw==",
      "license": "MIT",
      "dependencies": {
        "@ts-morph/common": "~0.11.1",
        "code-block-writer": "^10.1.1"
      }
    },
    "node_modules/tslib": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
      "license": "0BSD"
    },
    "node_modules/tsscmp": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/tsscmp/-/tsscmp-1.0.6.tgz",
      "integrity": "sha512-LxhtAkPDTkVCMQjt2h6eBVY28KCjikZqZfMcC15YBeNjkgUpdCfBu5HoiOTDu86v6smE8yOjyEktJ8hlbANHQA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.6.x"
      }
    },
    "node_modules/tunnel-agent": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
      "integrity": "sha512-McnNiV1l8RYeY8tBgEpuodCC1mLUdbSN+CYBL7kJsJNInOP8UjDDEwdk6Mw60vdLLrr5NHKZhMAOSrR2NZuQ+w==",
      "license": "Apache-2.0",
      "dependencies": {
        "safe-buffer": "^5.0.1"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/type-fest": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-1.4.0.tgz",
      "integrity": "sha512-yGSza74xk0UG8k+pLh5oeoYirvIiWo5t0/o3zHHAO2tRDiZcxWP7fywNlXhqb6/r6sWvwi+RsyQMWhVLe4BVuA==",
      "license": "(MIT OR CC0-1.0)",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/type-is": {
      "version": "1.6.18",
      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
      "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
      "license": "MIT",
      "dependencies": {
        "media-typer": "0.3.0",
        "mime-types": "~2.1.24"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/typed-array-buffer": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/typed-array-buffer/-/typed-array-buffer-1.0.3.tgz",
      "integrity": "sha512-nAYYwfY3qnzX30IkA6AQZjVbtK6duGontcQm1WSG1MD94YLqK0515GNApXkoxKOWMusVssAHWLh9SeaoefYFGw==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-typed-array": "^1.1.14"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/typed-array-byte-length": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/typed-array-byte-length/-/typed-array-byte-length-1.0.3.tgz",
      "integrity": "sha512-BaXgOuIxz8n8pIq3e7Atg/7s+DpiYrxn4vdot3w9KbnBhcRQq6o3xemQdIfynqSeXeDrF32x+WvfzmOjPiY9lg==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "for-each": "^0.3.3",
        "gopd": "^1.2.0",
        "has-proto": "^1.2.0",
        "is-typed-array": "^1.1.14"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typed-array-byte-offset": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.4.tgz",
      "integrity": "sha512-bTlAFB/FBYMcuX81gbL4OcpH5PmlFHqlCCpAl8AlEzMz5k53oNDvN8p1PNOWLEmI2x4orp3raOFB51tv9X+MFQ==",
      "license": "MIT",
      "dependencies": {
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "for-each": "^0.3.3",
        "gopd": "^1.2.0",
        "has-proto": "^1.2.0",
        "is-typed-array": "^1.1.15",
        "reflect.getprototypeof": "^1.0.9"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typed-array-length": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.7.tgz",
      "integrity": "sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "for-each": "^0.3.3",
        "gopd": "^1.0.1",
        "is-typed-array": "^1.1.13",
        "possible-typed-array-names": "^1.0.0",
        "reflect.getprototypeof": "^1.0.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typed-query-selector": {
      "version": "2.12.0",
      "resolved": "https://registry.npmjs.org/typed-query-selector/-/typed-query-selector-2.12.0.tgz",
      "integrity": "sha512-SbklCd1F0EiZOyPiW192rrHZzZ5sBijB6xM+cpmrwDqObvdtunOHHIk9fCGsoK5JVIYXoyEp4iEdE3upFH3PAg==",
      "license": "MIT"
    },
    "node_modules/typedarray": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz",
      "integrity": "sha512-/aCDEGatGvZ2BIk+HmLf4ifCJFwvKFNb9/JeZPMulfgFracn9QFcAf5GO8B/mweUjSoblS5In0cWhqpfs/5PQA==",
      "license": "MIT"
    },
    "node_modules/typedarray-to-buffer": {
      "version": "3.1.5",
      "resolved": "https://registry.npmjs.org/typedarray-to-buffer/-/typedarray-to-buffer-3.1.5.tgz",
      "integrity": "sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q==",
      "license": "MIT",
      "dependencies": {
        "is-typedarray": "^1.0.0"
      }
    },
    "node_modules/typedarray.prototype.slice": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/typedarray.prototype.slice/-/typedarray.prototype.slice-1.0.5.tgz",
      "integrity": "sha512-q7QNVDGTdl702bVFiI5eY4l/HkgCM6at9KhcFbgUAzezHFbOVy4+0O/lCjsABEQwbZPravVfBIiBVGo89yzHFg==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.9",
        "es-errors": "^1.3.0",
        "get-proto": "^1.0.1",
        "math-intrinsics": "^1.1.0",
        "typed-array-buffer": "^1.0.3",
        "typed-array-byte-offset": "^1.0.4"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typescript": {
      "version": "3.9.10",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-3.9.10.tgz",
      "integrity": "sha512-w6fIxVE/H1PkLKcCPsFqKE7Kv7QUwhU8qQY2MueZXWx5cPZdwFupLgKK3vntcK98BtNHZtAF4LA/yl2a7k8R6Q==",
      "license": "Apache-2.0",
      "bin": {
        "tsc": "bin/tsc",
        "tsserver": "bin/tsserver"
      },
      "engines": {
        "node": ">=4.2.0"
      }
    },
    "node_modules/typical": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/typical/-/typical-5.2.0.tgz",
      "integrity": "sha512-dvdQgNDNJo+8B2uBQoqdb11eUCE1JQXhvjC/CZtgvZseVd5TYMXnq0+vuUemXbd/Se29cTaUuPX3YIc2xgbvIg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/uci": {
      "version": "0.3.4",
      "resolved": "https://registry.npmjs.org/uci/-/uci-0.3.4.tgz",
      "integrity": "sha512-wEKYSF4/XZeN8cBHrrjF2LMOq3sj24i/ipmCU93Q3x7jZ1WhvYMo/6lavnb4UZkrJOXVfC7SI/59oyQou+A+Yw==",
      "dependencies": {
        "is-running": "1.0.x",
        "q": "0.9.x",
        "string": "1.7.x"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/uint8array-extras": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/uint8array-extras/-/uint8array-extras-1.4.0.tgz",
      "integrity": "sha512-ZPtzy0hu4cZjv3z5NW9gfKnNLjoz4y6uv4HlelAjDK7sY/xOkKZv9xK/WQpcsBB3jEybChz9DPC2U/+cusjJVQ==",
      "license": "MIT",
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/unbox-primitive": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.1.0.tgz",
      "integrity": "sha512-nWJ91DjeOkej/TA8pXQ3myruKpKEYgqvpw9lz4OPHj/NWFNluYrjbz9j01CJ8yKQd2g4jFoOkINCTW2I5LEEyw==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-bigints": "^1.0.2",
        "has-symbols": "^1.1.0",
        "which-boxed-primitive": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/unbzip2-stream": {
      "version": "1.4.3",
      "resolved": "https://registry.npmjs.org/unbzip2-stream/-/unbzip2-stream-1.4.3.tgz",
      "integrity": "sha512-mlExGW4w71ebDJviH16lQLtZS32VKqsSfk80GCfUlwT/4/hNRFsoscrF/c++9xinkMzECL1uL9DDwXqFWkruPg==",
      "license": "MIT",
      "dependencies": {
        "buffer": "^5.2.1",
        "through": "^2.3.8"
      }
    },
    "node_modules/undici-types": {
      "version": "7.8.0",
      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-7.8.0.tgz",
      "integrity": "sha512-9UJ2xGDvQ43tYyVMpuHlsgApydB8ZKfVYTsLDhXkFL/6gfkp+U8xTGdh8pMJv1SpZna0zxG1DwsKZsreLbXBxw==",
      "license": "MIT"
    },
    "node_modules/unique-string": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unique-string/-/unique-string-2.0.0.tgz",
      "integrity": "sha512-uNaeirEPvpZWSgzwsPGtU2zVSTrn/8L5q/IexZmH0eH6SA73CmAA5U4GwORTxQAZs95TAXLNqeLoPPNO5gZfWg==",
      "license": "MIT",
      "dependencies": {
        "crypto-random-string": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/universalify": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.1.tgz",
      "integrity": "sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==",
      "license": "MIT",
      "engines": {
        "node": ">= 10.0.0"
      }
    },
    "node_modules/unix-crypt-td-js": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/unix-crypt-td-js/-/unix-crypt-td-js-1.1.4.tgz",
      "integrity": "sha512-8rMeVYWSIyccIJscb9NdCfZKSRBKYTeVnwmiRYT2ulE3qd1RaDQ0xQDP+rI3ccIWbhu/zuo5cgN8z73belNZgw==",
      "license": "BSD-3-Clause"
    },
    "node_modules/unix-dgram": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/unix-dgram/-/unix-dgram-2.0.6.tgz",
      "integrity": "sha512-AURroAsb73BZ6CdAyMrTk/hYKNj3DuYYEuOaB8bYMOHGKupRNScw90Q5C71tWJc3uE7dIeXRyuwN0xLLq3vDTg==",
      "hasInstallScript": true,
      "license": "ISC",
      "optional": true,
      "dependencies": {
        "bindings": "^1.5.0",
        "nan": "^2.16.0"
      },
      "engines": {
        "node": ">=0.10.48"
      }
    },
    "node_modules/unpipe": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
      "integrity": "sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/unzipper": {
      "version": "0.10.14",
      "resolved": "https://registry.npmjs.org/unzipper/-/unzipper-0.10.14.tgz",
      "integrity": "sha512-ti4wZj+0bQTiX2KmKWuwj7lhV+2n//uXEotUmGuQqrbVZSEGFMbI68+c6JCQ8aAmUWYvtHEz2A8K6wXvueR/6g==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "big-integer": "^1.6.17",
        "binary": "~0.3.0",
        "bluebird": "~3.4.1",
        "buffer-indexof-polyfill": "~1.0.0",
        "duplexer2": "~0.1.4",
        "fstream": "^1.0.12",
        "graceful-fs": "^4.2.2",
        "listenercount": "~1.0.1",
        "readable-stream": "~2.3.6",
        "setimmediate": "~1.0.4"
      }
    },
    "node_modules/unzipper/node_modules/readable-stream": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.8.tgz",
      "integrity": "sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "core-util-is": "~1.0.0",
        "inherits": "~2.0.3",
        "isarray": "~1.0.0",
        "process-nextick-args": "~2.0.0",
        "safe-buffer": "~5.1.1",
        "string_decoder": "~1.1.1",
        "util-deprecate": "~1.0.1"
      }
    },
    "node_modules/unzipper/node_modules/safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/unzipper/node_modules/string_decoder": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "safe-buffer": "~5.1.0"
      }
    },
    "node_modules/update-browserslist-db": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
      "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "escalade": "^3.2.0",
        "picocolors": "^1.1.1"
      },
      "bin": {
        "update-browserslist-db": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/update-notifier": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/update-notifier/-/update-notifier-5.1.0.tgz",
      "integrity": "sha512-ItnICHbeMh9GqUy31hFPrD1kcuZ3rpxDZbf4KUDavXwS0bW5m7SLbDQpGX3UYr072cbrF5hFUs3r5tUsPwjfHw==",
      "license": "BSD-2-Clause",
      "dependencies": {
        "boxen": "^5.0.0",
        "chalk": "^4.1.0",
        "configstore": "^5.0.1",
        "has-yarn": "^2.1.0",
        "import-lazy": "^2.1.0",
        "is-ci": "^2.0.0",
        "is-installed-globally": "^0.4.0",
        "is-npm": "^5.0.0",
        "is-yarn-global": "^0.3.0",
        "latest-version": "^5.1.0",
        "pupa": "^2.1.1",
        "semver": "^7.3.4",
        "semver-diff": "^3.1.1",
        "xdg-basedir": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/yeoman/update-notifier?sponsor=1"
      }
    },
    "node_modules/upper-case": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/upper-case/-/upper-case-2.0.2.tgz",
      "integrity": "sha512-KgdgDGJt2TpuwBUIjgG6lzw2GWFRCW9Qkfkiv0DxqHHLYJHmtmdUIKcZd8rHgFSjopVTlw6ggzCm1b8MFQwikg==",
      "license": "MIT",
      "dependencies": {
        "tslib": "^2.0.3"
      }
    },
    "node_modules/upper-case-first": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/upper-case-first/-/upper-case-first-2.0.2.tgz",
      "integrity": "sha512-514ppYHBaKwfJRK/pNC6c/OxfGa0obSnAl106u97Ed0I625Nin96KAjttZF6ZL3e1XLtphxnqrOi9iWgm+u+bg==",
      "license": "MIT",
      "dependencies": {
        "tslib": "^2.0.3"
      }
    },
    "node_modules/upper-case-first/node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/upper-case/node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/url-parse": {
      "version": "1.5.10",
      "resolved": "https://registry.npmjs.org/url-parse/-/url-parse-1.5.10.tgz",
      "integrity": "sha512-WypcfiRhfeUP9vvF0j6rw0J3hrWrw6iZv3+22h6iRMJ/8z1Tj6XfLP4DsUix5MhMPnXpiHDoKyoZ/bdCkwBCiQ==",
      "license": "MIT",
      "dependencies": {
        "querystringify": "^2.1.1",
        "requires-port": "^1.0.0"
      }
    },
    "node_modules/url-parse-lax": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/url-parse-lax/-/url-parse-lax-3.0.0.tgz",
      "integrity": "sha512-NjFKA0DidqPa5ciFcSrXnAltTtzz84ogy+NebPvfEgAck0+TNg4UJ4IN+fB7zRZfbgUf0syOo9MDxFkDSMuFaQ==",
      "license": "MIT",
      "dependencies": {
        "prepend-http": "^2.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/url-to-options": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/url-to-options/-/url-to-options-1.0.1.tgz",
      "integrity": "sha512-0kQLIzG4fdk/G5NONku64rSH/x32NOA39LVQqlK8Le6lvTF6GGRJpqaQFGgU+CLwySIqBSMdwYM0sYcW9f6P4A==",
      "license": "MIT",
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/utif": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/utif/-/utif-2.0.1.tgz",
      "integrity": "sha512-Z/S1fNKCicQTf375lIP9G8Sa1H/phcysstNrrSdZKj1f9g58J4NMgb5IgiEZN9/nLMPDwF0W7hdOe9Qq2IYoLg==",
      "dependencies": {
        "pako": "^1.0.5"
      }
    },
    "node_modules/util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
      "license": "MIT"
    },
    "node_modules/utils-merge": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
      "integrity": "sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/uuid": {
      "version": "9.0.1",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-9.0.1.tgz",
      "integrity": "sha512-b+1eJOlsR9K8HJpow9Ok3fiWOWSIcIzXodvv0rQjVoOVNpWMpxf1wZNpt4y9h10odCNrqnYp1OBzRktckBe3sA==",
      "funding": [
        "https://github.com/sponsors/broofa",
        "https://github.com/sponsors/ctavan"
      ],
      "license": "MIT",
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/uuid-apikey": {
      "version": "1.5.3",
      "resolved": "https://registry.npmjs.org/uuid-apikey/-/uuid-apikey-1.5.3.tgz",
      "integrity": "sha512-v28vGJ1hRDzqLm6ufZ7b098Kmk159PInIHYWXfB47r3xOACZ5nRIAWe9VxFjvSW0MwckQYAnS1ucWUAXGKo95w==",
      "license": "MIT",
      "dependencies": {
        "colors": "^1.4.0",
        "commander": "^8.0.0",
        "encode32": "^1.1.0",
        "uuid": "^8.3.1"
      },
      "bin": {
        "apiKeyTool": "bin/apiKeyTool.js"
      }
    },
    "node_modules/uuid-apikey/node_modules/uuid": {
      "version": "8.3.2",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz",
      "integrity": "sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==",
      "license": "MIT",
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/validate-npm-package-license": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz",
      "integrity": "sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==",
      "license": "Apache-2.0",
      "dependencies": {
        "spdx-correct": "^3.0.0",
        "spdx-expression-parse": "^3.0.0"
      }
    },
    "node_modules/vary": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
      "integrity": "sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/watchpack": {
      "version": "2.4.4",
      "resolved": "https://registry.npmjs.org/watchpack/-/watchpack-2.4.4.tgz",
      "integrity": "sha512-c5EGNOiyxxV5qmTtAB7rbiXxi1ooX1pQKMLX/MIabJjRA0SJBQOjKF+KSVfHkr9U1cADPon0mRiVe/riyaiDUA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "glob-to-regexp": "^0.4.1",
        "graceful-fs": "^4.1.2"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==",
      "license": "BSD-2-Clause"
    },
    "node_modules/webpack": {
      "version": "5.99.9",
      "resolved": "https://registry.npmjs.org/webpack/-/webpack-5.99.9.tgz",
      "integrity": "sha512-brOPwM3JnmOa+7kd3NsmOUOwbDAj8FT9xDsG3IW0MgbN9yZV7Oi/s/+MNQ/EcSMqw7qfoRyXPoeEWT8zLVdVGg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@types/eslint-scope": "^3.7.7",
        "@types/estree": "^1.0.6",
        "@types/json-schema": "^7.0.15",
        "@webassemblyjs/ast": "^1.14.1",
        "@webassemblyjs/wasm-edit": "^1.14.1",
        "@webassemblyjs/wasm-parser": "^1.14.1",
        "acorn": "^8.14.0",
        "browserslist": "^4.24.0",
        "chrome-trace-event": "^1.0.2",
        "enhanced-resolve": "^5.17.1",
        "es-module-lexer": "^1.2.1",
        "eslint-scope": "5.1.1",
        "events": "^3.2.0",
        "glob-to-regexp": "^0.4.1",
        "graceful-fs": "^4.2.11",
        "json-parse-even-better-errors": "^2.3.1",
        "loader-runner": "^4.2.0",
        "mime-types": "^2.1.27",
        "neo-async": "^2.6.2",
        "schema-utils": "^4.3.2",
        "tapable": "^2.1.1",
        "terser-webpack-plugin": "^5.3.11",
        "watchpack": "^2.4.1",
        "webpack-sources": "^3.2.3"
      },
      "bin": {
        "webpack": "bin/webpack.js"
      },
      "engines": {
        "node": ">=10.13.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/webpack"
      },
      "peerDependenciesMeta": {
        "webpack-cli": {
          "optional": true
        }
      }
    },
    "node_modules/webpack-sources": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/webpack-sources/-/webpack-sources-3.3.3.tgz",
      "integrity": "sha512-yd1RBzSGanHkitROoPFd6qsrxt+oFhg/129YzheDGqeustzX0vTZJZsSsQjVQC4yzBQ56K55XU8gaNCtIzOnTg==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/whatsapp-web.js": {
      "version": "1.31.0",
      "resolved": "https://registry.npmjs.org/whatsapp-web.js/-/whatsapp-web.js-1.31.0.tgz",
      "integrity": "sha512-oUfrgSx7s906flFmATA0Hqb8DJYv0tdB28KMQ7dWiua8NqcO1+8IFHE278YvSuFkBqRqH+fSfQrGmwh/4Mx/LQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@pedroslopez/moduleraid": "^5.0.2",
        "fluent-ffmpeg": "2.1.3",
        "mime": "^3.0.0",
        "node-fetch": "^2.6.9",
        "node-webpmux": "3.1.7",
        "puppeteer": "^18.2.1"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "optionalDependencies": {
        "archiver": "^5.3.1",
        "fs-extra": "^10.1.0",
        "unzipper": "^0.10.11"
      }
    },
    "node_modules/whatsapp-web.js/node_modules/agent-base": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz",
      "integrity": "sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==",
      "license": "MIT",
      "dependencies": {
        "debug": "4"
      },
      "engines": {
        "node": ">= 6.0.0"
      }
    },
    "node_modules/whatsapp-web.js/node_modules/debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/whatsapp-web.js/node_modules/devtools-protocol": {
      "version": "0.0.1045489",
      "resolved": "https://registry.npmjs.org/devtools-protocol/-/devtools-protocol-0.0.1045489.tgz",
      "integrity": "sha512-D+PTmWulkuQW4D1NTiCRCFxF7pQPn0hgp4YyX4wAQ6xYXKOadSWPR3ENGDQ47MW/Ewc9v2rpC/UEEGahgBYpSQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/whatsapp-web.js/node_modules/https-proxy-agent": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-5.0.1.tgz",
      "integrity": "sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==",
      "license": "MIT",
      "dependencies": {
        "agent-base": "6",
        "debug": "4"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/whatsapp-web.js/node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
      "license": "MIT"
    },
    "node_modules/whatsapp-web.js/node_modules/puppeteer": {
      "version": "18.2.1",
      "resolved": "https://registry.npmjs.org/puppeteer/-/puppeteer-18.2.1.tgz",
      "integrity": "sha512-7+UhmYa7wxPh2oMRwA++k8UGVDxh3YdWFB52r9C3tM81T6BU7cuusUSxImz0GEYSOYUKk/YzIhkQ6+vc0gHbxQ==",
      "deprecated": "< 22.8.2 is no longer supported",
      "hasInstallScript": true,
      "license": "Apache-2.0",
      "dependencies": {
        "https-proxy-agent": "5.0.1",
        "progress": "2.0.3",
        "proxy-from-env": "1.1.0",
        "puppeteer-core": "18.2.1"
      },
      "engines": {
        "node": ">=14.1.0"
      }
    },
    "node_modules/whatsapp-web.js/node_modules/puppeteer-core": {
      "version": "18.2.1",
      "resolved": "https://registry.npmjs.org/puppeteer-core/-/puppeteer-core-18.2.1.tgz",
      "integrity": "sha512-MRtTAZfQTluz3U2oU/X2VqVWPcR1+94nbA2V6ZrSZRVEwLqZ8eclZ551qGFQD/vD2PYqHJwWOW/fpC721uznVw==",
      "license": "Apache-2.0",
      "dependencies": {
        "cross-fetch": "3.1.5",
        "debug": "4.3.4",
        "devtools-protocol": "0.0.1045489",
        "extract-zip": "2.0.1",
        "https-proxy-agent": "5.0.1",
        "proxy-from-env": "1.1.0",
        "rimraf": "3.0.2",
        "tar-fs": "2.1.1",
        "unbzip2-stream": "1.4.3",
        "ws": "8.9.0"
      },
      "engines": {
        "node": ">=14.1.0"
      }
    },
    "node_modules/whatsapp-web.js/node_modules/tar-fs": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/tar-fs/-/tar-fs-2.1.1.tgz",
      "integrity": "sha512-V0r2Y9scmbDRLCNex/+hYzvp/zyYjvFbHPNgVTKfQvVrb6guiE/fxP+XblDNR011utopbkex2nM4dHNV6GDsng==",
      "license": "MIT",
      "dependencies": {
        "chownr": "^1.1.1",
        "mkdirp-classic": "^0.5.2",
        "pump": "^3.0.0",
        "tar-stream": "^2.1.4"
      }
    },
    "node_modules/whatsapp-web.js/node_modules/ws": {
      "version": "8.9.0",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.9.0.tgz",
      "integrity": "sha512-Ja7nszREasGaYUYCI2k4lCKIRTt+y7XuqVoHR44YpI49TtryyqbqvDMn5eqfW7e6HzTukDRIsXqzVHScqRcafg==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": "^5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "license": "MIT",
      "dependencies": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "node_modules/which": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/which/-/which-1.3.1.tgz",
      "integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==",
      "license": "ISC",
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "which": "bin/which"
      }
    },
    "node_modules/which-boxed-primitive": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.1.1.tgz",
      "integrity": "sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==",
      "license": "MIT",
      "dependencies": {
        "is-bigint": "^1.1.0",
        "is-boolean-object": "^1.2.1",
        "is-number-object": "^1.1.1",
        "is-string": "^1.1.1",
        "is-symbol": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-builtin-type": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/which-builtin-type/-/which-builtin-type-1.2.1.tgz",
      "integrity": "sha512-6iBczoX+kDQ7a3+YJBnh3T+KZRxM/iYNPXicqk66/Qfm1b93iu+yOImkg0zHbj5LNOcNv1TEADiZ0xa34B4q6Q==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "function.prototype.name": "^1.1.6",
        "has-tostringtag": "^1.0.2",
        "is-async-function": "^2.0.0",
        "is-date-object": "^1.1.0",
        "is-finalizationregistry": "^1.1.0",
        "is-generator-function": "^1.0.10",
        "is-regex": "^1.2.1",
        "is-weakref": "^1.0.2",
        "isarray": "^2.0.5",
        "which-boxed-primitive": "^1.1.0",
        "which-collection": "^1.0.2",
        "which-typed-array": "^1.1.16"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-builtin-type/node_modules/isarray": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz",
      "integrity": "sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==",
      "license": "MIT"
    },
    "node_modules/which-collection": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/which-collection/-/which-collection-1.0.2.tgz",
      "integrity": "sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==",
      "license": "MIT",
      "dependencies": {
        "is-map": "^2.0.3",
        "is-set": "^2.0.3",
        "is-weakmap": "^2.0.2",
        "is-weakset": "^2.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-typed-array": {
      "version": "1.1.19",
      "resolved": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.19.tgz",
      "integrity": "sha512-rEvr90Bck4WZt9HHFC4DJMsjvu7x+r6bImz0/BrbWb7A2djJ8hnZMrWnHo9F8ssv0OMErasDhftrfROTyqSDrw==",
      "license": "MIT",
      "dependencies": {
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "for-each": "^0.3.5",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/widest-line": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/widest-line/-/widest-line-3.1.0.tgz",
      "integrity": "sha512-NsmoXalsWVDMGupxZ5R08ka9flZjjiLvHVAWYOKtiKM8ujtZWr9cRffak+uSE48+Ob8ObalXpwyeUiyDD6QFgg==",
      "license": "MIT",
      "dependencies": {
        "string-width": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/window-size": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/window-size/-/window-size-1.1.1.tgz",
      "integrity": "sha512-5D/9vujkmVQ7pSmc0SCBmHXbkv6eaHwXEx65MywhmUMsI8sGqJ972APq1lotfcwMKPFLuCFfL8xGHLIp7jaBmA==",
      "license": "MIT",
      "dependencies": {
        "define-property": "^1.0.0",
        "is-number": "^3.0.0"
      },
      "bin": {
        "window-size": "cli.js"
      },
      "engines": {
        "node": ">= 0.10.0"
      }
    },
    "node_modules/window-size/node_modules/is-number": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
      "integrity": "sha512-4cboCqIpliH+mAvFNegjZQ4kgKc3ZUhQVr3HvWbSh5q3WH2v82ct+T2Y1hdU5Gdtorx/cLifQjqCbL7bpznLTg==",
      "license": "MIT",
      "dependencies": {
        "kind-of": "^3.0.2"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/window-size/node_modules/kind-of": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
      "integrity": "sha512-NOW9QQXMoZGg/oqnVNoNTTIFEIid1627WCffUBJEdMxYApq7mNE7CpzucIPc+ZQg25Phej7IJSmX3hO+oblOtQ==",
      "license": "MIT",
      "dependencies": {
        "is-buffer": "^1.1.5"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/windows-release": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/windows-release/-/windows-release-4.0.0.tgz",
      "integrity": "sha512-OxmV4wzDKB1x7AZaZgXMVsdJ1qER1ed83ZrTYd5Bwq2HfJVg3DJS8nqlAG4sMoJ7mu8cuRmLEYyU13BKwctRAg==",
      "license": "MIT",
      "dependencies": {
        "execa": "^4.0.2"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/winston": {
      "version": "3.17.0",
      "resolved": "https://registry.npmjs.org/winston/-/winston-3.17.0.tgz",
      "integrity": "sha512-DLiFIXYC5fMPxaRg832S6F5mJYvePtmO5G9v9IgUFPhXm9/GkXarH/TUrBAVzhTCzAj9anE/+GjrgXp/54nOgw==",
      "license": "MIT",
      "dependencies": {
        "@colors/colors": "^1.6.0",
        "@dabh/diagnostics": "^2.0.2",
        "async": "^3.2.3",
        "is-stream": "^2.0.0",
        "logform": "^2.7.0",
        "one-time": "^1.0.0",
        "readable-stream": "^3.4.0",
        "safe-stable-stringify": "^2.3.1",
        "stack-trace": "0.0.x",
        "triple-beam": "^1.3.0",
        "winston-transport": "^4.9.0"
      },
      "engines": {
        "node": ">= 12.0.0"
      }
    },
    "node_modules/winston-daily-rotate-file": {
      "version": "4.7.1",
      "resolved": "https://registry.npmjs.org/winston-daily-rotate-file/-/winston-daily-rotate-file-4.7.1.tgz",
      "integrity": "sha512-7LGPiYGBPNyGHLn9z33i96zx/bd71pjBn9tqQzO3I4Tayv94WPmBNwKC7CO1wPHdP9uvu+Md/1nr6VSH9h0iaA==",
      "license": "MIT",
      "dependencies": {
        "file-stream-rotator": "^0.6.1",
        "object-hash": "^2.0.1",
        "triple-beam": "^1.3.0",
        "winston-transport": "^4.4.0"
      },
      "engines": {
        "node": ">=8"
      },
      "peerDependencies": {
        "winston": "^3"
      }
    },
    "node_modules/winston-syslog": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/winston-syslog/-/winston-syslog-2.7.1.tgz",
      "integrity": "sha512-MrU5gSwXgEbHwz5wFhn1rZtSCbRcP1PEB8zU49tgsfjQ63EjIVAkQpXmMocdbTLnTJ2cW3gLW6gmoOOOhyJZgg==",
      "license": "MIT",
      "dependencies": {
        "glossy": "^0.1.7",
        "triple-beam": "^1.3.0",
        "winston-transport": "^4.5.0"
      },
      "engines": {
        "node": ">= 8"
      },
      "optionalDependencies": {
        "unix-dgram": "2.0.6"
      },
      "peerDependencies": {
        "winston": "^3.8.2"
      }
    },
    "node_modules/winston-transport": {
      "version": "4.9.0",
      "resolved": "https://registry.npmjs.org/winston-transport/-/winston-transport-4.9.0.tgz",
      "integrity": "sha512-8drMJ4rkgaPo1Me4zD/3WLfI/zPdA9o2IipKODunnGDcuqbHwjsbB79ylv04LCGGzU0xQ6vTznOMpQGaLhhm6A==",
      "license": "MIT",
      "dependencies": {
        "logform": "^2.7.0",
        "readable-stream": "^3.6.2",
        "triple-beam": "^1.3.0"
      },
      "engines": {
        "node": ">= 12.0.0"
      }
    },
    "node_modules/wordwrapjs": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/wordwrapjs/-/wordwrapjs-4.0.1.tgz",
      "integrity": "sha512-kKlNACbvHrkpIw6oPeYDSmdCTu2hdMHoyXLTcUKala++lx5Y+wjJ/e474Jqv5abnVmwxw08DiTuHmw69lJGksA==",
      "license": "MIT",
      "dependencies": {
        "reduce-flatten": "^2.0.0",
        "typical": "^5.2.0"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrap-ansi/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
      "license": "ISC"
    },
    "node_modules/write-file-atomic": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-3.0.3.tgz",
      "integrity": "sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==",
      "license": "ISC",
      "dependencies": {
        "imurmurhash": "^0.1.4",
        "is-typedarray": "^1.0.0",
        "signal-exit": "^3.0.2",
        "typedarray-to-buffer": "^3.1.5"
      }
    },
    "node_modules/ws": {
      "version": "8.18.3",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.18.3.tgz",
      "integrity": "sha512-PEIGCY5tSlUt50cqyMXfCzX+oOPqN0vuGqWzbcJ2xvnkzkq46oOpz7dQaTDBdfICb4N14+GARUDw2XV2N4tvzg==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/xdg-basedir": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/xdg-basedir/-/xdg-basedir-4.0.0.tgz",
      "integrity": "sha512-PSNhEJDejZYV7h50BohL09Er9VaIefr2LMAf3OEmpCkjOi34eYyQYAXUTjEQtZJTKcF0E2UKTh+osDLsgNim9Q==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/xhr": {
      "version": "2.6.0",
      "resolved": "https://registry.npmjs.org/xhr/-/xhr-2.6.0.tgz",
      "integrity": "sha512-/eCGLb5rxjx5e3mF1A7s+pLlR6CGyqWN91fv1JgER5mVWg1MZmlhBvy9kjcsOdRk8RrIujotWyJamfyrp+WIcA==",
      "dependencies": {
        "global": "~4.4.0",
        "is-function": "^1.0.1",
        "parse-headers": "^2.0.0",
        "xtend": "^4.0.0"
      }
    },
    "node_modules/xml-parse-from-string": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/xml-parse-from-string/-/xml-parse-from-string-1.0.1.tgz",
      "integrity": "sha512-ErcKwJTF54uRzzNMXq2X5sMIy88zJvfN2DmdoQvy7PAFJ+tPRU6ydWuOKNMyfmOjdyBQTFREi60s0Y0SyI0G0g=="
    },
    "node_modules/xml2js": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/xml2js/-/xml2js-0.5.0.tgz",
      "integrity": "sha512-drPFnkQJik/O+uPKpqSgr22mpuFHqKdbS835iAQrUC73L2F5WkboIRd63ai/2Yg6I1jzifPFKH2NTK+cfglkIA==",
      "dependencies": {
        "sax": ">=0.6.0",
        "xmlbuilder": "~11.0.0"
      },
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/xmlbuilder": {
      "version": "11.0.1",
      "resolved": "https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-11.0.1.tgz",
      "integrity": "sha512-fDlsI/kFEx7gLvbecc0/ohLG50fugQp8ryHzMTuW9vSa1GJ0XYWKnhsUx7oie3G98+r56aTQIUB4kht42R3JvA==",
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/xmlbuilder2": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/xmlbuilder2/-/xmlbuilder2-3.1.1.tgz",
      "integrity": "sha512-WCSfbfZnQDdLQLiMdGUQpMxxckeQ4oZNMNhLVkcekTu7xhD4tuUDyAPoY8CwXvBYE6LwBHd6QW2WZXlOWr1vCw==",
      "license": "MIT",
      "dependencies": {
        "@oozcitak/dom": "1.15.10",
        "@oozcitak/infra": "1.0.8",
        "@oozcitak/util": "8.3.8",
        "js-yaml": "3.14.1"
      },
      "engines": {
        "node": ">=12.0"
      }
    },
    "node_modules/xmlhttprequest-ssl": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/xmlhttprequest-ssl/-/xmlhttprequest-ssl-2.1.2.tgz",
      "integrity": "sha512-TEU+nJVUUnA4CYJFLvK5X9AOeH4KvDvhIfm0vV1GaQRtchnG0hgK5p8hw/xjv8cunWYCsiPCSDzObPyhEwq3KQ==",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/xtend": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
      "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.4"
      }
    },
    "node_modules/y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "license": "ISC",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/yallist": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
      "license": "ISC"
    },
    "node_modules/yaml": {
      "version": "1.10.2",
      "resolved": "https://registry.npmjs.org/yaml/-/yaml-1.10.2.tgz",
      "integrity": "sha512-r3vXyErRCYJ7wg28yvBY5VSoAF8ZvlcW9/BwUzEtUsjvX/DKs24dIkuwjtuprwJJHsbyUbLApepYTR1BN4uHrg==",
      "license": "ISC",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/yargs": {
      "version": "17.7.2",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz",
      "integrity": "sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==",
      "license": "MIT",
      "dependencies": {
        "cliui": "^8.0.1",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.3",
        "y18n": "^5.0.5",
        "yargs-parser": "^21.1.1"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/yargs-parser": {
      "version": "20.2.9",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.9.tgz",
      "integrity": "sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w==",
      "license": "ISC",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/yargs/node_modules/yargs-parser": {
      "version": "21.1.1",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/yauzl": {
      "version": "2.10.0",
      "resolved": "https://registry.npmjs.org/yauzl/-/yauzl-2.10.0.tgz",
      "integrity": "sha512-p4a9I6X6nu6IhoGmBqAcbJy1mlC4j27vEPZX9F4L4/vZT3Lyq1VkFHw/V/PUcB9Buo+DG3iHkT0x3Qya58zc3g==",
      "license": "MIT",
      "dependencies": {
        "buffer-crc32": "~0.2.3",
        "fd-slicer": "~1.1.0"
      }
    },
    "node_modules/yocto-queue": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/ytdl-core": {
      "version": "4.11.5",
      "resolved": "https://registry.npmjs.org/ytdl-core/-/ytdl-core-4.11.5.tgz",
      "integrity": "sha512-27LwsW4n4nyNviRCO1hmr8Wr5J1wLLMawHCQvH8Fk0hiRqrxuIu028WzbJetiYH28K8XDbeinYW4/wcHQD1EXA==",
      "license": "MIT",
      "dependencies": {
        "m3u8stream": "^0.8.6",
        "miniget": "^4.2.2",
        "sax": "^1.1.3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/ytsr": {
      "version": "3.8.4",
      "resolved": "https://registry.npmjs.org/ytsr/-/ytsr-3.8.4.tgz",
      "integrity": "sha512-rrJo59vDDf98mz/Cuw7Y2YiuTwSm3cs4XsXrP6yjYDXYup/aE0lRxY6XMKR3mGOHKwgLouZqFq8QRllVVVN88w==",
      "deprecated": "Package no longer supported. Contact Support at https://www.npmjs.com/support for more info.",
      "license": "MIT",
      "dependencies": {
        "miniget": "^4.2.2"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/zip-stream": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/zip-stream/-/zip-stream-4.1.1.tgz",
      "integrity": "sha512-9qv4rlDiopXg4E69k+vMHjNN63YFMe9sZMrdlvKnCjlCRWeCBswPPMPUfx+ipsAWq1LXHe70RcbaHdJJpS6hyQ==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "archiver-utils": "^3.0.4",
        "compress-commons": "^4.1.2",
        "readable-stream": "^3.6.0"
      },
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/zip-stream/node_modules/archiver-utils": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/archiver-utils/-/archiver-utils-3.0.4.tgz",
      "integrity": "sha512-KVgf4XQVrTjhyWmx6cte4RxonPLR9onExufI1jhvw/MQ4BB6IsZD5gT8Lq+u/+pRkWna/6JoHpiQioaqFP5Rzw==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "glob": "^7.2.3",
        "graceful-fs": "^4.2.0",
        "lazystream": "^1.0.0",
        "lodash.defaults": "^4.2.0",
        "lodash.difference": "^4.5.0",
        "lodash.flatten": "^4.4.0",
        "lodash.isplainobject": "^4.0.6",
        "lodash.union": "^4.6.0",
        "normalize-path": "^3.0.0",
        "readable-stream": "^3.6.0"
      },
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/zod": {
      "version": "3.23.8",
      "resolved": "https://registry.npmjs.org/zod/-/zod-3.23.8.tgz",
      "integrity": "sha512-XBx9AXhXktjUqnepgTiE5flcKIYWi/rme0Eaj+5Y0lftuGBq+jyRu/md4WnuxqgP1ubdpNCsYEYPxrzVHD8d6g==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/colinhacks"
      }
    }
  }
}
Concurso,bola 1,bola 2,bola 3,bola 4,bola 5,bola 6
2888,27,39,59,9,3,15
2887,50,14,57,30,29,53
2886,19,13,59,55,2,20
2885,56,25,10,28,36,37
2884,56,5,37,34,52,31
2883,56,57,60,43,40,1
2882,23,51,11,15,49,19
2881,11,16,35,39,13,34
2880,8,34,15,14,54,33
2879,29,52,11,56,47,20
2878,43,51,47,16,15,46
2877,3,57,54,5,15,37
2876,45,55,9,40,31,32
2875,15,38,49,6,40,31
2874,5,4,53,49,17,9
2873,27,52,56,4,5,17
2872,8,57,35,23,32,34
2871,4,38,19,48,43,55
2870,13,15,32,60,19,6
2869,2,53,13,41,10,40
2868,10,38,26,22,51,19
2867,15,24,9,60,25,5
2866,60,12,19,1,36,17
2865,30,47,25,51,39,2
2864,53,15,6,31,17,5
2863,5,56,34,47,23,32
2862,14,4,2,22,44,18
2861,27,2,46,53,21,51
2860,2,24,17,38,57,5
2859,15,51,20,7,8,17
2858,8,52,48,28,18,27
2857,2,41,28,38,18,50
2856,10,27,48,3,5,38
2855,12,51,31,55,24,16
2854,16,55,2,31,44,13
2853,48,23,4,18,53,56
2852,53,24,56,22,6,49
2851,6,43,17,37,5,54
2850,43,2,15,1,26,50
2849,19,31,13,29,25,43
2848,30,5,14,54,29,19
2847,35,22,53,56,5,3
2846,25,1,57,12,16,17
2845,40,31,56,52,10,54
2844,7,20,54,55,58,31
2843,59,40,43,37,1,39
2842,49,8,4,52,55,51
2841,5,12,36,34,48,4
2840,57,39,49,60,33,1
2839,27,46,30,40,37,47
2838,36,53,29,4,32,7
2837,34,35,42,50,3,14
2836,30,6,50,1,42,10
2835,43,36,54,24,9,27
2834,11,5,8,47,39,15
2833,36,56,1,13,16,3
2832,18,2,37,12,21,24
2831,32,9,38,55,48,2
2830,51,52,36,34,28,1
2829,46,38,13,56,22,51
2828,55,21,25,58,59,15
2827,13,27,59,1,45,11
2826,20,58,54,10,60,6
2825,50,2,38,59,54,58
2824,43,54,34,4,57,16
2823,15,60,21,57,7,37
2822,46,53,56,47,39,29
2821,30,44,14,45,22,33
2820,25,32,15,19,42,6
2819,43,39,12,50,46,11
2818,7,15,25,47,12,10
2817,55,43,60,30,24,46
2816,40,19,17,4,48,20
2815,5,20,38,28,53,50
2814,26,49,54,19,17,11
2813,21,58,38,32,51,10
2812,39,42,31,15,18,27
2811,37,39,45,27,36,8
2810,50,17,29,57,1,19
2809,4,39,2,34,28,15
2808,10,46,41,35,24,33
2807,8,55,25,52,56,49
2806,33,46,45,13,5,11
2805,58,24,1,55,47,6
2804,60,33,24,14,31,25
2803,43,20,57,59,32,1
2802,17,60,26,21,32,28
2801,27,25,46,56,48,33
2800,57,1,46,19,13,50
2799,1,45,60,40,38,31
2798,9,59,60,3,18,54
2797,25,3,52,45,1,15
2796,14,58,6,33,3,55
2795,13,16,55,43,46,33
2794,3,14,28,52,20,9
2793,7,59,37,57,9,25
2792,49,16,33,59,22,34
2791,37,3,25,11,2,43
2790,32,49,42,40,29,58
2789,19,3,17,55,20,18
2788,37,39,47,56,52,23
2787,10,50,36,34,23,8
2786,6,17,11,51,20,40
2785,50,48,57,20,27,59
2784,35,57,59,44,27,30
2783,30,7,39,38,54,43
2782,28,6,45,16,11,25
2781,35,31,55,50,10,45
2780,46,10,53,7,9,14
2779,44,54,51,19,14,32
2778,57,20,34,43,40,33
2777,52,42,38,2,13,21
2776,51,17,22,52,5,37
2775,1,51,14,44,4,26
2774,24,6,16,22,38,50
2773,23,19,34,38,32,57
2772,53,56,41,1,33,12
2771,50,33,7,13,14,38
2770,37,50,44,28,60,21
2769,16,35,10,60,46,49
2768,2,18,32,28,33,12
2767,42,14,21,59,50,47
2766,10,9,38,34,44,36
2765,39,12,47,8,43,34
2764,51,31,20,38,34,42
2763,16,49,19,44,43,15
2762,1,30,48,50,40,17
2761,3,57,44,49,22,34
2760,8,47,19,48,39,11
2759,10,3,48,40,59,38
2758,35,41,19,36,60,37
2757,21,51,54,37,1,40
2756,1,46,13,18,6,43
2755,58,7,17,33,41,13
2754,55,10,44,14,56,58
2753,46,55,6,31,52,26
2752,15,24,44,40,4,47
2751,42,18,53,13,52,4
2750,11,7,36,52,19,12
2749,27,38,43,8,44,25
2748,19,52,46,50,43,32
2747,28,14,36,45,24,17
2746,30,22,27,51,43,56
2745,7,11,2,52,57,5
2744,34,25,33,10,26,38
2743,27,37,25,53,13,30
2742,11,2,25,37,32,57
2741,42,33,1,35,39,56
2740,17,41,34,13,47,16
2739,53,25,19,45,47,37
2738,44,46,2,60,19,25
2737,30,20,37,34,16,45
2736,35,26,24,11,17,43
2735,47,53,59,46,5,33
2734,48,35,60,59,21,27
2733,20,14,56,39,21,44
2732,18,49,1,60,16,3
2731,49,12,58,32,4,45
2730,46,29,41,60,24,7
2729,47,54,20,41,27,53
2728,2,43,11,9,25,51
2727,51,39,4,32,57,48
2726,59,27,53,55,49,45
2725,47,33,32,38,2,10
2724,24,54,26,21,11,42
2723,6,12,28,60,19,50
2722,36,25,44,23,19,46
2721,48,9,11,46,10,25
2720,43,15,42,16,23,8
2719,42,25,48,27,16,30
2718,41,34,59,46,30,6
2717,36,6,50,34,22,44
2716,48,27,28,49,20,5
2715,25,19,53,7,50,46
2714,17,45,57,42,52,16
2713,58,9,23,35,25,26
2712,35,19,7,40,42,15
2711,36,55,14,38,60,46
2710,44,50,25,42,5,6
2709,22,12,23,47,24,53
2708,19,11,12,10,28,23
2707,39,9,11,54,7,57
2706,45,24,17,30,10,11
2705,35,2,47,22,27,16
2704,3,25,31,10,7,52
2703,56,3,35,11,38,7
2702,40,46,6,20,13,34
2701,6,18,47,31,32,15
2700,11,19,28,20,1,48
2699,31,23,49,54,9,58
2698,60,2,18,35,45,19
2697,25,42,13,11,10,27
2696,13,39,55,4,59,18
2695,40,33,34,17,15,32
2694,41,22,7,20,58,29
2693,50,29,44,11,46,45
2692,56,33,55,45,9,59
2691,15,28,40,37,57,13
2690,43,45,9,28,55,33
2689,16,48,52,47,9,20
2688,12,33,41,46,17,54
2687,2,30,34,4,24,50
2686,6,41,12,43,20,59
2685,51,46,9,31,47,16
2684,26,45,53,48,46,17
2683,3,57,27,1,47,23
2682,29,4,17,58,30,52
2681,47,20,30,42,53,10
2680,45,57,3,11,42,46
2679,26,7,38,51,18,20
2678,16,54,13,37,10,18
2677,3,54,7,34,42,32
2676,14,4,19,29,22,6
2675,34,45,31,26,42,1
2674,46,23,15,21,14,8
2673,35,45,52,4,27,56
2672,40,10,13,20,56,43
2671,53,43,19,16,58,57
2670,24,56,33,48,21,41
2669,7,4,35,16,46,54
2668,46,30,41,27,1,57
2667,4,46,21,51,8,1
2666,29,5,43,47,30,25
2665,3,39,21,22,14,37
2664,15,40,17,12,52,30
2663,27,7,56,11,41,59
2662,31,20,42,40,17,34
2661,35,38,30,41,56,6
2660,13,38,60,6,12,20
2659,36,55,60,53,11,46
2658,60,51,13,5,39,58
2657,7,53,33,36,32,27
2656,57,27,46,20,24,58
2655,30,31,49,23,56,10
2654,23,17,47,51,36,11
2653,43,48,60,14,41,32
2652,59,45,23,13,29,26
2651,23,59,36,6,35,37
2650,37,58,18,39,29,9
2649,46,32,11,56,6,26
2648,59,45,44,46,56,20
2647,54,33,9,50,39,43
2646,58,28,41,30,18,39
2645,34,59,22,51,42,8
2644,22,30,17,4,49,28
2643,10,29,56,2,59,31
2642,31,8,49,33,50,13
2641,39,9,45,24,50,34
2640,27,32,28,8,4,10
2639,49,22,48,8,11,2
2638,44,55,54,30,34,9
2637,32,34,10,1,59,2
2636,43,16,5,38,42,48
2635,37,29,6,58,56,11
2634,56,8,28,48,32,27
2633,33,45,2,54,25,23
2632,10,57,5,56,38,27
2631,50,53,14,36,26,39
2630,14,18,38,31,26,22
2629,48,40,35,41,11,32
2628,54,32,5,53,40,14
2627,57,31,58,43,13,25
2626,16,13,9,1,59,52
2625,10,35,9,55,58,44
2624,31,58,5,52,37,47
2623,59,35,10,15,20,37
2622,24,22,50,19,60,9
2621,14,47,9,16,42,6
2620,26,21,13,4,6,28
2619,41,5,50,39,44,36
2618,45,17,29,35,48,6
2617,44,42,36,3,14,43
2616,49,38,6,23,35,16
2615,41,23,59,22,7,5
2614,3,25,19,14,13,8
2613,46,40,26,14,42,52
2612,44,50,34,27,54,20
2611,25,18,4,49,21,12
2610,53,55,10,23,34,57
2609,21,35,27,60,3,32
2608,7,13,29,17,52,24
2607,57,25,11,60,7,51
2606,32,45,49,16,10,2
2605,5,54,35,46,11,26
2604,19,16,17,22,46,57
2603,3,56,29,13,52,7
2602,32,30,46,11,16,14
2601,40,8,34,3,44,55
2600,46,4,37,38,60,18
2599,43,28,34,23,60,47
2598,7,53,14,58,60,24
2597,58,56,54,26,14,34
2596,35,47,56,39,51,34
2595,52,13,1,39,50,34
2594,7,55,32,26,49,35
2593,14,17,10,32,25,39
2592,51,35,34,28,15,17
2591,30,28,23,11,21,10
2590,43,36,2,48,28,12
2589,36,1,16,32,15,25
2588,31,22,9,13,57,58
2587,5,22,11,37,10,23
2586,18,49,41,10,59,53
2585,26,43,59,36,34,14
2584,53,12,36,55,5,1
2583,27,59,2,30,20,52
2582,34,10,21,19,14,17
2581,17,14,39,60,32,36
2580,43,36,3,29,13,4
2579,10,26,44,5,35,38
2578,47,59,60,37,50,39
2577,31,44,22,12,50,18
2576,32,29,43,35,38,33
2575,46,4,53,14,12,41
2574,12,43,48,60,44,17
2573,37,6,49,26,32,35
2572,24,22,3,15,7,50
2571,18,51,38,33,9,41
2570,18,26,27,47,50,8
2569,6,7,28,31,25,52
2568,22,29,49,35,16,38
2567,33,10,60,58,11,19
2566,53,23,45,57,11,59
2565,54,13,25,39,9,46
2564,19,14,8,45,32,7
2563,5,50,30,14,9,38
2562,44,32,57,12,51,6
2561,22,44,56,51,37,19
2560,52,48,5,20,17,4
2559,12,32,35,20,9,30
2558,10,25,34,2,18,44
2557,13,3,27,25,16,33
2556,34,10,14,2,6,56
2555,45,58,3,20,52,53
2554,43,19,25,44,48,49
2553,58,54,15,55,13,53
2552,24,38,41,5,33,25
2551,25,43,46,48,1,29
2550,59,34,4,58,10,5
2549,30,10,33,1,6,35
2548,25,23,29,30,9,15
2547,37,10,38,25,31,57
2546,34,3,48,28,23,38
2545,57,36,32,39,20,23
2544,25,56,55,38,45,53
2543,46,5,53,2,27,30
2542,25,22,12,26,55,20
2541,47,45,28,59,10,57
2540,28,8,49,34,41,2
2539,59,36,23,1,33,32
2538,33,15,6,52,20,19
2537,24,26,48,37,12,31
2536,45,9,27,30,33,22
2535,24,56,1,3,51,37
2534,36,56,60,28,44,39
2533,53,20,17,37,45,18
2532,17,14,30,10,18,23
2531,18,56,1,5,49,55
2530,14,28,17,18,30,44
2529,5,57,56,59,32,3
2528,15,60,22,53,56,4
2527,48,56,19,38,29,8
2526,2,59,24,38,16,43
2525,51,47,21,26,13,4
2524,22,37,3,41,43,20
2523,37,45,1,27,10,36
2522,32,4,25,39,40,5
2521,59,23,28,55,33,38
2520,22,41,2,17,60,58
2519,20,8,3,36,57,38
2518,22,23,44,3,60,53
2517,6,1,22,16,5,39
2516,49,17,53,51,8,52
2515,54,3,41,12,45,19
2514,5,15,52,34,45,24
2513,50,21,13,46,35,19
2512,47,52,10,49,34,7
2511,49,39,4,15,41,10
2510,25,32,13,57,8,44
2509,50,8,37,59,39,60
2508,51,45,41,53,58,48
2507,4,34,6,35,12,53
2506,21,44,40,34,22,29
2505,43,26,5,51,3,19
2504,42,14,41,55,44,33
2503,45,43,14,16,38,3
2502,39,21,16,44,20,55
2501,58,32,11,27,59,40
2500,32,55,25,16,5,39
2499,38,11,56,59,47,19
2498,26,47,9,29,46,12
2497,14,5,48,52,46,23
2496,46,31,26,58,38,7
2495,33,41,8,12,30,14
2494,22,1,54,4,10,53
2493,44,4,56,9,37,43
2492,33,10,52,31,42,30
2491,53,48,29,43,38,22
2490,11,16,41,17,46,59
2489,13,10,41,25,42,3
2488,40,34,57,31,17,56
2487,54,42,48,36,23,58
2486,19,8,9,33,17,56
2485,60,12,38,47,5,32
2484,59,36,41,54,14,11
2483,54,49,34,38,40,20
2482,32,1,57,44,35,45
2481,1,37,36,21,8,27
2480,31,56,6,4,50,9
2479,21,10,35,20,17,15
2478,2,23,28,46,17,39
2477,20,49,33,37,50,38
2476,46,49,2,55,7,32
2475,60,45,1,44,58,40
2474,38,30,22,49,56,39
2473,55,15,28,60,42,18
2472,18,5,13,23,36,35
2471,30,8,23,29,55,36
2470,51,8,48,42,33,40
2469,5,55,38,30,28,52
2468,22,41,53,42,35,57
2467,1,10,45,19,35,34
2466,54,53,20,2,13,3
2465,29,54,53,8,3,23
2464,2,43,7,52,24,56
2463,11,31,16,42,51,37
2462,3,16,57,23,45,41
2461,37,32,21,11,16,8
2460,35,18,28,17,16,47
2459,33,49,15,59,24,53
2458,44,47,15,40,51,45
2457,50,49,19,47,10,46
2456,52,41,28,55,40,34
2455,59,53,38,21,50,56
2454,14,44,22,9,24,47
2453,44,24,10,34,14,15
2452,56,57,8,10,51,58
2451,13,51,26,60,31,46
2450,17,39,11,6,15,2
2449,14,49,52,31,20,21
2448,32,48,30,40,35,18
2447,52,13,19,42,49,29
2446,13,58,51,27,1,41
2445,25,32,47,11,37,56
2444,17,43,20,35,37,15
2443,31,1,12,13,5,17
2442,49,9,7,2,41,25
2441,42,9,41,54,46,47
2440,46,32,15,12,23,33
2439,47,38,2,34,51,8
2438,37,11,55,25,4,19
2437,41,19,55,1,46,48
2436,38,54,32,15,5,28
2435,32,30,36,33,22,5
2434,28,14,40,2,51,1
2433,8,53,9,57,32,52
2432,52,44,29,38,7,40
2431,11,36,26,25,8,22
2430,26,19,46,56,45,39
2429,60,11,56,37,53,55
2428,25,3,28,29,9,39
2427,56,3,19,25,37,44
2426,57,27,24,11,32,5
2425,46,38,31,10,54,49
2424,17,3,38,53,16,37
2423,51,18,48,60,38,16
2422,7,30,2,46,10,20
2421,32,48,35,57,2,3
2420,8,44,60,5,39,29
2419,10,53,43,48,35,50
2418,19,57,27,11,60,2
2417,3,11,27,46,7,10
2416,6,37,57,26,11,7
2415,29,12,60,26,35,10
2414,4,14,29,6,5,38
2413,48,37,22,3,40,41
2412,16,60,36,34,9,49
2411,7,26,43,44,34,29
2410,10,59,35,43,7,27
2409,58,39,49,2,52,29
2408,29,38,57,4,30,43
2407,17,43,31,13,55,54
2406,29,43,12,8,54,60
2405,21,38,59,53,49,48
2404,19,35,1,40,47,54
2403,32,12,14,34,33,10
2402,60,29,6,30,25,22
2401,8,38,13,33,11,48
2400,9,26,36,25,21,53
2399,52,42,35,27,51,44
2398,36,59,17,30,8,54
2397,6,14,48,46,20,39
2396,3,25,2,49,42,39
2395,44,11,4,45,57,12
2394,42,44,5,25,36,16
2393,32,28,38,51,27,26
2392,53,34,25,15,23,11
2391,5,8,13,27,50,36
2390,20,13,9,56,32,22
2389,39,30,16,51,37,40
2388,8,37,45,48,33,30
2387,38,26,30,8,31,48
2386,35,13,11,50,49,16
2385,32,12,43,37,24,60
2384,25,26,9,13,22,31
2383,41,16,40,20,15,13
2382,53,6,19,9,38,55
2381,47,41,32,7,23,42
2380,53,39,11,16,20,24
2379,26,32,56,2,8,46
2378,37,49,41,54,11,38
2377,35,5,44,18,43,29
2376,22,12,17,18,19,14
2375,58,6,46,53,44,2
2374,25,37,39,13,41,12
2373,44,26,23,49,60,24
2372,19,25,44,46,3,57
2371,30,48,36,4,39,15
2370,56,31,37,7,44,42
2369,60,9,19,4,17,37
2368,13,7,36,25,58,4
2367,29,5,23,34,53,60
2366,33,41,38,27,4,35
2365,44,50,17,28,37,1
2364,42,56,33,20,51,44
2363,34,6,58,39,14,24
2362,35,22,32,20,50,3
2361,46,21,35,29,14,22
2360,15,21,24,45,29,10
2359,39,42,43,51,31,32
2358,5,43,16,11,9,57
2357,28,34,51,19,40,30
2356,51,36,3,58,10,25
2355,31,7,30,41,56,50
2354,18,54,25,6,30,42
2353,19,3,34,53,48,41
2352,17,55,9,41,38,49
2351,35,49,19,22,47,41
2350,45,28,34,29,25,41
2349,54,25,5,10,49,32
2348,2,3,51,48,54,7
2347,17,58,9,60,30,8
2346,4,58,3,40,11,42
2345,16,22,7,55,19,28
2344,38,11,52,57,17,25
2343,56,49,31,4,45,42
2342,20,24,17,27,40,60
2341,9,46,4,32,31,42
2340,49,41,16,51,28,21
2339,4,48,59,29,47,18
2338,21,8,34,47,42,23
2337,2,51,49,9,34,55
2336,20,27,50,8,10,28
2335,18,42,49,47,9,23
2334,22,4,20,25,13,60
2333,41,53,55,9,16,31
2332,12,33,44,52,35,36
2331,53,16,11,57,13,36
2330,22,35,17,41,20,42
2329,42,28,45,14,12,55
2328,11,8,39,14,48,53
2327,54,45,30,57,37,58
2326,27,36,34,16,57,10
2325,33,37,60,34,46,52
2324,31,2,43,19,60,16
2323,35,27,39,20,50,59
2322,5,10,2,29,34,41
2321,41,43,25,28,14,46
2320,30,6,35,48,39,42
2319,17,25,6,35,49,40
2318,54,58,52,28,44,60
2317,35,48,30,33,3,8
2316,49,11,56,43,52,2
2315,10,17,1,26,30,53
2314,28,6,7,42,45,49
2313,45,3,58,26,20,49
2312,60,39,3,46,47,27
2311,60,9,35,43,5,3
2310,13,42,17,28,53,29
2309,33,60,11,29,9,30
2308,26,9,58,38,60,13
2307,38,53,46,55,33,16
2306,28,58,19,3,57,33
2305,57,55,38,7,16,22
2304,12,54,57,21,29,56
2303,17,50,48,20,3,7
2302,44,43,25,18,27,22
2301,18,36,47,52,35,17
2300,37,39,21,9,54,43
2299,3,40,19,60,2,44
2298,13,21,49,41,17,31
2297,20,22,41,59,35,40
2296,29,6,36,59,21,1
2295,28,6,41,26,35,13
2294,9,43,20,41,33,15
2293,1,48,42,10,2,37
2292,18,57,6,33,42,16
2291,37,31,26,12,36,49
2290,60,36,5,57,44,18
2289,6,34,37,38,45,9
2288,35,39,2,26,56,40
2287,29,4,2,41,6,56
2286,42,43,41,9,21,30
2285,12,10,33,7,42,1
2284,46,36,12,10,4,14
2283,24,4,37,43,59,60
2282,30,52,12,27,36,45
2281,35,40,14,55,50,27
2280,50,28,58,29,59,31
2279,28,12,20,5,27,14
2278,34,17,37,43,8,45
2277,23,10,53,60,22,37
2276,49,27,5,18,57,15
2275,25,50,2,53,4,36
2274,8,55,40,11,33,17
2273,58,15,20,16,38,40
2272,5,41,11,49,24,2
2271,6,10,41,52,27,28
2270,41,16,48,14,38,39
2269,55,14,23,29,11,1
2268,4,30,52,23,13,28
2267,48,49,53,20,32,33
2266,23,37,59,10,58,31
2265,50,20,46,23,14,39
2264,29,19,8,2,37,3
2263,43,49,57,33,9,24
2262,7,30,46,23,8,14
2261,23,26,51,27,29,7
2260,37,12,14,34,35,47
2259,54,56,58,20,27,41
2258,26,7,1,23,14,5
2257,18,30,21,31,34,51
2256,9,37,30,10,54,47
2255,20,15,57,49,39,41
2254,47,4,24,44,56,9
2253,32,39,55,33,52,31
2252,46,50,1,17,37,30
2251,58,22,26,15,54,5
2250,39,52,27,57,58,33
2249,4,49,9,31,47,53
2248,20,9,42,29,30,15
2247,42,53,47,1,44,48
2246,9,33,46,24,27,5
2245,33,11,14,34,15,18
2244,11,5,42,3,34,37
2243,14,38,28,18,35,54
2242,24,42,18,5,25,9
2241,56,18,26,13,1,40
2240,25,9,7,10,58,19
2239,27,39,7,31,46,45
2238,57,36,11,58,55,45
2237,60,27,28,20,53,11
2236,7,53,43,20,45,38
2235,14,55,35,30,18,57
2234,47,29,42,4,27,21
2233,45,35,6,41,4,32
2232,31,34,38,47,7,8
2231,4,13,53,40,25,57
2230,39,17,56,60,26,7
2229,6,41,40,29,58,11
2228,19,45,39,9,23,32
2227,9,6,27,32,12,57
2226,2,7,38,30,4,16
2225,1,37,47,44,46,32
2224,23,50,58,32,52,16
2223,49,26,2,56,40,42
2222,14,48,30,29,59,13
2221,23,34,45,57,5,56
2220,38,58,35,3,40,57
2219,57,59,45,8,28,36
2218,16,6,38,22,52,48
2217,16,32,36,30,14,10
2216,24,42,48,10,43,49
2215,21,23,43,1,19,33
2214,18,30,4,10,34,47
2213,7,5,10,60,32,46
2212,51,58,53,52,26,23
2211,27,44,36,54,41,40
2210,11,33,34,25,24,17
2209,32,22,47,28,33,25
2208,30,45,16,49,25,40
2207,43,11,6,55,53,10
2206,42,38,45,6,27,57
2205,21,42,12,57,37,28
2204,32,56,29,28,1,35
2203,34,46,57,50,17,49
2202,43,60,37,38,29,11
2201,13,49,3,41,53,23
2200,28,55,36,43,11,15
2199,38,23,30,44,35,15
2198,56,11,34,44,36,1
2197,29,11,3,35,44,57
2196,56,28,27,1,41,25
2195,24,32,38,53,46,14
2194,16,8,20,21,34,31
2193,8,7,42,27,29,22
2192,57,53,7,59,16,37
2191,33,46,26,4,53,8
2190,53,35,25,9,5,20
2189,33,29,11,4,16,22
2188,60,51,21,28,2,17
2187,16,21,50,10,46,11
2186,27,19,12,41,18,46
2185,19,42,18,47,22,9
2184,51,15,52,36,59,45
2183,51,13,43,30,34,26
2182,59,47,46,19,39,22
2181,8,1,19,48,36,33
2180,16,12,10,21,28,38
2179,24,2,35,54,50,13
2178,16,21,42,2,50,56
2177,14,9,48,11,31,51
2176,23,8,25,43,39,44
2175,55,53,7,32,43,25
2174,36,10,34,15,60,56
2173,9,48,44,42,2,50
2172,9,57,43,37,28,24
2171,19,12,13,36,55,44
2170,36,21,51,10,24,38
2169,45,7,34,59,51,54
2168,37,25,29,4,1,27
2167,37,45,38,43,54,27
2166,44,3,34,56,19,58
2165,56,49,54,43,5,37
2164,48,17,58,47,16,25
2163,45,20,24,36,18,8
2162,11,30,42,34,16,22
2161,24,10,8,44,9,42
2160,53,49,1,46,47,19
2159,53,35,38,14,45,26
2158,9,27,46,59,35,45
2157,34,48,31,39,33,35
2156,49,39,23,6,26,1
2155,37,44,2,27,6,47
2154,53,41,47,50,7,25
2153,13,28,31,8,33,32
2152,49,36,29,26,59,50
2151,36,38,2,29,14,18
2150,38,24,23,26,42,49
2149,21,48,46,23,44,37
2148,59,33,8,58,32,15
2147,49,42,17,19,37,41
2146,39,42,16,18,44,31
2145,6,59,28,8,51,53
2144,21,33,55,16,7,60
2143,12,58,35,51,2,57
2142,44,50,52,57,7,40
2141,10,19,11,37,41,17
2140,20,54,36,17,42,26
2139,58,29,23,41,14,57
2138,30,34,4,21,13,14
2137,2,1,49,11,12,34
2136,35,22,11,1,30,8
2135,23,48,59,28,40,9
2134,54,6,46,21,59,34
2133,26,20,19,51,52,57
2132,5,60,18,39,35,30
2131,28,18,20,6,2,3
2130,13,53,16,36,55,54
2129,60,46,12,6,32,31
2128,24,55,46,16,11,54
2127,7,46,28,30,44,1
2126,58,39,27,7,24,12
2125,44,1,31,53,46,58
2124,31,20,47,43,2,11
2123,47,59,14,56,50,15
2122,27,21,3,11,15,49
2121,37,8,17,29,10,40
2120,38,41,20,24,25,13
2119,42,49,26,31,19,21
2118,41,11,12,46,20,40
2117,28,43,4,29,52,30
2116,21,19,1,9,34,54
2115,19,40,35,44,27,4
2114,35,17,30,25,42,57
2113,11,21,46,14,25,50
2112,17,46,43,53,52,39
2111,54,41,1,46,58,44
2110,25,33,10,12,18,5
2109,4,16,44,49,12,34
2108,44,59,29,19,41,22
2107,50,44,60,38,56,8
2106,27,3,39,40,36,43
2105,16,46,13,11,24,31
2104,12,45,10,56,2,27
2103,13,40,50,46,3,44
2102,6,4,17,57,34,51
2101,58,56,18,8,2,37
2100,1,35,13,11,10,49
2099,30,15,5,58,20,27
2098,2,38,27,60,18,8
2097,51,28,24,49,9,45
2096,11,51,6,24,13,19
2095,49,29,56,43,35,16
2094,4,33,16,44,19,31
2093,54,34,52,8,14,27
2092,13,17,27,11,15,22
2091,12,11,10,59,38,37
2090,11,8,18,40,37,51
2089,38,48,5,49,10,32
2088,24,3,27,38,14,56
2087,19,18,53,34,2,23
2086,4,53,35,43,47,46
2085,25,49,12,21,38,37
2084,20,37,26,7,39,38
2083,56,33,1,19,18,60
2082,25,33,42,49,6,48
2081,40,42,13,18,35,41
2080,58,55,46,22,40,10
2079,55,37,58,14,2,1
2078,30,36,2,11,39,15
2077,37,13,16,26,39,35
2076,6,15,43,5,12,22
2075,7,9,23,33,57,59
2074,42,8,18,37,58,23
2073,55,12,15,30,52,18
2072,22,13,10,20,12,54
2071,35,46,34,60,24,33
2070,5,26,42,27,48,34
2069,40,3,48,17,34,35
2068,5,47,40,9,42,3
2067,59,2,11,32,26,13
2066,27,55,35,6,25,45
2065,4,11,43,20,30,37
2064,55,53,14,10,36,60
2063,10,19,29,24,6,25
2062,8,15,34,25,10,23
2061,33,45,44,40,36,54
2060,11,39,41,9,25,8
2059,5,4,36,56,40,44
2058,19,4,23,29,59,56
2057,37,38,20,13,10,54
2056,29,47,22,36,34,18
2055,53,43,46,25,35,6
2054,39,4,7,12,26,22
2053,12,27,40,37,22,55
2052,57,50,56,51,58,59
2051,37,5,44,1,53,6
2050,33,50,38,32,8,31
2049,19,10,27,31,51,53
2048,10,39,38,35,26,19
2047,18,19,44,54,1,29
2046,27,11,6,28,46,3
2045,27,46,15,25,50,45
2044,14,7,60,54,47,56
2043,53,58,21,38,57,56
2042,33,32,22,29,35,14
2041,10,12,54,42,22,25
2040,56,58,54,6,41,9
2039,28,22,6,31,44,12
2038,26,35,40,25,6,38
2037,60,30,14,45,23,16
2036,23,58,8,19,27,7
2035,52,35,49,30,38,36
2034,7,56,22,13,6,17
2033,40,10,18,33,38,43
2032,19,39,20,53,14,6
2031,23,39,18,55,50,37
2030,38,4,58,40,27,59
2029,15,37,18,33,40,6
2028,7,42,58,36,24,11
2027,11,15,39,37,29,44
2026,51,33,23,52,31,10
2025,52,56,4,24,46,55
2024,29,16,20,35,47,23
2023,23,56,8,7,1,6
2022,28,60,52,45,4,48
2021,32,37,40,60,7,14
2020,2,46,57,60,48,36
2019,41,46,54,59,23,52
2018,55,11,27,22,25,59
2017,56,10,11,2,38,24
2016,11,17,48,18,4,21
2015,18,58,32,39,27,17
2014,46,32,16,56,40,53
2013,6,36,53,30,56,23
2012,11,51,36,8,35,27
2011,28,35,58,54,2,32
2010,18,56,8,34,39,10
2009,1,48,50,44,37,46
2008,27,22,58,33,59,42
2007,41,14,54,4,39,58
2006,20,9,1,14,54,25
2005,22,19,33,11,53,34
2004,45,35,1,23,5,14
2003,40,50,43,28,51,34
2002,59,46,28,38,4,30
2001,22,20,52,60,42,36
2000,6,37,34,10,3,17
1999,42,38,49,15,50,37
1998,57,21,24,52,25,8
1997,14,7,35,1,31,46
1996,56,21,20,7,40,24
1995,14,37,39,26,35,29
1994,44,5,32,2,12,40
1993,50,57,48,17,6,33
1992,21,11,13,53,54,5
1991,19,34,44,36,20,28
1990,37,26,11,24,59,34
1989,40,58,30,32,15,22
1988,5,39,10,54,46,42
1987,10,58,14,45,31,34
1986,55,23,44,43,36,56
1985,9,36,29,28,34,55
1984,43,32,21,50,35,29
1983,14,22,6,5,10,36
1982,46,24,20,4,50,14
1981,15,6,39,19,37,53
1980,18,16,12,34,37,17
1979,38,23,45,32,29,22
1978,6,2,57,22,55,44
1977,28,3,32,34,37,16
1976,52,14,19,12,59,25
1975,8,24,47,26,11,57
1974,19,57,38,54,4,27
1973,17,16,60,12,52,1
1972,20,9,59,54,16,57
1971,54,10,52,41,44,4
1970,10,18,24,5,39,52
1969,30,59,20,32,8,48
1968,35,48,44,39,36,52
1967,32,39,13,54,30,46
1966,19,10,32,60,13,40
1965,28,26,55,38,48,35
1964,32,27,48,36,2,50
1963,34,60,5,4,7,42
1962,39,5,6,53,15,25
1961,50,30,25,17,32,26
1960,43,39,18,25,37,1
1959,56,43,21,8,27,35
1958,55,34,22,20,24,15
1957,23,47,29,2,14,22
1956,20,40,28,5,8,45
1955,15,41,45,33,36,27
1954,40,9,49,25,35,33
1953,45,29,42,9,43,26
1952,9,21,53,36,52,38
1951,55,14,16,21,33,19
1950,32,21,10,48,34,57
1949,30,1,14,56,22,6
1948,28,33,20,24,57,12
1947,52,59,55,40,8,33
1946,6,39,4,44,52,60
1945,8,54,21,10,45,4
1944,8,57,47,39,9,59
1943,43,11,39,9,30,12
1942,48,20,43,18,6,24
1941,38,1,9,48,49,24
1940,36,16,9,47,13,17
1939,39,29,24,52,7,45
1938,10,54,42,16,40,32
1937,10,29,24,43,6,55
1936,51,40,52,24,12,3
1935,24,17,10,1,3,23
1934,56,39,35,8,23,59
1933,15,19,35,59,14,2
1932,55,21,16,44,29,10
1931,34,8,2,15,9,22
1930,17,56,37,52,18,4
1929,10,52,23,36,3,43
1928,28,51,59,26,53,10
1927,11,5,30,31,13,19
1926,46,3,2,30,14,20
1925,47,43,38,1,17,45
1924,16,52,53,58,30,12
1923,46,34,59,45,9,42
1922,20,41,22,36,43,38
1921,19,10,16,15,28,35
1920,39,45,31,25,43,33
1919,60,28,54,37,45,11
1918,22,17,50,38,20,16
1917,4,36,25,21,46,33
1916,3,50,18,23,9,52
1915,57,21,2,33,20,48
1914,39,33,29,16,44,42
1913,14,56,52,17,4,43
1912,42,10,33,36,13,35
1911,32,16,33,23,18,30
1910,9,6,39,15,22,48
1909,47,43,45,40,57,11
1908,10,27,57,13,23,4
1907,3,48,44,35,25,38
1906,27,40,33,6,39,60
1905,43,54,29,57,35,56
1904,21,18,56,15,51,12
1903,9,43,10,15,45,28
1902,25,18,2,21,9,7
1901,30,53,26,11,37,12
1900,46,11,8,43,28,27
1899,48,35,44,23,36,20
1898,53,12,58,55,34,45
1897,52,9,58,47,22,25
1896,25,6,14,21,3,15
1895,3,5,2,34,10,15
1894,31,35,57,54,21,53
1893,17,58,45,19,28,16
1892,50,22,6,37,30,17
1891,47,1,3,19,23,58
1890,5,24,51,22,11,53
1889,30,25,23,44,28,16
1888,48,1,18,45,17,10
1887,23,56,41,46,34,11
1886,7,40,54,15,3,45
1885,59,7,18,23,32,14
1884,38,1,32,4,23,59
1883,28,59,16,47,27,60
1882,41,35,37,10,19,9
1881,30,10,53,44,3,56
1880,19,51,56,16,5,37
1879,20,58,10,59,57,5
1878,56,26,40,16,57,12
1877,35,13,32,16,24,23
1876,7,18,51,41,44,39
1875,53,45,47,1,52,55
1874,43,28,10,37,47,44
1873,25,5,53,28,41,54
1872,39,11,56,46,13,25
1871,17,58,33,52,11,3
1870,30,40,33,18,20,32
1869,11,26,24,52,40,23
1868,25,5,31,1,28,23
1867,3,43,21,17,22,10
1866,14,36,60,38,17,44
1865,42,5,32,37,1,31
1864,5,4,37,40,60,14
1863,23,45,16,58,59,56
1862,8,49,35,42,56,2
1861,45,9,60,2,35,4
1860,10,40,30,44,36,60
1859,13,26,1,21,14,51
1858,55,30,28,59,33,22
1857,53,35,52,25,23,13
1856,14,9,2,32,22,37
1855,6,38,24,39,15,10
1854,59,30,43,31,34,25
1853,2,41,39,1,34,45
1852,29,13,49,50,45,17
1851,35,22,8,37,21,18
1850,24,32,23,40,41,38
1849,35,27,3,11,44,5
1848,58,41,50,40,9,55
1847,45,1,57,49,50,6
1846,49,26,30,34,24,6
1845,9,3,29,13,30,51
1844,4,3,37,39,48,50
1843,28,26,33,41,8,54
1842,18,43,22,24,16,34
1841,6,51,13,38,49,3
1840,33,41,48,15,17,47
1839,28,32,22,56,58,7
1838,59,24,30,8,57,5
1837,41,48,57,50,44,54
1836,59,18,45,60,8,15
1835,50,36,8,28,47,58
1834,2,22,51,24,48,17
1833,2,42,3,27,16,7
1832,34,47,57,56,14,46
1831,55,15,48,32,28,27
1830,29,3,54,7,37,60
1829,53,32,30,7,24,13
1828,40,32,11,6,59,48
1827,43,33,53,26,54,42
1826,43,48,32,19,17,51
1825,21,54,10,50,51,11
1824,19,30,60,12,6,5
1823,54,34,59,21,9,4
1822,22,53,26,1,43,50
1821,53,31,19,52,36,22
1820,27,19,23,3,45,40
1819,37,26,18,30,33,17
1818,10,53,15,2,6,56
1817,47,1,26,55,39,4
1816,12,10,46,28,22,5
1815,60,8,25,39,41,11
1814,53,51,27,11,46,9
1813,51,9,13,15,19,11
1812,45,34,23,20,37,32
1811,32,37,5,35,17,57
1810,56,10,43,50,1,25
1809,23,12,54,46,9,24
1808,20,25,45,2,41,14
1807,43,15,22,1,16,25
1806,11,42,55,58,35,20
1805,17,49,27,22,57,31
1804,20,50,48,59,28,21
1803,4,29,8,49,38,50
1802,6,14,2,17,44,13
1801,19,45,43,6,54,34
1800,31,56,16,6,11,19
1799,53,1,3,4,51,39
1798,9,28,45,2,23,53
1797,2,57,35,13,54,14
1796,54,22,48,34,23,53
1795,55,50,42,58,47,30
1794,1,5,37,60,34,40
1793,56,13,22,54,14,58
1792,47,41,18,17,2,16
1791,55,12,50,18,53,46
1790,28,13,11,26,50,27
1789,57,59,6,25,43,58
1788,42,45,56,13,3,59
1787,1,29,13,25,5,26
1786,34,8,2,21,25,6
1785,27,5,42,54,41,11
1784,30,15,54,55,26,4
1783,38,16,21,4,18,6
1782,34,57,47,18,6,52
1781,22,8,52,1,53,49
1780,20,6,33,22,31,34
1779,25,56,30,12,39,57
1778,4,38,48,10,45,40
1777,55,4,44,38,19,52
1776,39,11,48,14,19,10
1775,31,2,51,42,18,56
1774,1,52,30,60,20,12
1773,45,41,39,30,15,59
1772,27,39,19,41,12,45
1771,38,2,27,28,32,20
1770,34,30,41,11,27,26
1769,32,44,54,60,47,37
1768,35,11,7,50,34,5
1767,44,26,39,35,16,45
1766,60,23,22,46,53,41
1765,1,28,56,37,6,58
1764,6,7,41,39,29,55
1763,21,9,15,36,12,31
1762,45,59,42,55,32,26
1761,53,36,10,9,50,55
1760,25,10,24,47,48,36
1759,2,14,21,60,22,51
1758,6,23,16,11,42,36
1757,43,13,28,56,37,25
1756,28,13,6,14,45,35
1755,48,5,30,18,8,2
1754,20,31,40,30,27,53
1753,54,8,45,29,35,15
1752,36,53,55,37,60,9
1751,42,22,51,23,57,15
1750,17,41,48,15,20,31
1749,33,13,14,3,43,29
1748,2,53,13,49,10,41
1747,53,34,59,33,48,6
1746,37,40,6,58,41,18
1745,13,47,60,18,52,9
1744,12,9,56,29,14,42
1743,34,31,29,4,10,35
1742,23,27,21,19,52,11
1741,49,18,20,32,15,48
1740,38,15,47,25,10,53
1739,34,17,9,46,10,32
1738,53,46,28,48,37,12
1737,59,5,51,42,50,8
1736,13,32,12,41,24,29
1735,46,16,33,45,34,6
1734,52,29,17,41,12,25
1733,5,9,41,14,3,46
1732,25,60,34,53,45,38
1731,59,49,43,5,27,18
1730,1,24,10,17,42,51
1729,53,14,44,7,23,43
1728,28,39,8,59,42,3
1727,4,6,41,40,19,20
1726,42,54,57,3,49,10
1725,26,31,30,18,16,34
1724,27,39,37,58,60,33
1723,27,60,30,14,46,52
1722,41,39,9,49,23,58
1721,12,33,4,38,36,19
1720,49,39,18,31,57,23
1719,44,22,31,54,34,1
1718,30,53,4,31,47,32
1717,9,58,16,44,2,37
1716,25,36,2,53,42,41
1715,20,16,35,40,60,53
1714,51,2,24,52,36,8
1713,3,29,10,16,23,27
1712,50,19,59,2,29,12
1711,38,22,50,45,26,39
1710,59,56,7,28,21,58
1709,30,7,47,35,19,42
1708,38,50,29,45,17,32
1707,36,27,20,7,16,52
1706,12,31,34,48,36,56
1705,50,37,51,27,29,25
1704,11,7,59,51,32,1
1703,49,3,35,39,23,26
1702,39,52,17,35,19,33
1701,9,3,18,40,32,56
1700,58,41,48,50,15,18
1699,1,10,30,33,38,6
1698,24,44,28,13,45,11
1697,8,30,23,51,53,58
1696,12,1,31,37,17,46
1695,36,43,38,24,58,44
1694,34,29,20,37,57,45
1693,19,18,38,5,21,15
1692,44,56,13,14,27,11
1691,39,45,58,10,1,24
1690,24,45,53,35,26,21
1689,41,2,53,5,13,27
1688,18,23,42,56,32,30
1687,15,58,24,37,46,49
1686,44,37,9,55,14,46
1685,39,46,18,51,31,3
1684,9,12,31,50,18,39
1683,48,4,12,34,32,33
1682,13,39,51,37,35,7
1681,1,33,8,11,6,50
1680,37,46,47,51,23,38
1679,28,2,1,46,27,47
1678,35,52,17,19,9,11
1677,52,33,15,28,51,10
1676,2,1,37,51,48,11
1675,36,3,35,56,18,34
1674,42,59,30,58,50,22
1673,35,10,47,5,24,23
1672,20,10,1,5,42,3
1671,21,31,56,55,45,27
1670,1,33,30,17,47,19
1669,29,28,31,48,45,49
1668,47,40,55,57,52,5
1667,51,24,56,7,12,44
1666,51,27,1,23,45,2
1665,20,11,16,1,56,5
1664,48,8,21,36,23,29
1663,20,27,49,40,55,18
1662,57,10,25,14,33,29
1661,16,48,43,27,58,13
1660,17,38,42,51,34,8
1659,20,33,37,49,4,10
1658,7,40,19,49,11,23
1657,10,54,37,45,14,7
1656,6,4,43,54,56,11
1655,56,46,7,24,28,53
1654,50,33,42,7,58,16
1653,45,22,27,21,1,32
1652,44,28,24,57,7,26
1651,27,44,8,35,38,41
1650,23,57,29,17,60,38
1649,54,33,24,44,38,42
1648,48,18,15,22,20,16
1647,38,54,23,12,17,53
1646,34,23,41,19,40,58
1645,31,37,21,38,8,18
1644,10,16,34,13,60,22
1643,19,20,16,60,28,37
1642,47,3,43,42,60,23
1641,51,30,29,33,46,23
1640,6,18,46,23,31,2
1639,35,51,34,49,16,29
1638,38,2,42,58,41,1
1637,5,56,24,55,1,47
1636,33,19,52,51,35,26
1635,30,32,51,8,28,23
1634,44,9,33,10,23,51
1633,2,11,49,13,36,1
1632,18,56,27,6,24,59
1631,47,48,44,60,4,29
1630,30,43,7,44,1,54
1629,47,20,35,4,59,24
1628,38,26,60,34,29,50
1627,26,57,20,32,45,41
1626,3,52,5,43,35,14
1625,45,11,22,52,36,40
1624,32,2,27,47,58,41
1623,33,56,59,43,50,49
1622,21,7,5,53,45,4
1621,24,22,38,49,10,39
1620,57,23,38,13,34,27
1619,46,17,5,42,47,8
1618,9,51,20,24,52,43
1617,23,31,47,54,3,26
1616,46,40,58,31,28,42
1615,26,20,5,44,33,31
1614,49,27,43,17,14,21
1613,31,18,4,46,44,49
1612,17,51,36,6,42,13
1611,24,51,50,28,58,47
1610,36,53,35,9,1,4
1609,2,26,6,13,53,60
1608,6,43,17,5,54,59
1607,32,41,51,7,31,52
1606,54,1,15,37,46,42
1605,42,30,9,19,31,21
1604,21,40,51,27,24,2
1603,13,53,20,31,60,27
1602,8,44,40,35,22,12
1601,60,24,56,45,10,8
1600,9,46,23,32,35,57
1599,35,10,15,58,36,3
1598,36,47,42,29,53,31
1597,16,52,5,44,10,50
1596,5,12,1,7,45,10
1595,59,5,42,8,46,2
1594,53,43,23,6,7,8
1593,4,17,38,9,18,21
1592,41,49,36,42,31,38
1591,4,23,55,10,38,33
1590,40,7,44,55,34,20
1589,11,41,51,5,19,4
1588,36,29,23,49,32,45
1587,8,21,19,30,52,56
1586,47,58,8,43,39,46
1585,55,47,43,48,49,2
1584,27,54,28,50,22,3
1583,18,2,9,47,17,45
1582,4,17,1,48,13,38
1581,31,34,15,14,25,30
1580,1,6,14,17,33,36
1579,34,25,40,51,60,49
1578,6,53,56,30,37,3
1577,25,32,11,59,51,14
1576,26,30,21,15,13,46
1575,1,5,4,45,14,56
1574,6,28,33,48,46,27
1573,7,16,36,35,38,21
1572,46,42,27,45,20,47
1571,46,60,55,32,3,29
1570,18,46,42,15,56,24
1569,42,15,18,31,5,53
1568,28,58,19,24,42,25
1567,53,38,30,2,15,48
1566,11,32,60,5,6,36
1565,43,41,37,51,18,39
1564,54,44,38,25,46,53
1563,43,36,1,20,13,6
1562,12,10,51,37,23,47
1561,28,26,54,55,23,60
1560,30,47,53,38,20,36
1559,37,58,12,29,8,16
1558,31,42,15,7,17,54
1557,46,18,16,45,31,4
1556,7,52,11,10,1,4
1555,5,52,59,2,33,23
1554,30,52,50,49,53,32
1553,29,21,20,46,22,60
1552,7,18,26,46,39,24
1551,2,23,38,15,21,19
1550,21,56,36,9,13,27
1549,32,53,16,20,12,10
1548,44,41,42,54,47,19
1547,28,21,9,10,2,18
1546,38,44,17,60,4,53
1545,6,48,11,45,4,24
1544,30,50,45,2,35,21
1543,30,7,23,20,15,41
1542,7,12,57,11,30,39
1541,37,5,24,44,49,58
1540,54,47,27,17,3,32
1539,10,49,8,58,20,26
1538,35,52,27,53,57,23
1537,6,56,33,50,51,10
1536,18,32,29,13,50,58
1535,55,25,9,8,54,41
1534,28,12,34,29,1,48
1533,29,21,47,57,13,34
1532,42,2,11,23,31,44
1531,24,41,12,42,44,13
1530,53,10,28,16,48,33
1529,35,17,15,34,49,11
1528,4,13,58,36,19,15
1527,32,44,42,48,16,36
1526,51,47,28,10,59,16
1525,30,46,35,54,26,2
1524,40,53,12,46,2,52
1523,25,39,44,41,31,22
1522,33,5,23,32,8,56
1521,18,30,14,11,33,39
1520,36,46,48,31,7,35
1519,6,23,56,15,5,59
1518,28,8,55,41,48,9
1517,45,38,52,17,7,56
1516,34,60,18,45,4,20
1515,59,49,13,18,4,14
1514,23,16,17,59,42,60
1513,31,57,17,56,28,58
1512,35,11,28,46,42,58
1511,8,29,31,4,17,45
1510,1,8,44,17,46,53
1509,27,51,1,46,59,6
1508,58,39,18,17,35,30
1507,46,24,51,50,56,52
1506,49,34,42,18,3,14
1505,32,1,6,9,16,2
1504,41,2,42,30,12,10
1503,36,22,42,3,16,4
1502,6,43,22,52,57,51
1501,13,37,54,7,29,1
1500,57,43,18,59,10,31
1499,26,37,8,22,54,33
1498,11,46,27,49,6,40
1497,58,7,27,45,4,5
1496,28,18,41,54,14,47
1495,13,49,4,44,14,57
1494,50,28,35,24,2,14
1493,30,24,12,49,7,27
1492,48,44,46,4,18,9
1491,56,6,45,60,26,50
1490,31,32,43,3,52,1
1489,48,15,24,28,1,26
1488,4,51,45,22,38,25
1487,4,17,23,28,9,53
1486,10,1,34,54,6,40
1485,30,59,27,36,4,54
1484,49,29,17,53,20,24
1483,55,53,1,35,56,39
1482,11,9,6,34,41,53
1481,40,27,55,17,28,44
1480,9,14,26,36,52,21
1479,57,21,54,48,50,60
1478,10,40,27,47,55,37
1477,50,59,56,46,3,4
1476,26,10,4,37,47,57
1475,13,12,51,37,48,44
1474,2,43,11,1,3,28
1473,60,12,57,58,33,2
1472,12,23,25,18,45,50
1471,58,33,36,40,25,10
1470,2,34,51,36,38,55
1469,4,56,54,13,35,58
1468,2,20,37,19,1,10
1467,41,53,26,23,52,24
1466,4,13,51,37,6,34
1465,11,6,53,44,16,26
1464,59,2,54,32,24,50
1463,40,22,13,29,48,28
1462,5,9,25,40,38,27
1461,44,31,49,54,36,47
1460,50,52,14,4,27,38
1459,2,6,35,30,52,34
1458,2,16,4,44,33,51
1457,34,16,46,15,42,59
1456,36,6,40,14,8,26
1455,33,14,52,36,32,41
1454,27,52,41,29,4,48
1453,47,32,25,57,6,13
1452,50,57,58,28,2,14
1451,57,10,33,2,11,52
1450,27,45,44,26,38,31
1449,2,18,30,56,52,6
1448,25,29,36,1,56,60
1447,1,41,28,33,39,19
1446,13,32,6,51,40,24
1445,41,32,19,58,5,49
1444,2,5,55,28,27,48
1443,52,32,12,54,20,48
1442,12,20,13,49,34,30
1441,56,29,53,36,38,17
1440,6,28,56,2,36,51
1439,35,55,2,43,34,42
1438,49,7,33,31,36,14
1437,48,37,26,22,38,23
1436,1,23,13,30,24,57
1435,45,47,50,52,15,4
1434,3,34,58,22,18,55
1433,14,46,40,13,4,52
1432,16,24,25,45,59,42
1431,33,54,40,5,9,13
1430,19,2,30,46,22,52
1429,9,22,60,48,12,39
1428,15,55,37,34,19,7
1427,47,44,53,56,8,39
1426,24,44,6,15,18,30
1425,7,29,50,16,38,36
1424,60,38,29,3,7,15
1423,43,8,21,27,3,25
1422,17,44,2,5,13,39
1421,31,39,59,19,53,44
1420,45,16,18,11,36,2
1419,52,21,48,58,30,17
1418,7,8,10,27,12,56
1417,12,56,5,52,45,59
1416,49,3,19,35,22,24
1415,51,49,46,40,36,26
1414,44,49,57,37,21,46
1413,54,33,13,55,45,15
1412,6,8,37,24,45,41
1411,32,44,12,8,48,46
1410,54,29,18,42,40,50
1409,50,6,47,58,26,19
1408,43,39,20,19,24,4
1407,53,42,31,43,29,18
1406,7,10,38,17,24,57
1405,14,17,32,37,39,3
1404,7,32,31,51,27,8
1403,16,39,13,26,42,20
1402,38,10,27,2,21,9
1401,12,11,54,33,48,25
1400,34,26,9,43,54,53
1399,39,43,60,57,34,56
1398,42,51,14,40,32,33
1397,15,56,3,27,4,7
1396,52,48,54,58,55,29
1395,5,44,11,19,17,48
1394,11,35,16,46,24,50
1393,44,28,18,24,4,39
1392,43,8,2,28,33,12
1391,19,7,12,34,53,40
1390,29,27,19,4,28,31
1389,1,44,39,16,57,28
1388,54,31,50,43,29,22
1387,43,27,18,52,50,32
1386,39,56,28,12,51,38
1385,42,37,35,27,59,36
1384,56,18,31,2,30,45
1383,9,55,23,44,7,46
1382,17,27,55,13,5,16
1381,44,30,27,11,40,57
1380,52,14,3,60,57,55
1379,45,5,36,12,50,58
1378,18,17,59,2,54,5
1377,25,5,13,12,35,2
1376,53,49,21,11,54,9
1375,25,28,53,45,14,58
1374,21,33,28,31,43,6
1373,52,39,7,27,55,57
1372,46,60,58,36,40,3
1371,47,11,8,49,3,4
1370,2,27,59,49,4,5
1369,32,24,16,38,5,46
1368,10,26,29,38,32,21
1367,38,29,43,13,7,2
1366,59,44,54,37,27,12
1365,50,35,32,26,2,24
1364,20,13,40,10,53,44
1363,52,25,42,45,35,57
1362,58,19,12,22,2,36
1361,37,27,44,30,38,23
1360,50,25,17,16,54,2
1359,12,17,28,53,6,10
1358,16,15,37,3,35,47
1357,55,52,26,19,1,24
1356,21,46,6,22,13,31
1355,39,49,11,24,17,46
1354,2,42,8,49,48,38
1353,47,11,3,27,32,13
1352,35,59,36,9,18,24
1351,13,50,41,36,56,33
1350,4,36,29,55,45,3
1349,9,19,20,50,60,51
1348,38,45,39,7,12,56
1347,19,45,54,56,46,9
1346,59,47,32,48,40,12
1345,50,40,26,7,19,17
1344,19,42,8,36,21,59
1343,51,31,42,20,56,19
1342,5,60,46,42,50,7
1341,11,40,37,20,1,52
1340,36,21,13,59,60,30
1339,59,10,16,14,7,54
1338,19,33,18,43,60,1
1337,38,2,45,35,20,51
1336,51,54,32,1,38,47
1335,49,3,51,20,22,14
1334,8,25,27,6,10,1
1333,25,51,26,42,28,33
1332,5,13,3,24,35,59
1331,24,46,39,57,26,9
1330,48,8,21,18,49,30
1329,43,50,8,7,39,11
1328,43,27,59,53,23,10
1327,41,35,36,16,52,54
1326,30,19,10,18,50,11
1325,35,2,20,43,5,16
1324,29,44,51,31,18,57
1323,25,37,15,6,48,55
1322,55,43,21,10,47,53
1321,51,59,47,10,60,53
1320,38,17,55,41,24,25
1319,16,4,18,27,5,51
1318,34,46,14,28,11,16
1317,35,29,37,13,6,30
1316,48,34,25,42,13,8
1315,27,29,1,50,52,38
1314,42,44,52,58,60,38
1313,39,26,49,1,4,43
1312,28,30,29,22,20,5
1311,54,7,19,12,45,9
1310,14,8,53,9,59,32
1309,7,12,25,26,32,39
1308,24,33,7,30,47,8
1307,10,47,54,7,43,32
1306,45,6,19,34,43,22
1305,44,11,5,46,36,3
1304,35,23,15,7,20,14
1303,19,51,54,8,52,46
1302,44,15,56,2,10,57
1301,16,25,3,51,23,56
1300,46,43,59,54,44,53
1299,56,32,8,22,43,53
1298,60,14,53,30,15,55
1297,2,56,11,5,59,13
1296,49,43,14,10,53,46
1295,20,2,43,15,5,57
1294,6,50,4,48,29,51
1293,24,50,1,44,13,40
1292,30,31,23,9,54,11
1291,18,57,58,40,47,54
1290,14,50,3,23,2,34
1289,13,8,27,1,3,52
1288,42,32,56,40,30,17
1287,33,42,12,31,11,52
1286,5,52,2,33,51,28
1285,33,10,15,38,31,28
1284,26,21,20,36,31,29
1283,59,8,60,44,40,30
1282,4,39,56,23,52,55
1281,36,14,30,38,11,8
1280,29,6,54,10,20,16
1279,8,29,36,35,14,40
1278,4,16,24,56,25,30
1277,50,59,18,31,60,12
1276,9,40,5,22,36,11
1275,58,55,14,2,60,48
1274,13,59,21,17,40,39
1273,60,26,19,58,13,40
1272,28,27,13,35,26,52
1271,2,52,39,59,48,1
1270,31,33,24,5,42,9
1269,51,5,27,4,15,17
1268,17,53,60,44,16,3
1267,47,58,4,41,20,30
1266,39,6,42,10,60,33
1265,13,50,46,24,60,19
1264,56,17,37,51,4,36
1263,41,53,18,4,36,26
1262,11,39,9,5,8,7
1261,10,41,14,22,53,42
1260,19,23,31,53,29,41
1259,39,54,58,46,4,6
1258,47,26,11,57,59,55
1257,27,15,30,52,26,2
1256,26,38,33,35,53,43
1255,23,5,54,39,38,51
1254,9,29,18,7,14,39
1253,2,51,17,44,43,23
1252,35,2,51,14,49,39
1251,48,27,34,52,46,5
1250,59,1,2,40,51,24
1249,3,40,8,53,51,36
1248,20,33,58,34,57,60
1247,9,11,24,3,51,36
1246,59,10,37,57,40,43
1245,34,10,37,50,43,2
1244,45,8,34,15,2,25
1243,32,19,23,57,9,29
1242,54,45,51,11,34,48
1241,13,26,25,10,28,45
1240,22,42,49,8,12,9
1239,15,1,48,37,39,52
1238,40,45,24,14,13,39
1237,26,21,39,5,18,59
1236,17,20,38,8,53,3
1235,16,49,55,20,10,26
1234,3,5,24,19,30,35
1233,49,22,59,29,32,54
1232,12,18,15,8,11,22
1231,20,27,49,5,23,39
1230,37,35,12,22,19,9
1229,12,49,60,32,30,40
1228,36,10,60,52,50,23
1227,35,31,4,30,54,28
1226,31,55,56,50,40,10
1225,32,55,34,31,50,40
1224,41,19,57,53,21,27
1223,17,15,48,42,35,47
1222,26,19,48,57,5,8
1221,46,5,58,37,14,43
1220,48,55,52,43,5,15
1219,34,37,41,53,2,33
1218,33,23,29,46,10,31
1217,5,43,28,15,11,50
1216,7,25,4,58,13,27
1215,47,51,10,50,30,25
1214,5,41,29,36,30,48
1213,3,53,45,11,34,26
1212,35,50,2,23,33,40
1211,36,54,3,31,15,48
1210,3,7,9,10,31,34
1209,30,17,38,14,5,35
1208,45,12,1,26,54,20
1207,32,35,22,9,56,11
1206,2,11,37,36,48,6
1205,14,4,26,35,29,13
1204,10,25,5,39,52,43
1203,55,30,33,9,7,38
1202,9,60,11,53,48,8
1201,36,32,55,49,60,28
1200,10,3,39,54,56,11
1199,58,28,23,39,16,19
1198,29,22,36,58,41,48
1197,39,54,36,37,60,49
1196,60,3,20,19,58,6
1195,27,17,57,26,55,20
1194,24,53,41,6,13,50
1193,12,54,2,32,14,9
1192,49,17,20,59,57,52
1191,25,22,11,16,33,3
1190,11,53,56,37,10,19
1189,50,21,14,35,31,27
1188,60,52,59,9,44,20
1187,8,49,43,17,40,19
1186,41,12,15,7,13,8
1185,54,10,2,43,21,35
1184,4,23,27,28,9,30
1183,12,5,10,20,29,37
1182,52,29,56,60,2,4
1181,44,18,45,31,26,20
1180,60,12,34,30,44,57
1179,59,28,47,60,22,5
1178,1,53,22,50,45,30
1177,33,52,55,47,38,50
1176,21,11,49,14,33,30
1175,2,3,12,37,47,16
1174,7,52,6,51,47,39
1173,7,25,24,36,5,47
1172,28,52,6,43,12,56
1171,41,3,10,30,57,13
1170,46,11,27,34,49,13
1169,14,1,11,23,42,48
1168,47,20,4,56,53,5
1167,43,28,56,20,52,51
1166,35,28,54,30,22,31
1165,20,52,60,42,54,40
1164,17,6,14,40,49,26
1163,5,51,31,53,47,17
1162,31,25,18,41,22,30
1161,48,47,7,4,42,51
1160,40,5,3,48,1,18
1159,53,46,5,6,34,55
1158,23,31,60,55,30,54
1157,46,9,43,41,49,29
1156,31,49,44,24,9,48
1155,28,58,41,40,51,20
1154,4,14,21,26,12,28
1153,55,46,34,17,19,6
1152,47,36,44,29,20,14
1151,1,25,4,14,21,51
1150,28,17,35,52,31,15
1149,46,54,8,36,7,23
1148,48,32,29,55,27,28
1147,23,39,52,31,6,33
1146,10,34,53,33,28,6
1145,19,3,60,33,24,16
1144,19,10,49,18,1,44
1143,35,47,60,44,30,3
1142,28,31,15,58,3,26
1141,40,9,37,58,50,60
1140,49,58,40,46,10,27
1139,36,42,37,9,28,31
1138,4,25,18,15,36,2
1137,21,28,19,25,50,43
1136,7,31,32,37,43,34
1135,5,4,19,39,6,23
1134,29,36,56,22,9,51
1133,16,5,58,39,10,21
1132,52,30,27,12,55,33
1131,49,34,36,1,16,8
1130,23,49,32,54,18,5
1129,47,19,17,12,32,55
1128,60,8,39,52,24,16
1127,24,8,14,5,29,30
1126,59,31,57,4,52,42
1125,7,42,56,29,33,3
1124,49,11,7,18,16,33
1123,19,4,39,14,45,60
1122,49,44,56,26,46,55
1121,18,4,59,54,56,17
1120,50,55,7,35,44,40
1119,44,54,41,45,34,10
1118,55,44,8,20,43,21
1117,27,35,40,1,6,17
1116,17,20,4,47,9,13
1115,44,41,18,50,37,30
1114,16,3,22,54,25,15
1113,47,36,29,59,3,6
1112,4,34,52,32,58,43
1111,4,43,25,9,33,32
1110,26,45,6,28,42,14
1109,11,52,14,6,29,8
1108,60,44,7,39,43,9
1107,36,20,54,9,3,53
1106,4,15,50,60,43,47
1105,43,1,50,28,57,15
1104,3,35,58,49,2,6
1103,41,19,10,28,55,56
1102,46,23,9,35,11,51
1101,7,12,57,6,24,10
1100,41,33,17,18,7,42
1099,55,44,38,35,14,31
1098,30,20,21,11,50,52
1097,21,48,33,1,56,17
1096,3,41,52,14,13,16
1095,27,23,36,10,21,16
1094,10,9,48,36,41,21
1093,27,49,38,23,41,19
1092,40,30,1,9,33,34
1091,27,56,17,24,49,23
1090,24,9,40,20,36,42
1089,37,48,32,2,18,20
1088,24,42,35,31,6,57
1087,36,46,28,32,3,20
1086,45,4,6,23,10,2
1085,39,50,21,12,40,55
1084,20,5,29,59,40,33
1083,20,28,42,23,10,43
1082,4,40,50,17,55,38
1081,9,56,29,52,16,24
1080,56,11,20,41,34,18
1079,36,12,37,24,5,28
1078,3,6,45,34,41,43
1077,11,6,18,5,37,9
1076,32,33,10,19,42,4
1075,53,39,16,21,10,12
1074,3,47,10,50,29,23
1073,44,36,32,8,34,25
1072,19,18,54,47,43,9
1071,5,37,43,7,53,54
1070,41,53,8,23,5,16
1069,28,17,49,53,45,9
1068,44,48,25,57,27,47
1067,14,10,56,25,4,28
1066,10,43,49,32,25,6
1065,7,57,19,43,39,30
1064,28,4,19,16,49,29
1063,49,1,22,47,44,50
1062,55,8,2,37,23,33
1061,9,41,56,23,21,30
1060,1,41,3,18,16,42
1059,37,1,14,45,12,16
1058,20,51,57,45,24,18
1057,15,49,59,4,3,2
1056,38,8,50,53,59,6
1055,27,32,15,12,20,16
1054,41,27,13,60,14,18
1053,15,42,27,53,34,49
1052,8,11,16,15,57,52
1051,57,11,7,43,10,13
1050,60,14,45,24,33,26
1049,34,17,52,5,2,29
1048,57,3,38,21,28,16
1047,1,2,10,48,14,8
1046,57,40,28,42,54,55
1045,31,6,5,17,50,1
1044,58,10,39,11,13,35
1043,25,14,51,48,60,21
1042,25,46,51,18,13,30
1041,12,10,36,54,44,57
1040,44,1,28,55,6,39
1039,52,2,20,27,36,24
1038,51,7,6,28,35,43
1037,56,36,4,44,46,53
1036,27,39,36,10,41,52
1035,51,60,1,11,59,26
1034,20,42,1,3,49,18
1033,39,6,5,33,54,17
1032,57,43,15,29,26,16
1031,49,33,24,40,46,43
1030,57,8,54,1,23,37
1029,17,5,16,24,20,32
1028,54,26,34,51,20,52
1027,20,18,47,44,60,33
1026,10,33,51,53,6,17
1025,52,40,29,27,28,10
1024,28,53,18,39,22,29
1023,45,40,2,7,18,8
1022,31,21,40,39,56,5
1021,42,55,51,43,2,33
1020,19,32,52,1,2,39
1019,29,47,4,13,46,23
1018,55,51,58,9,44,24
1017,31,51,19,6,56,34
1016,11,9,25,5,60,20
1015,49,8,28,3,26,17
1014,60,57,9,25,8,41
1013,7,9,20,41,12,19
1012,47,19,58,14,40,55
1011,30,2,52,21,11,35
1010,2,46,3,37,13,54
1009,34,12,1,6,58,29
1008,7,15,42,48,34,13
1007,49,27,4,36,52,37
1006,48,17,4,33,55,2
1005,6,41,4,37,12,42
1004,45,47,29,40,44,43
1003,10,27,23,5,16,26
1002,3,31,7,25,40,58
1001,15,37,27,12,60,51
1000,49,58,53,39,38,29
999,44,36,55,58,18,24
998,28,21,4,32,3,22
997,18,53,55,32,9,17
996,21,23,20,7,29,15
995,4,54,55,36,16,31
994,44,40,58,29,3,20
993,26,25,42,60,5,24
992,6,8,4,1,25,28
991,8,38,60,41,15,9
990,29,18,2,15,10,39
989,38,21,27,2,29,32
988,48,17,46,56,60,8
987,47,27,13,31,34,58
986,32,6,31,24,15,19
985,4,56,18,59,46,16
984,46,20,4,43,47,10
983,38,45,40,16,32,22
982,12,24,8,40,43,49
981,8,41,53,1,58,34
980,35,17,59,15,36,29
979,28,3,39,51,31,15
978,42,58,12,18,16,27
977,17,3,9,32,7,5
976,28,53,38,23,14,25
975,33,9,37,40,41,30
974,45,20,38,31,16,12
973,53,36,8,30,1,47
972,33,18,15,56,31,34
971,4,14,33,44,11,45
970,57,34,5,54,28,21
969,56,35,50,13,41,25
968,30,4,13,60,51,1
967,18,14,57,30,13,5
966,1,58,26,28,4,41
965,36,39,57,58,5,30
964,42,13,33,20,8,26
963,37,17,15,50,48,59
962,2,48,49,40,55,11
961,16,53,2,4,21,36
960,34,6,33,18,53,19
959,57,3,5,11,33,39
958,13,22,7,33,51,48
957,50,32,25,34,57,24
956,46,51,47,59,54,57
955,35,5,32,21,33,12
954,8,5,24,18,57,33
953,55,48,1,39,16,42
952,54,11,27,18,2,30
951,49,24,39,34,55,14
950,48,59,49,41,42,23
949,44,1,51,52,41,23
948,22,44,41,46,52,54
947,33,11,3,58,14,5
946,59,1,47,5,52,12
945,44,8,59,54,4,27
944,16,58,43,37,52,59
943,47,41,58,3,23,12
942,5,52,18,8,59,42
941,11,15,10,27,60,53
940,25,33,51,31,5,37
939,6,23,19,50,37,49
938,35,15,27,57,50,59
937,22,41,2,30,21,52
936,5,33,14,29,44,22
935,7,45,18,13,29,31
934,25,48,44,3,21,1
933,25,39,45,51,8,14
932,2,21,42,53,36,17
931,17,34,7,36,39,19
930,46,20,55,37,28,49
929,16,49,35,39,57,27
928,32,10,49,60,4,33
927,36,26,31,23,19,33
926,40,41,34,33,21,59
925,52,37,46,8,22,36
924,51,27,60,21,20,2
923,53,39,2,50,57,15
922,41,49,45,19,13,12
921,35,41,1,57,9,48
920,17,57,55,24,52,5
919,43,25,41,60,31,3
918,38,44,8,4,12,52
917,23,59,25,47,46,30
916,33,37,5,38,28,36
915,20,28,49,26,17,48
914,33,51,9,23,45,12
913,30,14,59,36,46,38
912,26,21,54,4,19,29
911,49,46,1,29,6,28
910,53,29,36,3,15,27
909,42,17,26,38,28,22
908,19,1,9,25,50,52
907,9,41,53,37,36,51
906,35,39,29,24,7,14
905,4,15,57,55,2,16
904,32,44,59,53,48,51
903,17,5,32,55,20,41
902,52,55,23,50,58,18
901,32,34,16,13,56,33
900,4,21,59,18,38,34
899,58,18,54,36,53,20
898,4,8,3,54,45,30
897,21,57,46,22,7,43
896,31,11,41,35,22,5
895,2,55,41,43,57,58
894,37,24,44,28,20,41
893,56,53,51,26,18,3
892,1,49,52,42,19,44
891,15,22,19,35,34,16
890,9,21,22,7,17,54
889,34,54,20,39,60,24
888,50,24,40,54,52,60
887,44,12,32,21,1,34
886,50,55,37,33,59,17
885,13,4,31,33,47,51
884,22,11,2,14,39,12
883,21,37,60,32,52,53
882,42,45,44,60,41,17
881,43,24,4,51,18,56
880,51,30,49,25,37,46
879,29,10,46,35,42,28
878,37,12,43,38,11,54
877,13,15,20,31,28,36
876,4,12,41,45,60,8
875,53,18,36,58,24,20
874,59,20,52,42,44,10
873,57,59,4,34,19,30
872,18,55,58,43,31,5
871,17,5,58,1,47,10
870,52,8,43,34,40,21
869,29,42,50,51,49,27
868,57,51,21,22,25,40
867,54,26,28,19,44,10
866,36,48,27,40,5,46
865,27,23,41,51,26,53
864,31,11,33,42,57,8
863,32,53,50,57,15,24
862,19,35,12,2,11,8
861,42,40,60,59,47,39
860,22,8,17,42,44,2
859,46,47,12,57,34,9
858,31,37,54,23,4,18
857,17,59,49,2,3,50
856,11,40,41,47,15,42
855,42,3,24,53,43,31
854,17,3,24,27,44,25
853,51,30,59,46,38,56
852,14,38,6,23,44,34
851,16,32,35,58,19,3
850,60,22,59,25,44,7
849,8,39,9,58,44,49
848,56,34,17,32,47,27
847,42,14,44,27,15,48
846,47,54,2,50,3,44
845,40,48,19,20,14,52
844,54,24,44,57,34,16
843,34,48,1,16,45,36
842,51,44,60,9,7,30
841,36,51,32,22,38,7
840,43,29,35,59,31,17
839,11,18,8,7,37,43
838,9,30,47,38,23,44
837,16,5,24,34,6,60
836,28,22,38,17,52,59
835,58,31,57,49,33,18
834,44,10,17,16,51,34
833,53,58,57,16,46,13
832,17,49,15,33,39,23
831,3,50,48,42,32,33
830,53,51,2,41,13,49
829,32,50,14,47,10,56
828,23,50,53,42,28,38
827,24,56,30,51,42,18
826,45,6,8,7,53,27
825,28,21,40,10,41,47
824,33,48,6,7,20,9
823,15,26,59,1,54,51
822,4,17,41,10,27,52
821,4,29,38,36,33,42
820,17,45,32,21,10,46
819,51,5,58,46,25,19
818,44,41,22,8,9,25
817,34,43,29,30,10,52
816,21,47,40,52,30,20
815,57,50,9,39,37,19
814,11,2,46,50,8,41
813,23,15,56,46,9,45
812,57,39,54,11,38,13
811,32,57,28,41,10,47
810,4,33,1,48,5,37
809,25,23,11,5,30,15
808,15,21,31,46,2,57
807,8,27,2,32,56,49
806,60,41,47,26,35,18
805,30,2,48,60,43,36
804,13,59,37,56,3,47
803,10,57,28,3,5,21
802,14,24,60,6,18,48
801,20,22,11,19,48,42
800,1,7,56,11,37,38
799,29,35,19,57,42,55
798,32,9,4,52,29,3
797,58,48,52,47,12,6
796,19,24,43,34,39,5
795,14,36,21,29,26,48
794,56,47,55,38,42,3
793,3,51,33,15,16,57
792,43,56,9,45,29,34
791,42,35,19,9,14,58
790,22,2,19,28,43,6
789,60,39,31,38,6,50
788,31,57,17,19,29,44
787,37,31,20,60,34,54
786,27,31,26,11,10,41
785,35,5,37,8,48,17
784,42,56,8,37,27,53
783,43,21,48,8,4,32
782,11,23,59,42,35,2
781,10,54,8,39,56,13
780,10,50,28,51,59,7
779,36,54,52,25,29,26
778,45,20,36,37,31,51
777,14,50,23,2,28,56
776,57,35,60,41,3,15
775,27,12,46,47,42,50
774,37,5,54,58,46,10
773,3,5,51,29,34,14
772,38,51,52,60,10,35
771,29,46,34,47,21,14
770,4,34,25,35,48,12
769,20,21,50,29,12,16
768,33,37,59,30,4,8
767,22,50,32,38,54,15
766,1,50,19,42,24,58
765,3,37,50,16,30,10
764,7,3,55,47,53,45
763,40,47,1,48,9,26
762,39,9,21,12,37,54
761,56,29,17,13,27,40
760,12,17,60,44,46,45
759,59,39,30,31,48,45
758,47,59,1,23,36,43
757,17,32,12,18,58,30
756,37,50,41,5,38,27
755,59,30,47,12,4,49
754,4,42,34,50,3,13
753,59,35,43,22,7,2
752,25,4,29,42,24,23
751,4,25,38,50,20,7
750,58,17,54,10,42,33
749,24,47,4,57,48,50
748,1,7,19,51,35,2
747,21,23,56,12,3,2
746,49,12,10,57,25,1
745,21,57,37,16,43,2
744,26,46,12,23,39,4
743,54,20,32,60,25,23
742,34,17,7,41,2,50
741,26,39,27,24,59,36
740,29,47,12,50,16,28
739,6,45,56,49,35,10
738,15,30,14,42,26,54
737,33,12,24,38,11,32
736,1,21,38,41,56,49
735,40,42,15,52,38,9
734,44,45,27,29,43,54
733,12,26,31,43,46,2
732,49,19,53,50,17,6
731,35,6,15,23,28,16
730,45,15,2,54,16,50
729,33,56,18,57,43,5
728,44,42,13,8,24,32
727,14,42,12,4,59,30
726,40,47,1,5,7,37
725,49,9,3,35,37,41
724,34,51,55,17,48,27
723,16,6,52,1,36,50
722,60,36,57,18,44,9
721,14,3,23,55,36,25
720,12,56,44,51,31,54
719,39,47,37,53,32,3
718,7,35,21,39,58,33
717,28,35,41,17,6,23
716,29,2,7,50,16,32
715,54,36,12,4,33,24
714,17,53,39,8,7,35
713,46,1,26,16,12,54
712,35,7,53,58,8,43
711,10,5,41,59,40,33
710,46,25,5,49,39,34
709,29,22,44,9,6,4
708,45,13,39,47,9,7
707,51,8,1,43,10,36
706,22,10,17,7,2,60
705,3,15,11,13,26,43
704,2,27,50,34,18,4
703,30,24,2,45,11,27
702,1,56,18,58,45,57
701,13,1,31,23,60,48
700,2,3,24,40,31,14
699,53,17,50,23,54,48
698,22,8,27,43,55,12
697,53,35,32,31,28,51
696,37,16,34,57,53,9
695,13,40,21,52,6,11
694,15,19,29,53,37,41
693,14,50,41,17,31,13
692,33,18,60,11,58,57
691,55,16,58,8,37,50
690,15,41,8,47,12,53
689,6,60,7,31,49,51
688,47,30,52,11,21,35
687,59,48,1,7,41,14
686,33,5,4,54,15,26
685,33,27,5,56,12,43
684,50,37,33,40,19,17
683,43,40,12,11,2,35
682,60,37,47,36,4,27
681,59,21,53,25,58,38
680,44,2,26,5,3,22
679,37,21,54,3,58,25
678,44,46,31,14,40,42
677,25,10,48,8,32,55
676,49,32,15,9,41,42
675,50,42,30,25,43,24
674,22,32,18,29,42,38
673,6,40,37,11,20,34
672,43,34,53,38,28,24
671,27,16,39,51,9,38
670,42,59,58,37,48,22
669,7,41,24,40,49,27
668,49,33,56,2,14,1
667,5,23,16,4,49,1
666,7,26,16,29,45,55
665,8,47,7,48,25,18
664,12,1,55,59,38,36
663,1,49,30,55,27,51
662,4,60,56,25,18,23
661,42,40,27,4,55,36
660,53,5,38,54,46,11
659,14,29,40,34,51,52
658,41,20,36,3,11,6
657,20,59,58,33,60,16
656,59,37,46,36,35,51
655,26,39,1,37,43,48
654,10,11,56,40,41,6
653,31,24,19,34,9,5
652,24,18,57,56,10,20
651,39,45,28,26,48,60
650,53,59,25,29,10,24
649,9,54,41,48,33,24
648,5,48,23,42,45,29
647,56,19,11,14,12,54
646,13,47,60,32,49,10
645,52,48,24,53,54,3
644,57,29,31,27,34,14
643,14,45,24,37,40,42
642,51,17,56,36,44,40
641,17,13,33,9,1,34
640,12,42,59,46,19,60
639,51,39,35,60,45,13
638,42,10,50,41,11,36
637,52,58,43,48,11,18
636,30,32,34,50,28,26
635,49,42,37,8,20,26
634,13,41,24,42,10,56
633,27,46,5,50,11,22
632,2,54,48,51,19,28
631,1,28,47,20,44,32
630,16,53,20,60,12,45
629,40,47,39,16,51,15
628,8,16,22,56,58,30
627,19,13,45,58,56,1
626,49,8,22,18,7,39
625,59,12,32,42,24,40
624,39,23,34,52,8,43
623,42,23,55,30,9,49
622,59,27,19,29,50,38
621,29,31,50,26,57,49
620,22,1,29,13,32,3
619,16,12,46,14,8,19
618,60,10,3,8,24,13
617,25,5,49,36,33,3
616,24,16,26,54,12,2
615,27,31,8,10,51,5
614,60,31,12,48,57,16
613,54,55,13,44,6,19
612,55,33,15,50,53,18
611,22,21,33,16,48,49
610,25,49,30,43,47,45
609,15,2,59,60,6,58
608,30,6,37,19,24,13
607,6,59,11,27,19,41
606,41,6,23,55,32,35
605,44,52,53,4,49,24
604,41,49,51,25,15,46
603,4,8,11,29,12,44
602,38,60,13,7,55,46
601,37,19,29,30,10,22
600,18,39,54,34,31,16
599,6,45,51,9,23,4
598,5,16,53,38,50,34
597,42,40,27,22,56,29
596,43,60,28,11,54,14
595,54,2,43,1,50,25
594,10,53,55,29,13,47
593,27,29,1,59,25,49
592,55,14,59,47,13,42
591,58,3,18,50,34,1
590,25,51,5,18,4,28
589,13,7,33,59,6,8
588,45,13,46,55,53,11
587,30,2,36,18,60,29
586,45,38,13,11,54,39
585,24,39,12,33,57,36
584,30,53,23,7,32,8
583,55,6,41,20,43,7
582,13,40,29,59,45,51
581,30,25,52,14,39,17
580,38,16,18,28,15,47
579,15,34,39,17,4,9
578,48,3,58,18,56,23
577,31,47,28,23,8,24
576,18,43,52,39,7,8
575,18,29,21,48,35,5
574,32,23,2,10,44,17
573,59,29,17,6,40,22
572,33,3,20,60,9,16
571,14,31,12,13,51,50
570,35,32,36,33,51,15
569,32,15,14,9,3,57
568,25,41,17,29,13,22
567,57,58,11,38,41,31
566,17,6,20,18,13,37
565,31,37,35,7,45,34
564,38,13,32,20,10,49
563,34,8,23,44,51,5
562,37,35,23,16,57,55
561,39,49,36,20,55,1
560,32,18,11,30,2,58
559,53,25,36,13,17,6
558,59,57,7,58,31,14
557,18,49,38,23,8,12
556,8,45,30,33,17,10
555,49,5,23,33,45,31
554,47,29,31,15,60,42
553,43,46,58,53,54,4
552,22,54,52,47,49,9
551,56,48,57,21,12,46
550,17,56,16,38,39,45
549,13,51,58,22,46,8
548,51,49,14,47,59,58
547,4,59,13,53,28,30
546,46,4,54,17,13,5
545,43,35,57,29,40,17
544,11,33,56,47,17,34
543,35,54,37,42,49,46
542,49,4,19,28,35,6
541,58,57,27,13,49,52
540,22,4,30,44,28,49
539,16,50,55,6,47,19
538,45,43,56,25,52,3
537,37,3,19,34,39,7
536,14,22,25,15,37,23
535,49,14,47,56,6,28
534,48,57,23,8,31,3
533,27,18,13,59,21,53
532,13,4,12,53,9,52
531,3,1,35,7,18,50
530,32,21,25,1,6,49
529,56,45,13,33,38,1
528,34,28,37,12,8,31
527,17,14,50,52,6,26
526,3,59,21,36,55,31
525,26,32,24,49,8,10
524,47,29,34,48,19,41
523,45,58,40,39,28,44
522,49,52,15,25,14,6
521,28,32,38,25,15,45
520,32,34,17,35,9,12
519,9,36,15,19,42,22
518,44,8,5,15,18,10
517,51,32,8,28,38,7
516,24,5,34,13,35,33
515,39,16,57,15,45,48
514,15,52,40,36,51,42
513,46,10,27,19,33,39
512,8,40,58,4,53,31
511,8,36,34,37,3,4
510,30,45,58,1,4,41
509,32,55,34,35,28,33
508,46,56,5,15,45,10
507,44,58,5,27,33,3
506,31,37,34,15,38,4
505,47,20,52,3,46,28
504,39,19,11,8,50,30
503,10,21,48,27,49,7
502,50,7,33,21,24,13
501,34,27,56,28,16,39
500,35,21,54,29,38,36
499,59,1,11,5,44,4
498,49,28,2,6,57,50
497,9,41,32,13,58,20
496,41,20,19,29,59,10
495,36,15,60,8,29,49
494,28,32,49,53,18,20
493,54,20,3,18,42,24
492,57,2,15,6,56,18
491,22,43,15,55,9,1
490,5,11,29,54,23,58
489,28,36,17,53,33,59
488,30,39,35,43,15,57
487,25,22,48,52,54,8
486,50,42,19,8,30,14
485,38,28,52,30,19,57
484,53,19,38,18,17,49
483,16,23,35,18,44,59
482,13,56,12,33,53,54
481,42,6,24,44,22,13
480,36,38,33,14,49,41
479,20,54,58,26,41,46
478,30,8,31,3,21,25
477,47,34,8,6,18,38
476,38,43,20,55,17,58
475,19,6,43,52,8,22
474,34,3,12,50,32,40
473,51,7,58,49,23,41
472,12,3,38,29,51,4
471,51,59,31,5,36,32
470,51,58,23,11,8,37
469,29,47,42,21,13,26
468,23,6,25,39,51,5
467,38,21,8,22,18,60
466,28,16,45,29,30,11
465,46,31,1,57,22,51
464,6,33,45,38,24,50
463,7,18,2,45,3,53
462,27,48,17,19,26,22
461,30,17,20,29,15,60
460,19,55,30,23,37,49
459,43,17,8,15,49,39
458,43,53,13,32,34,24
457,48,15,24,27,17,32
456,17,40,22,27,33,3
455,50,15,17,2,14,59
454,4,17,42,56,46,24
453,58,52,8,34,20,23
452,54,11,51,16,36,30
451,23,18,31,17,53,28
450,59,51,13,1,9,50
449,34,56,24,1,49,8
448,5,3,52,45,9,51
447,24,55,15,33,25,42
446,11,20,8,47,12,17
445,31,50,7,53,32,20
444,48,52,57,24,3,33
443,11,36,17,26,52,48
442,15,31,23,6,59,37
441,2,15,58,10,59,21
440,46,23,30,47,5,3
439,42,13,20,29,43,57
438,38,48,14,3,11,5
437,54,10,59,44,30,7
436,1,6,57,29,48,7
435,37,11,17,31,43,10
434,24,17,4,54,30,10
433,36,17,28,16,54,30
432,50,17,13,27,4,39
431,58,26,40,37,47,52
430,50,21,10,25,38,8
429,55,32,17,36,26,43
428,60,8,32,28,46,30
427,51,13,43,24,3,14
426,7,32,54,50,30,37
425,6,16,10,34,47,42
424,29,36,27,18,59,46
423,8,22,33,40,32,53
422,60,12,56,37,55,43
421,38,45,35,37,5,51
420,43,12,59,30,57,29
419,41,42,52,53,16,9
418,45,8,32,49,15,52
417,25,7,12,21,42,34
416,13,1,23,56,54,33
415,38,44,4,1,27,42
414,35,26,58,52,45,16
413,35,53,29,33,2,4
412,45,5,14,21,59,12
411,10,56,12,31,45,38
410,31,55,36,24,8,38
409,26,49,25,18,31,34
408,49,44,33,28,56,14
407,49,2,18,51,22,57
406,47,32,48,12,38,2
405,57,60,34,24,29,47
404,24,38,58,1,40,28
403,46,31,7,16,60,27
402,27,43,58,5,16,56
401,50,18,44,53,11,43
400,29,59,13,10,54,28
399,59,55,16,27,47,11
398,28,7,16,37,36,22
397,32,24,2,5,1,46
396,47,18,6,45,34,42
395,11,58,31,14,10,20
394,15,49,42,5,45,35
393,12,50,36,6,35,40
392,49,47,39,31,15,23
391,7,15,35,16,40,4
390,7,22,34,12,38,53
389,46,14,54,18,43,5
388,52,48,53,58,23,36
387,29,28,48,47,43,22
386,39,54,43,36,17,35
385,22,12,24,18,5,16
384,28,50,47,24,40,52
383,48,22,53,56,50,14
382,54,38,53,31,37,34
381,9,56,46,28,10,55
380,47,22,13,30,31,57
379,41,55,24,59,33,40
378,55,45,48,41,5,38
377,46,19,3,45,12,27
376,25,13,10,43,35,48
375,51,9,42,5,58,1
374,54,2,26,5,44,16
373,31,33,24,10,5,1
372,24,17,46,57,16,39
371,23,33,39,4,60,18
370,51,42,4,54,1,40
369,21,42,1,60,35,14
368,13,50,38,32,44,29
367,52,49,27,33,12,10
366,6,4,51,7,21,15
365,52,19,34,37,58,23
364,59,44,29,5,51,57
363,39,54,29,49,47,19
362,37,20,33,46,7,56
361,41,28,45,31,16,59
360,47,24,29,55,53,23
359,31,54,20,29,13,19
358,40,42,32,12,21,17
357,45,53,32,2,30,35
356,54,19,5,58,56,21
355,2,37,22,60,14,23
354,40,52,38,16,7,41
353,60,46,30,55,23,19
352,49,7,47,25,20,44
351,15,16,59,60,24,41
350,23,30,43,10,15,57
349,9,38,32,8,54,28
348,39,40,33,52,19,30
347,26,10,52,1,12,48
346,56,7,46,60,41,12
345,56,11,58,46,51,22
344,33,36,12,35,10,14
343,4,6,7,24,12,41
342,29,49,54,51,16,34
341,56,23,22,43,16,5
340,10,60,42,9,33,12
339,13,16,12,5,27,50
338,48,46,9,1,36,4
337,31,52,14,54,16,4
336,2,18,54,22,30,26
335,43,33,57,23,59,7
334,41,26,51,14,24,23
333,35,27,53,44,52,4
332,28,23,42,29,44,34
331,27,1,35,20,37,13
330,2,4,23,37,14,51
329,24,11,40,12,35,10
328,51,5,23,7,14,21
327,46,38,29,33,32,48
326,52,23,40,51,44,21
325,4,23,3,1,21,53
324,22,8,30,15,47,25
323,31,49,54,33,26,40
322,18,11,29,44,47,56
321,11,31,32,48,49,4
320,20,53,47,50,22,27
319,12,16,23,17,19,48
318,19,53,40,3,31,20
317,27,20,48,16,30,35
316,28,51,56,6,24,43
315,50,21,43,12,28,22
314,5,32,40,58,37,34
313,14,38,53,24,16,37
312,14,30,50,41,47,23
311,32,22,24,41,30,38
310,28,14,29,2,31,32
309,39,50,25,55,11,4
308,55,25,4,11,29,39
307,26,17,13,41,16,44
306,30,19,57,41,56,47
305,11,5,27,60,38,53
304,42,7,11,34,59,41
303,7,13,30,37,47,17
302,25,40,12,60,30,41
301,58,26,49,57,48,9
300,27,57,41,38,28,24
299,7,5,2,53,33,49
298,22,34,24,23,5,60
297,20,28,41,1,33,36
296,20,51,42,3,52,46
295,24,44,7,31,12,50
294,28,45,41,22,57,25
293,6,12,35,5,28,7
292,24,34,53,45,23,13
291,22,16,5,41,18,17
290,57,30,7,25,40,26
289,36,6,30,20,7,25
288,50,9,18,11,6,17
287,60,47,3,33,25,13
286,44,37,56,29,47,35
285,50,56,41,12,32,37
284,8,36,14,32,30,7
283,48,34,28,54,25,42
282,33,24,36,9,14,23
281,11,5,47,31,53,38
280,5,16,30,25,58,20
279,31,59,4,58,23,47
278,22,10,18,55,15,31
277,40,26,38,4,56,52
276,53,59,39,45,22,57
275,16,30,19,38,48,37
274,11,39,47,18,13,26
273,47,52,10,27,23,17
272,36,58,9,10,56,24
271,14,31,54,29,26,24
270,45,27,35,40,5,9
269,19,18,52,25,17,49
268,21,10,47,6,5,33
267,58,1,45,55,8,46
266,38,54,48,23,2,46
265,7,50,53,16,41,34
264,5,25,31,13,1,33
263,8,50,26,9,53,43
262,53,60,48,20,58,11
261,5,54,20,56,30,16
260,43,4,60,59,6,33
259,20,43,33,13,15,58
258,12,60,54,7,55,50
257,28,5,1,34,4,19
256,21,52,34,26,2,32
255,32,44,55,19,20,16
254,4,30,56,21,22,1
253,12,11,56,44,24,37
252,17,54,4,51,32,26
251,34,15,23,55,49,30
250,55,25,41,42,43,7
249,21,55,54,40,36,49
248,56,16,34,41,35,32
247,34,3,30,10,23,46
246,2,57,32,43,16,37
245,44,51,27,53,8,60
244,19,60,50,24,47,33
243,20,47,23,32,16,11
242,22,7,4,21,28,56
241,11,57,40,35,56,31
240,59,28,25,41,57,38
239,33,21,44,46,47,6
238,15,9,41,13,37,42
237,36,7,45,31,56,57
236,10,52,50,57,25,60
235,29,41,55,2,31,22
234,15,45,54,25,42,41
233,45,3,24,36,7,32
232,29,19,41,22,37,59
231,16,59,27,42,44,36
230,56,44,41,40,8,53
229,39,45,11,21,33,13
228,16,40,45,59,43,13
227,37,26,27,42,11,48
226,2,50,59,38,49,1
225,21,16,4,37,2,58
224,20,16,18,7,44,21
223,28,24,22,2,58,6
222,5,48,30,55,52,19
221,54,13,58,43,50,27
220,36,53,55,13,60,14
219,26,23,49,28,42,36
218,54,40,42,17,47,12
217,27,32,3,51,49,45
216,35,42,59,18,30,14
215,7,58,28,53,37,46
214,30,12,6,50,35,31
213,3,30,9,35,23,32
212,29,57,15,45,59,6
211,10,20,40,45,50,33
210,37,58,20,38,48,32
209,13,52,32,41,21,26
208,23,15,57,24,47,25
207,19,7,3,55,24,53
206,20,26,56,18,34,51
205,26,32,54,43,46,40
204,31,41,51,39,58,29
203,11,55,44,19,29,47
202,49,53,44,12,24,45
201,55,22,5,30,35,20
200,12,15,44,34,51,19
199,52,37,57,16,10,50
198,40,23,1,18,35,8
197,19,52,29,15,12,5
196,32,17,9,14,24,7
195,17,3,44,37,9,32
194,32,42,43,25,28,33
193,12,4,11,49,43,19
192,1,60,26,41,28,54
191,58,5,41,3,1,23
190,32,40,42,21,10,5
189,41,53,38,4,31,15
188,34,42,43,46,27,17
187,6,44,58,41,36,48
186,24,26,51,25,14,23
185,59,17,22,46,43,55
184,9,60,21,16,41,34
183,16,11,7,40,44,2
182,46,60,5,10,28,3
181,33,1,55,35,51,27
180,39,6,29,60,51,23
179,6,53,5,26,27,23
178,5,27,19,26,15,33
177,35,22,39,41,59,38
176,28,4,1,45,53,3
175,10,20,13,1,42,50
174,11,52,22,23,36,59
173,29,28,49,17,42,50
172,49,36,14,26,35,10
171,54,27,4,43,40,46
170,7,51,55,41,58,46
169,52,51,37,13,21,1
168,45,2,35,9,50,31
167,1,38,48,28,11,33
166,60,57,59,13,12,22
165,39,56,19,23,10,35
164,4,19,14,10,44,28
163,41,56,27,36,53,8
162,23,33,51,38,48,21
161,25,37,30,39,6,41
160,13,42,52,58,2,54
159,16,9,50,58,11,35
158,58,43,51,14,17,4
157,17,13,4,44,41,21
156,52,23,42,17,55,49
155,12,32,44,43,35,30
154,8,10,24,33,45,48
153,47,2,31,42,45,30
152,12,5,15,51,58,29
151,3,43,16,56,52,20
150,50,44,12,55,52,54
149,11,45,48,7,28,20
148,32,55,59,41,58,35
147,24,6,38,23,28,16
146,51,34,25,60,42,32
145,43,15,41,51,16,31
144,8,32,44,36,45,55
143,40,18,6,20,50,53
142,20,59,19,54,15,8
141,10,22,42,13,41,58
140,55,31,46,44,41,7
139,26,27,13,42,41,3
138,41,14,37,5,40,27
137,26,15,16,22,19,49
136,17,25,45,38,1,59
135,35,40,21,59,53,22
134,60,32,25,36,52,4
133,19,57,6,39,34,5
132,44,35,50,41,9,7
131,30,9,17,27,4,44
130,13,42,38,49,53,29
129,46,54,10,9,1,32
128,23,43,3,21,9,18
127,59,21,51,54,29,50
126,32,28,6,10,11,40
125,56,47,25,59,53,41
124,52,5,34,57,15,41
123,13,42,16,32,14,26
122,20,43,39,11,53,17
121,53,41,44,2,29,55
120,46,45,16,40,27,3
119,47,21,1,50,36,38
118,22,57,37,9,25,56
117,53,42,27,20,33,25
116,36,42,32,5,13,51
115,6,14,24,20,4,38
114,47,54,18,6,12,37
113,34,54,26,28,55,7
112,37,43,34,20,12,42
111,52,32,4,33,25,22
110,57,58,18,31,43,52
109,54,13,44,49,48,1
108,60,29,34,24,21,59
107,2,24,52,4,16,51
106,24,16,38,5,39,35
105,3,13,31,43,46,49
104,13,1,38,21,52,4
103,9,1,57,7,54,49
102,44,42,37,56,19,20
101,39,1,37,31,29,18
100,46,48,30,14,29,51
99,30,33,24,11,46,60
98,43,33,14,31,35,13
97,56,53,11,14,5,35
96,4,42,58,26,7,40
95,46,60,6,40,50,45
94,28,51,55,18,52,8
93,22,53,31,28,2,36
92,5,23,51,3,1,24
91,60,4,10,35,39,2
90,21,26,40,54,9,52
89,59,42,34,13,44,55
88,45,37,29,4,43,18
87,40,4,28,32,11,5
86,54,21,6,34,36,22
85,47,15,30,37,45,6
84,10,34,4,6,25,40
83,24,16,4,42,57,15
82,51,36,53,29,18,15
81,47,41,10,60,54,23
80,51,40,37,23,48,28
79,43,25,2,13,31,17
78,22,32,46,12,25,31
77,29,54,40,57,49,21
76,33,18,23,8,17,53
75,36,49,37,35,24,21
74,2,24,34,50,38,37
73,57,25,45,28,51,26
72,19,48,43,1,34,44
71,53,16,45,43,33,27
70,40,17,23,43,27,58
69,56,58,34,53,25,45
68,53,13,3,1,12,59
67,47,14,27,52,17,12
66,15,26,12,33,48,13
65,20,1,5,32,25,34
64,8,54,50,60,23,12
63,26,9,41,49,25,40
62,52,13,6,24,8,31
61,59,8,18,29,42,44
60,38,14,21,15,3,20
59,28,13,34,2,8,54
58,30,49,27,37,12,44
57,27,17,16,34,7,59
56,51,35,59,7,20,2
55,29,2,14,38,23,52
54,5,21,9,56,18,36
53,42,13,3,46,38,16
52,58,15,59,30,38,46
51,23,24,42,25,17,47
50,57,44,21,16,58,6
49,33,7,43,35,13,55
48,47,5,34,28,2,50
47,35,17,3,48,25,56
46,32,46,1,60,24,23
45,30,7,37,55,44,53
44,47,38,18,14,29,44
43,2,58,25,6,26,17
42,24,36,19,33,7,11
41,38,26,35,39,12,47
40,3,12,46,5,47,8
39,16,37,45,52,56,12
38,55,42,10,43,45,54
37,22,6,7,52,38,60
36,13,3,51,17,29,25
35,21,57,16,23,54,4
34,15,13,57,53,40,17
33,5,33,49,17,42,39
32,43,33,14,36,5,44
31,56,19,28,48,17,45
30,38,50,7,29,15,14
29,14,56,58,8,43,3
28,60,6,22,3,24,54
27,44,33,13,51,17,20
26,50,53,57,10,58,22
25,56,50,55,54,24,43
24,1,8,14,28,33,43
23,17,52,51,59,39,37
22,9,38,56,1,31,46
21,49,46,6,53,33,36
20,25,28,30,33,51,11
19,5,25,12,10,60,24
18,37,36,56,27,42,23
17,10,20,6,19,51,13
16,60,58,49,32,20,34
15,60,12,33,52,35,51
14,16,2,27,47,23,53
13,47,32,50,54,18,56
12,20,27,43,16,19,4
11,25,15,58,37,59,38
10,25,4,18,57,21,38
9,55,43,56,54,8,60
8,53,17,38,4,47,37
7,56,38,21,20,3,5
6,19,40,7,13,22,47
5,1,19,46,6,16,2
4,6,59,42,27,1,5
3,36,30,10,11,29,47
2,9,39,37,49,43,41
1,41,5,4,52,30,33require('dotenv').config();
const connectDB = require('./config/db');
const { client } = require('./client');
const handleCommand = require('./controllers/commandHandler');

// Evento para gerar o QR Code para autentica√ß√£o
client.on('qr', (qr) => {
  const qrcode = require('qrcode-terminal');
  qrcode.generate(qr, { small: true });
});

// Evento disparado quando o bot est√° conectado e pronto para uso
client.on('ready', () => {
  console.log('‚úÖ Bot conectado e pronto!');
});

// Evento para escutar e processar as mensagens recebidas
client.on('message', async (message) => {
  // Verifica se o corpo da mensagem come√ßa com "!" para identificar um comando
  if (message.body.startsWith('!')) {
    try {
      // Passa o objeto 'message' e tamb√©m o 'client' para o manipulador de comandos
      await handleCommand(message, client);
    } catch (error) {
      // Captura e exibe qualquer erro que ocorra durante o processamento do comando
      console.error('ERRO FATAL AO PROCESSAR COMANDO:', error);
      
      // Opcional: Envia uma mensagem de erro para o usu√°rio no WhatsApp
      await message.reply('‚ùå Ocorreu um erro inesperado ao processar seu comando.');
    }
  }
});

connectDB();{
  "name": "bot-whatsapp",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": "",
  "dependencies": {
    "@open-wa/wa-automate": "^4.76.0",
    "axios": "^1.10.0",
    "canvas": "^3.1.2",
    "chess-engine": "^0.0.0",
    "chess.js": "^1.4.0",
    "csv-parse": "^6.0.0",
    "dotenv": "^17.2.0",
    "jimp": "^0.16.1",
    "mongoose": "^8.16.4",
    "play-dl": "^1.9.7",
    "poker-evaluator": "^2.1.0",
    "qrcode-terminal": "^0.12.0",
    "uci": "^0.3.4",
    "whatsapp-web.js": "^1.31.0",
    "ytdl-core": "^4.11.5",
    "ytsr": "^3.8.4"
  }
}
const { buscarElo } = require('./services/riotService'); // ajuste o caminho conforme seu projeto

async function testar() {
  const gameName = 'Etheldreda';  // coloque o nick que quiser testar
  const tagLine = 'Negs';         // coloque a tag do jogador

  try {
    console.log(`Testando elo para ${gameName}#${tagLine}...`);
    const resultado = await buscarElo(gameName, tagLine);
    console.log('Resultado:\n', resultado);
  } catch (error) {
    console.error('Erro no teste:', error);
  }
}

testar();
// games/imageRenderer.js
const { createCanvas } = require('canvas');
const fs = require('fs');
const path = require('path');

// Mapeamento de valores para o que ser√° exibido na carta
const valorMap = {
    'T': '10', 'J': 'J', 'Q': 'Q', 'K': 'K', 'A': 'A'
};

// Mapeamento de naipes para √≠cones e cores
const naipeInfo = {
    's': { icone: '‚ô†', cor: 'black' }, // Espadas
    'h': { icone: '‚ô•', cor: 'red' },   // Copas
    'd': { icone: '‚ô¶', cor: 'red' },   // Ouros
    'c': { icone: '‚ô£', cor: 'black' }  // Paus
};

/**
 * Desenha uma √∫nica carta em um contexto de canvas.
 * @param {CanvasRenderingContext2D} ctx - O contexto 2D do canvas onde a carta ser√° desenhada.
 * @param {string} carta - A string da carta (ex: 'As', 'Td').
 * @param {number} x - A posi√ß√£o X inicial para desenhar a carta.
 * @param {number} y - A posi√ß√£o Y inicial para desenhar a carta.
 */
function desenharCarta(ctx, carta, x, y) {
    const larguraCarta = 100;
    const alturaCarta = 140;
    const raioBorda = 10;

    const valor = carta[0];
    const naipe = carta[1];

    const info = naipeInfo[naipe] || { icone: '?', cor: 'black' };
    const valorVisual = valorMap[valor] || valor;

    // Sombra da carta
    ctx.shadowColor = 'rgba(0, 0, 0, 0.3)';
    ctx.shadowBlur = 10;
    ctx.shadowOffsetX = 5;
    ctx.shadowOffsetY = 5;

    // Fundo branco da carta com bordas arredondadas
    ctx.fillStyle = 'white';
    ctx.beginPath();
    ctx.moveTo(x + raioBorda, y);
    ctx.lineTo(x + larguraCarta - raioBorda, y);
    ctx.quadraticCurveTo(x + larguraCarta, y, x + larguraCarta, y + raioBorda);
    ctx.lineTo(x + larguraCarta, y + alturaCarta - raioBorda);
    ctx.quadraticCurveTo(x + larguraCarta, y + alturaCarta, x + larguraCarta - raioBorda, y + alturaCarta);
    ctx.lineTo(x + raioBorda, y + alturaCarta);
    ctx.quadraticCurveTo(x, y + alturaCarta, x, y + alturaCarta - raioBorda);
    ctx.lineTo(x, y + raioBorda);
    ctx.quadraticCurveTo(x, y, x + raioBorda, y);
    ctx.closePath();
    ctx.fill();

    // Resetar sombra para n√£o afetar o texto
    ctx.shadowColor = 'transparent';

    // Desenhar valor e naipe
    ctx.fillStyle = info.cor;
    
    // Valor no canto superior esquerdo
    ctx.font = 'bold 24px Arial';
    ctx.textAlign = 'left';
    ctx.textBaseline = 'top';
    ctx.fillText(valorVisual, x + 8, y + 5);

    // Naipe grande no centro
    ctx.font = '60px Arial';
    ctx.textAlign = 'center';
    ctx.textBaseline = 'middle';
    ctx.fillText(info.icone, x + larguraCarta / 2, y + alturaCarta / 2);
}

/**
 * Renderiza uma imagem contendo v√°rias cartas lado a lado em um fundo de mesa.
 * @param {string[]} cartas - Array de strings de cartas. Ex: ['As', 'Kd', 'Qc'].
 * @param {string} outputPath - O caminho completo para salvar o arquivo de imagem.
 * @returns {Promise<string>} O caminho do arquivo salvo.
 */
async function renderizarCartas(cartas, outputPath) {
    const larguraCarta = 100;
    const alturaCarta = 140;
    const espacamento = 15; // Espa√ßo entre as cartas
    const padding = 20;     // Espa√ßo ao redor do conjunto de cartas

    const numCartas = cartas.length;
    if (numCartas === 0) {
        // Se n√£o houver cartas, podemos criar uma imagem vazia ou retornar null
        // Por enquanto, vamos criar uma pequena imagem de "mesa vazia"
        const canvasVazio = createCanvas(200, 180);
        const ctxVazio = canvasVazio.getContext('2d');
        ctxVazio.fillStyle = '#006400'; // Verde escuro
        ctxVazio.fillRect(0, 0, 200, 180);
        ctxVazio.fillStyle = 'white';
        ctxVazio.font = '20px Arial';
        ctxVazio.textAlign = 'center';
        ctxVazio.fillText('Mesa Vazia', 100, 90);
        fs.writeFileSync(outputPath, canvasVazio.toBuffer('image/png'));
        return outputPath;
    }

    const larguraTotal = (larguraCarta * numCartas) + (espacamento * (numCartas - 1)) + (padding * 2);
    const alturaTotal = alturaCarta + (padding * 2);

    const canvas = createCanvas(larguraTotal, alturaTotal);
    const ctx = canvas.getContext('2d');

    // Fundo da mesa (verde)
    ctx.fillStyle = '#006400'; // Verde escuro
    ctx.fillRect(0, 0, larguraTotal, alturaTotal);

    // Desenha cada carta
    cartas.forEach((carta, index) => {
        const x = padding + index * (larguraCarta + espacamento);
        const y = padding;
        desenharCarta(ctx, carta, x, y);
    });

    // Salva o canvas como um arquivo de imagem PNG
    const buffer = canvas.toBuffer('image/png');
    fs.writeFileSync(outputPath, buffer);

    console.log(`[ImageRenderer] Imagem salva em: ${outputPath}`);
    return outputPath;
}

module.exports = { renderizarCartas };
// C:\Users\Guilherme\bot-whatsapp\games\Truco\truco.js

const sessionManager = require('../../sessions/sessionManager');
const baralhoUtils = require('../baralhoUtils');
const trucoBot = require('./botPlayer');
const { MessageMedia } = require('whatsapp-web.js');
const fs = require('fs');
const NAIPE_EMOJI = { 's': '‚ô†Ô∏è', 'h': '‚ô•Ô∏è', 'd': '‚ô¶Ô∏è', 'c': '‚ô£Ô∏è' };
const ORDEM_FORCA_COMUM = ['4', '5', '6', '7', 'Q', 'J', 'K', 'A', '2', '3'];
const ORDEM_FORCA_NAIPE_MANILHA = { 'd': 1, 's': 2, 'h': 3, 'c': 4 }; // Ouros, Espadas, Copas, Paus

// A ordem de for√ßa das cartas para determinar a manilha (vira '3', manilha √© '4')
const ORDEM_MANILHAS = ['4', '5', '6', '7', 'Q', 'J', 'K', 'A', '2', '3'];

function getManilhaValor(vira) {
    const valorVira = vira[0];
    const indexVira = ORDEM_MANILHAS.indexOf(valorVira);
    // O operador de m√≥dulo (%) garante que se o vira for '3' (√∫ltimo), a manilha seja '4' (primeiro)
    const indexManilha = (indexVira + 1) % ORDEM_MANILHAS.length;
    return ORDEM_MANILHAS[indexManilha];
}

function formatarMaoParaMensagem(mao, manilhaValor) {
    // 1. Come√ßa a mensagem de forma limpa
    let textoMao = 'Sua m√£o:\n\n';

    // 2. Adiciona a lista de cartas
    let temCarta = false;
    mao.forEach((carta, index) => {
        // Mostra apenas as cartas que n√£o foram jogadas (n√£o s√£o nulas)
        if (carta) {
            temCarta = true;
            const valor = carta[0];
            const naipe = carta[1];
            textoMao += `${index + 1}. ${valor}${NAIPE_EMOJI[naipe]}\n`;
        }
    });
    
    // 3. Adiciona a informa√ß√£o da manilha
    textoMao += `\n*Manilha:* ${manilhaValor}\n\n`;

    if (!temCarta) {
        return 'Voc√™ n√£o tem mais cartas para jogar.';
    }
    
    // 4. Adiciona as instru√ß√µes no final, onde fazem mais sentido
    textoMao += '\nPara jogar, digite:\n`!carta <n√∫mero>`\nou\n`!carta <n√∫mero> hide` (para esconder)';
    
    return textoMao;
}

function getForcaCarta(carta, manilhaValor) {
    const valor = carta[0];
    const naipe = carta[1];

    // Se a carta for uma manilha
    if (valor === manilhaValor) {
        // As manilhas t√™m uma for√ßa base alta (100) + a for√ßa do seu naipe
        return 100 + ORDEM_FORCA_NAIPE_MANILHA[naipe];
    }

    // Se for uma carta comum, a for√ßa √© sua posi√ß√£o na ordem de for√ßa
    return ORDEM_FORCA_COMUM.indexOf(valor);
}

function prepararJogo(session) {
    console.log(`[Truco] Preparando jogo para a sess√£o: ${session.groupId}`);
    session.gameState = {
        rodada: 1,
        placar: { time1: 0, time2: 0 },
        valorDaMao: 1,
        turnosGanhos: { time1: 0, time2: 0 },
        vencedorPrimeiroTurno: null,
        primeiroTurnoEmpatado: false,
        numeroDoTurno: 1,
        jogadores: session.players.map(p => ({ ...p, mao: [] })),
        baralho: [],
        vira: null,
        manilhaValor: null,
        cartasNaMesa: [],
        vezDoJogador: 0,
        maoDaVez: 0,
        status: 'aguardando_jogada',
        trucoState: null,
        actionLock: false,
        botActionId: null
    };
    session.status = 'em_jogo';
    console.log(`[Truco] Jogo preparado com ${session.gameState.jogadores.length} jogadores.`);
}

/**
 * Inicia uma nova rodada de Truco.
 * @param {object} session - A sess√£o do jogo.
 * @param {object} client - O cliente do WhatsApp.
 */
async function iniciarRodada(session, client) {
    console.log(`[Truco] Iniciando rodada para a sess√£o: ${session.groupId}`);
    const gameState = session.gameState;
    
    // 1. Gerar baralho de truco e o vira
    const baralho = baralhoUtils.gerarBaralhoTruco();
    const vira = baralho.pop(); // Pega a carta do topo para ser o vira
    gameState.vira = vira;
    gameState.baralho = baralho;

    // 2. Definir o valor da manilha
    gameState.manilhaValor = getManilhaValor(vira);
    console.log(`[Truco] Vira: ${vira} | Manilha: ${gameState.manilhaValor}`);
    
    // 3. Distribuir 3 cartas para cada jogador
    for (const jogador of gameState.jogadores) {
        jogador.mao = gameState.baralho.splice(0, 3);
    }
    
    // 4. Enviar a m√£o para cada jogador (de forma privada)
    for (const jogador of gameState.jogadores) {
        if (jogador.id === trucoBot.BOT_ID) {
            console.log(`[Truco] M√£o do Bot ${jogador.name}: ${jogador.mao.join(', ')}`);
        } else {
            try {
                const imagePath = await baralhoUtils.gerarImagemCartas(jogador.mao);
                const textoMao = formatarMaoParaMensagem(jogador.mao, gameState.manilhaValor);

                if (imagePath) {
                    const media = MessageMedia.fromFilePath(imagePath);
                    // Envia a imagem COM o novo texto como legenda
                    await client.sendMessage(jogador.id, media, { caption: textoMao });
                    fs.unlinkSync(imagePath);
                } else {
                    // Fallback caso a imagem falhe: envia s√≥ o texto
                    await client.sendMessage(jogador.id, textoMao);
                }
            } catch (error) {
                console.error(`[Truco] Falha ao enviar m√£o para ${jogador.id}. Enviando como texto. Erro:`, error);
                await client.sendMessage(jogador.id, `Sua m√£o: ${jogador.mao.join(', ')}`);
            }
        }
    }
    
    // 5. Anunciar o vira e de quem √© a vez no grupo
    const jogadorDaVez = gameState.jogadores[gameState.vezDoJogador];
    let viraImagePath;
    try {
        viraImagePath = await baralhoUtils.gerarImagemCartas([vira]);
        if(viraImagePath) {
            const media = MessageMedia.fromFilePath(viraImagePath);
            await client.sendMessage(session.groupId, media, { 
                caption: `*Rodada ${gameState.rodada} come√ßando!* üé¥\n\nO *vira* √© este. A manilha √© *${gameState.manilhaValor}*.\n\n√â a vez de *${jogadorDaVez.name}* jogar!`
            });
            fs.unlinkSync(viraImagePath);
        }
    } catch (error) {
        console.error('[Truco] Falha ao gerar imagem do vira. Enviando como texto. Erro:', error);
        await client.sendMessage(session.groupId, `*Rodada ${gameState.rodada} come√ßando!* üé¥\n\nO *vira* √© *${vira}*. A manilha √© *${gameState.manilhaValor}*.\n\n√â a vez de *${jogadorDaVez.name}* jogar!`);
    }

    // 6. Atualizar status e aguardar jogada
    gameState.status = 'aguardando_jogada';

    // 7. Se for a vez do bot, aciona sua jogada
    if (jogadorDaVez.id === trucoBot.BOT_ID) {
        await processarAcaoBot(session, client);
    } else {
        // CORRE√á√ÉO: Se o primeiro a jogar for humano, libera a trava de a√ß√£o.
¬† ¬† ¬† ¬† gameState.actionLock = false;
    }
}

async function finalizarMao(session, client, motivo = { tipo: 'vitoria_normal' }) {
    console.log(`\n[DEBUG] --- Finalizando M√£o #${session.gameState.rodada} --- Motivo: ${motivo.tipo}`);    
    const gameState = session.gameState;
    const { placar } = gameState;

    let mensagemResultado = '';

    switch (motivo.tipo) {
        case 'fuga':
            // Caso a m√£o termine porque algu√©m correu, montamos esta mensagem.
            const nomeTimeVencedorFuga = motivo.timeVencedor === 'time1' ? 'Time Blue üîµ' : 'Time Red üî¥';
            const timeQueCorreu = motivo.timeVencedor === 'time1' ? 'Time Red üî¥' : 'Time Blue üîµ';
            mensagemResultado = `*${timeQueCorreu}* correu da aposta! üèÉ‚Äç‚ôÇÔ∏è\n\n*${nomeTimeVencedorFuga}* marcou *${motivo.valor}* ponto(s).`;
            break;

        case 'vitoria_normal':
        default:
            // Esta √© a l√≥gica original, que agora s√≥ roda para vit√≥rias normais ou empates.
            const { turnosGanhos, valorDaMao } = gameState;
            let timeVencedor = null;
            if (turnosGanhos.time1 > turnosGanhos.time2) {
                timeVencedor = 'time1';
                placar.time1 += valorDaMao;
            } else if (turnosGanhos.time2 > turnosGanhos.time1) {
                timeVencedor = 'time2';
                placar.time2 += valorDaMao;
            }

            if (timeVencedor) {
                const nomeTimeVencedor = timeVencedor === 'time1' ? 'Time Blue üîµ' : 'Time Red üî¥';
                mensagemResultado = `*${nomeTimeVencedor}* venceu a m√£o e marcou *${valorDaMao}* ponto(s).`;
            } else {
                mensagemResultado = `A m√£o empatou! Ningu√©m marcou pontos.`;
            }
            break;
    }

    // A montagem final da mensagem √© a mesma para todos os casos.
    const mensagemPlacar = `*Fim da m√£o!*\n\n${mensagemResultado}\n\n*Placar:*\nTime Blue üîµ: *${placar.time1}* \nTime Red üî¥: *${placar.time2}*`;

    await client.sendMessage(session.groupId, mensagemPlacar);

    // O resto da fun√ß√£o para verificar o fim do jogo e preparar a pr√≥xima m√£o continua igual.
    if (placar.time1 >= 12 || placar.time2 >= 12) {
        const nomeTimeVencedor = placar.time1 >= 12 ? 'Time Blue üîµ' : 'Time Red üî¥';
        await client.sendMessage(session.groupId, `*O JOGO ACABOU!* üèÜ\n\nParab√©ns ao *${nomeTimeVencedor}* pela vit√≥ria!`);
        sessionManager.endSession(session.groupId);
        return;
    }

    gameState.rodada++;
    gameState.numeroDoTurno = 1;
    gameState.valorDaMao = 1;
    gameState.turnosGanhos = { time1: 0, time2: 0 };
    gameState.primeiroTurnoEmpatado = false;
    gameState.cartasNaMesa = [];
    gameState.botActionId = null;
    gameState.vezDoJogador = (gameState.rodada - 1) % gameState.jogadores.length;

    await client.sendMessage(session.groupId, `--- Preparando a ${gameState.rodada}¬™ m√£o ---`);
    await iniciarRodada(session, client);
}

async function finalizarTurno(session, client) {
    const gameState = session.gameState;
    console.log(`\n[DEBUG] --- Finalizando Turno #${gameState.numeroDoTurno} ---`);
    console.log('[Truco] Finalizando turno. Cartas na mesa:', gameState.cartasNaMesa);

    let maiorForca = -1;
    let jogadaVencedora = null;

    for (const jogada of gameState.cartasNaMesa) {
        const forca = jogada.isHidden ? -1 : getForcaCarta(jogada.carta, gameState.manilhaValor);
        console.log(`[FORCA_DEBUG] Carta: ${jogada.carta}, Manilha: ${gameState.manilhaValor}, For√ßa Calculada: ${forca}`);
        if (forca > maiorForca) {
            maiorForca = forca;
            jogadaVencedora = jogada;
        }
    }

    const vencedores = gameState.cartasNaMesa.filter(j => !j.isHidden && getForcaCarta(j.carta, gameState.manilhaValor) === maiorForca);
    let mensagemResultado = '';
    let aMaoAcabou = false;

    if (vencedores.length > 1) {
        mensagemResultado = 'O turno *empatou*!';
        if (gameState.numeroDoTurno === 1) {
            gameState.primeiroTurnoEmpatado = true;
            mensagemResultado += '\nQuem vencer o pr√≥ximo turno, leva a m√£o!';
        } else {
            aMaoAcabou = true;
        }
    } else {
        const jogadorVencedor = gameState.jogadores.find(p => p.id === jogadaVencedora.jogadorId);
        const timeIndex = gameState.jogadores.findIndex(p => p.id === jogadorVencedor.id);
        const timeVencedorTurno = (timeIndex % 2 === 0) ? 'time1' : 'time2';
        gameState.turnosGanhos[timeVencedorTurno]++;
        
        if (gameState.numeroDoTurno === 1) {
            gameState.vencedorPrimeiroTurno = timeVencedorTurno;
        }

        console.log(`[DEBUG] Vencedor do turno: ${timeVencedorTurno}. Placar de turnos: T1=${gameState.turnosGanhos.time1}, T2=${gameState.turnosGanhos.time2}`);
        mensagemResultado = `*${jogadorVencedor.name}* (${timeVencedorTurno === 'time1' ? 'üîµ' : 'üî¥'}) venceu o turno!`;
    }
    
    await client.sendMessage(session.groupId, mensagemResultado);

    const { turnosGanhos, numeroDoTurno, primeiroTurnoEmpatado } = gameState;
    const vitoriasTime1 = turnosGanhos.time1;
    const vitoriasTime2 = turnosGanhos.time2;

    if (aMaoAcabou || vitoriasTime1 === 2 || vitoriasTime2 === 2 || (primeiroTurnoEmpatado && numeroDoTurno === 2 && vitoriasTime1 !== vitoriasTime2) || numeroDoTurno === 3) {
        await finalizarMao(session, client);
        return;
    }

    gameState.numeroDoTurno++;
    gameState.cartasNaMesa = [];
    
    let proximoJogadorIndex;
    if (vencedores.length > 1) {
        // REGRA CORRIGIDA: Se o turno empatou, o "m√£o" (quem come√ßou) joga de novo.
        proximoJogadorIndex = gameState.maoDaVez;
    } else if (vitoriasTime1 === 1 && vitoriasTime2 === 1) {
        proximoJogadorIndex = gameState.jogadores.findIndex(p => {
            const timeDoJogador = (gameState.jogadores.findIndex(j => j.id === p.id) % 2 === 0) ? 'time1' : 'time2';
            return timeDoJogador === gameState.vencedorPrimeiroTurno;
        });
    } else {
        proximoJogadorIndex = gameState.jogadores.findIndex(p => p.id === jogadaVencedora.jogadorId);
    }
        
    gameState.vezDoJogador = proximoJogadorIndex;
    // **ATUALIZA√á√ÉO IMPORTANTE:** O pr√≥ximo a jogar se torna o "m√£o" do novo turno.
    gameState.maoDaVez = proximoJogadorIndex; 
    
    const proximoJogador = gameState.jogadores[proximoJogadorIndex];

    await client.sendMessage(session.groupId, `--- ${gameState.numeroDoTurno}¬∫ Turno ---\n√â a vez de *${proximoJogador.name}* jogar.`);
    
    if (proximoJogador.id === trucoBot.BOT_ID) {
        await processarAcaoBot(session, client);
    } else {
        gameState.actionLock = false;
    }
}

async function _avancarJogo(session, client, jogadorAtualIndex) {
    const gameState = session.gameState;
    const totalJogadores = gameState.jogadores.length;

    if (gameState.cartasNaMesa.length === totalJogadores) {
        await finalizarTurno(session, client);
    } else {
        gameState.vezDoJogador = (jogadorAtualIndex + 1) % totalJogadores;
        const proximoJogador = gameState.jogadores[gameState.vezDoJogador];
        await client.sendMessage(session.groupId, `√â a vez de *${proximoJogador.name}*!`);

        if (proximoJogador.id === trucoBot.BOT_ID) {
            // A trava √© passada para o bot, que a liberar√°
            await processarAcaoBot(session, client);
        } else {
            // Se o pr√≥ximo for humano, libera a trava agora
            gameState.actionLock = false;
        }
    }
}

async function jogarCarta(message, session, client, isInternalCall = false) { // Par√¢metro adicionado
    const gameState = session.gameState;
    
    // Verifica√ß√£o modificada: s√≥ bloqueia se n√£o for uma chamada interna
    if (gameState.actionLock && !isInternalCall) {
        return console.log('[Truco] A√ß√£o ignorada: Jogo est√° processando outra a√ß√£o.');
    }
    gameState.actionLock = true;

    try {
        const { author, body } = message;
        const playerId = author || message.from;
        const jogadorAtualIndex = gameState.vezDoJogador;
        const jogador = gameState.jogadores[jogadorAtualIndex];

        if (gameState.status !== 'aguardando_jogada' || jogador.id !== playerId) {
            if (playerId !== trucoBot.BOT_ID) {
                message.reply("Calma, n√£o √© sua vez de jogar!");
            }
            gameState.actionLock = false;
            return;
        }

        const args = body.split(' ');
        const numeroCarta = parseInt(args[1]);

        if (isNaN(numeroCarta) || numeroCarta < 1 || numeroCarta > 3 || !jogador.mao[numeroCarta - 1]) {
            message.reply(`Carta inv√°lida. Verifique os n√∫meros dispon√≠veis na sua m√£o.`);
            gameState.actionLock = false;
            return;
        }
        
        const isHidden = args[2]?.toLowerCase() === 'hide';
        const cartaJogada = jogador.mao[numeroCarta - 1];
        jogador.mao[numeroCarta - 1] = null;
        gameState.cartasNaMesa.push({ jogadorId: playerId, carta: cartaJogada, isHidden: isHidden });
        console.log(`[Truco] Jogador ${jogador.name} jogou ${cartaJogada}${isHidden ? ' (escondida)' : ''}`);

        if (isHidden) {
            await client.sendMessage(session.groupId, `*${jogador.name}* jogou uma carta virada para baixo. ü§´`);
        } else {
            const imagePath = await baralhoUtils.gerarImagemCartas([cartaJogada]);
            const media = MessageMedia.fromFilePath(imagePath);
            await client.sendMessage(session.groupId, media, { caption: `*${jogador.name}* jogou:` });
            fs.unlinkSync(imagePath);
        }

        if (jogador.id !== trucoBot.BOT_ID) {
            const maoRestante = jogador.mao.filter(c => c !== null);
            if (maoRestante.length > 0) {
                 const imagePathMao = await baralhoUtils.gerarImagemCartas(maoRestante);
                 const textoMao = formatarMaoParaMensagem(jogador.mao, gameState.manilhaValor);
                 const mediaMao = MessageMedia.fromFilePath(imagePathMao);
                 await client.sendMessage(jogador.id, mediaMao, { caption: textoMao });
                 fs.unlinkSync(imagePathMao);
            } else {
                 await client.sendMessage(jogador.id, "Voc√™ jogou sua √∫ltima carta!");
            }
        }
        
        // A fun√ß√£o _avancarJogo n√£o √© mais necess√°ria, a l√≥gica foi reincorporada aqui
        const totalJogadores = gameState.jogadores.length;
        if (gameState.cartasNaMesa.length === totalJogadores) {
            await finalizarTurno(session, client);
        } else {
            gameState.vezDoJogador = (jogadorAtualIndex + 1) % totalJogadores;
            const proximoJogador = gameState.jogadores[gameState.vezDoJogador];
            await client.sendMessage(session.groupId, `√â a vez de *${proximoJogador.name}*!`);

            if (proximoJogador.id === trucoBot.BOT_ID) {
                await processarAcaoBot(session, client);
            } else {
                gameState.actionLock = false; // Libera trava se o pr√≥ximo for humano
            }
        }

    } catch (error) {
        console.error("[Truco] Erro em jogarCarta:", error);
        gameState.actionLock = false;
    }
}

async function processarAcaoBot(session, client) {
    const gameState = session.gameState;
    const currentActionId = Date.now(); // 1. Gera um "carimbo" √∫nico para esta ordem.
    gameState.botActionId = currentActionId; // 2. Atualiza o estado com o carimbo mais recente.

    try {
        await new Promise(resolve => setTimeout(resolve, 2000));

        // 3. VERIFICA√á√ÉO PRINCIPAL: A ordem ainda √© v√°lida?
        if (gameState.botActionId !== currentActionId) {
            console.log(`[Truco Bot] A√ß√£o obsoleta (ID: ${currentActionId}) foi ignorada.`);
            // A trava de a√ß√£o (actionLock) ser√° liberada pela nova a√ß√£o que tornou esta obsoleta.
            return; 
        }

        const comandoBot = trucoBot.decideAction(session);
        if (!comandoBot) {
            gameState.actionLock = false;
            return;
        }

        console.log(`[Truco Bot] Processando comando do bot: "${comandoBot}"`);

        // NOVO: Objeto de mensagem falso mais completo
        const fakeMessage = {
            author: trucoBot.BOT_ID,
            body: comandoBot,
            reply: (text) => { // Garante que a fun√ß√£o reply sempre exista
                console.log(`[Truco Bot] Tentou usar .reply com a mensagem: ${text}`);
                // N√£o enviamos a mensagem, apenas registramos no log, pois √© uma a√ß√£o interna.
            }
        };

        const command = comandoBot.split(' ')[0].toLowerCase();
        
        if (command === '!carta') {
¬† ¬† ¬† ¬† ¬† ¬† await jogarCarta(fakeMessage, session, client, true);
¬† ¬† ¬† ¬† } else if (command === '!aceitar') {
¬† ¬† ¬† ¬† ¬† ¬† await aceitarTruco(fakeMessage, session, client);
¬† ¬† ¬† ¬† } else if (command === '!correr') { // <-- ADICIONE ESTE BLOCO
            await correrDoTruco(fakeMessage, session, client);
        }
    } catch (error) {
        console.error("[Truco] Erro ao processar a√ß√£o do bot:", error);
        gameState.actionLock = false;
    }
}

async function pedirTruco(message, session, client) {
    const { author } = message;
    const gameState = session.gameState;

    if (gameState.status !== 'aguardando_jogada') return;
    if (gameState.valorDaMao > 1) {
        return message.reply("Opa, algu√©m j√° pediu truco ou mais!");
    }

    const playerIndex = gameState.jogadores.findIndex(p => p.id === author);
    const callingTeam = (playerIndex % 2 === 0) ? 'time1' : 'time2';
    const opponentTeam = (playerIndex % 2 === 0) ? 'time2' : 'time1';

    gameState.status = 'aguardando_resposta_truco';
    gameState.valorDaMao = 3;
    gameState.trucoState = { challengedBy: callingTeam, pendingResponseFrom: opponentTeam };
    
    const opponentTeamName = opponentTeam === 'time1' ? 'Time Blue üîµ' : 'Time Red üî¥';
    await client.sendMessage(session.groupId, `üó£Ô∏è *TRUCO!!!* \nA m√£o agora vale *3 pontos*! \n\nO ${opponentTeamName} deve responder com \`!aceitar\`, \`!correr\` ou \`!pede6\`.`);

    // --- CORRE√á√ÉO ADICIONADA AQUI ---
    // Ap√≥s pedir truco, verifica se o bot precisa responder
    const botIndex = gameState.jogadores.findIndex(p => p.id === trucoBot.BOT_ID);
    if (botIndex !== -1) {
        const botTeam = (botIndex % 2 === 0) ? 'time1' : 'time2';
        if (botTeam === opponentTeam) {
            console.log(`[Truco] Bot foi desafiado pelo TRUCO. Acionando sua resposta...`);
            await processarAcaoBot(session, client);
        }
    }
}

async function aceitarTruco(message, session, client) {
    const { author } = message;
    const gameState = session.gameState;

    if (gameState.status !== 'aguardando_resposta_truco') return;

    const playerIndex = gameState.jogadores.findIndex(p => p.id === author);
    const playerTeam = (playerIndex % 2 === 0) ? 'time1' : 'time2';

    if (playerTeam !== gameState.trucoState.pendingResponseFrom) {
        return message.reply("Calma, n√£o √© seu time que responde!");
    }

    gameState.status = 'aguardando_jogada';
    gameState.trucoState = null;

    const jogadorDaVez = gameState.jogadores[gameState.vezDoJogador];
    await client.sendMessage(session.groupId, `‚úÖ A aposta foi aceita! O jogo continua valendo *${gameState.valorDaMao}* pontos. \n\n√â a vez de *${jogadorDaVez.name}* jogar.`);

    if (jogadorDaVez.id === trucoBot.BOT_ID) {
        await processarAcaoBot(session, client);
    } else {
        // Se o pr√≥ximo jogador for humano, libera a trava.
        gameState.actionLock = false;
    }
}

async function correrDoTruco(message, session, client) {
    const { author } = message;
    const gameState = session.gameState;
    
    if (gameState.status !== 'aguardando_resposta_truco') return;
    
    const playerIndex = gameState.jogadores.findIndex(p => p.id === author);
    const playerTeam = (playerIndex % 2 === 0) ? 'time1' : 'time2';

    if (playerTeam !== gameState.trucoState.pendingResponseFrom) return;

    const valorCorrido = gameState.valorDaMao === 3 ? 1 : (gameState.valorDaMao / 2);
    const timeVencedor = gameState.trucoState.challengedBy;
    
    // A pontua√ß√£o continua sendo calculada aqui
    gameState.placar[timeVencedor] += valorCorrido;

    // A chamada para finalizarMao agora inclui um objeto 'motivo'
    // que descreve exatamente o que aconteceu.
    await finalizarMao(session, client, { 
        tipo: 'fuga', 
        timeVencedor: timeVencedor,
        valor: valorCorrido 
    });
}

async function aumentarAposta(message, session, client) {
    const { author, body } = message;
    const command = body.split(' ')[0].toLowerCase();
    const gameState = session.gameState;

    if (gameState.status !== 'aguardando_resposta_truco') return;
    
    const apostas = { '!pede6': 6, '!pede9': 9, '!pede12': 12 };
    const novoValor = apostas[command];

    if (!novoValor || novoValor <= gameState.valorDaMao) {
        return message.reply("Aposta inv√°lida!");
    }

    const playerIndex = gameState.jogadores.findIndex(p => p.id === author);
    const playerTeam = (playerIndex % 2 === 0) ? 'time1' : 'time2';
    
    if (playerTeam !== gameState.trucoState.pendingResponseFrom) return;

    // Inverte os pap√©is
    const newOpponentTeam = gameState.trucoState.challengedBy;
    gameState.valorDaMao = novoValor;
    gameState.trucoState = { challengedBy: playerTeam, pendingResponseFrom: newOpponentTeam };
    
    const opponentTeamName = newOpponentTeam === 'time1' ? 'Time Blue üîµ' : 'Time Red üî¥';
    await client.sendMessage(session.groupId, `CHAMOU PRA BRIGA! A aposta subiu para *${novoValor} PONTOS*! üí•\n\nE agora, ${opponentTeamName}? \`!aceitar\` ou \`!correr\`?`);

    // --- CORRE√á√ÉO ADICIONADA AQUI ---
    // Ap√≥s aumentar a aposta, verifica se o bot precisa responder
    const botIndex = gameState.jogadores.findIndex(p => p.id === trucoBot.BOT_ID);
    if (botIndex !== -1) {
        const botTeam = (botIndex % 2 === 0) ? 'time1' : 'time2';
        if (botTeam === newOpponentTeam) {
            console.log(`[Truco] Bot foi desafiado pelo AUMENTO. Acionando sua resposta...`);
            await processarAcaoBot(session, client);
        }
    }
}

function limparTudo() {
    console.log('[Truco] M√≥dulo de truco resetado.');
    // Atualmente, n√£o h√° estado global neste m√≥dulo para limpar,
    // mas esta fun√ß√£o serve como uma garantia para o futuro.
}


module.exports = {
    prepararJogo,
    iniciarRodada,
    jogarCarta,
    pedirTruco,
    aceitarTruco,
    correrDoTruco,
    aumentarAposta,
    getManilhaValor,
    limparTudo
};
// C:\Users\Guilherme\bot-whatsapp\games\Truco\playerActions.js

const truco = require('./truco');
const sessionManager = require('../../sessions/sessionManager');

async function handleGameCommand(message, session, client) {
    const { from, body } = message;
    const commandArgs = body.split(' ');
    const command = commandArgs[0].toLowerCase();
    
    console.log(`[Truco Actions] Comando '${command}' recebido de ${from} na sess√£o ${session.groupId}`);

    switch (command) {
        case '!carta':
            await truco.jogarCarta(message, session, client);
            break;
        case '!truco':
            await truco.pedirTruco(message, session, client);
            break;
        case '!aceitar':
            await truco.aceitarTruco(message, session, client);
            break;
        case '!correr':
            await truco.correrDoTruco(message, session, client);
            break;
        case '!pede6':
        case '!pede9':
        case '!pede12':
            await truco.aumentarAposta(message, session, client);
            break;
        
        // --- CORRE√á√ÉO IMPORTANTE AQUI ---
        case '!sair':
            // 1. Manda o m√≥dulo de Truco limpar qualquer estado interno
            truco.limparTudo();
            
            // 2. AGORA, encerra a sess√£o no gerenciador
            if (sessionManager.endSession(session.groupId)) {
                await message.reply('O jogo foi encerrado.');
            }
            break;
            
        default:
            if (command.startsWith('!')) {
                 await message.reply("Comando de Truco n√£o reconhecido.");
            }
            break;
    }
}

module.exports = {
    handleGameCommand
};// C:\Users\Guilherme\bot-whatsapp\games\Truco\botPlayer.js

const BOT_ID = 'bot_truco@cpu.bot';
const BOT_NAME = 'BOT Z√© da Ro√ßa';

/**
 * Cria um objeto de jogador para o bot.
 * @returns {{id: string, name: string}}
 */
function createBotPlayer() {
    console.log(`[TrucoBot] Criando jogador bot: ${BOT_NAME}`);
    return { id: BOT_ID, name: BOT_NAME };
}

function decideAction(session) {
    const gameState = session.gameState;
    
    // --- L√≥gica de Resposta ao Truco (Prioridade 1) ---
    const botIndex = gameState.jogadores.findIndex(p => p.id === BOT_ID);
    
    // Se o bot n√£o estiver no jogo por algum motivo, n√£o faz nada.
    if (botIndex === -1) {
        return null; 
    }
    
    // Descobre a qual time o bot pertence ('time1' ou 'time2')
    const botTeam = (botIndex % 2 === 0) ? 'time1' : 'time2';

    // Verifica se o jogo est√° aguardando uma resposta e se √© do time do bot
    if (gameState.status === 'aguardando_resposta_truco' && gameState.trucoState.pendingResponseFrom === botTeam) {
        // L√≥gica simples: se o bot n√£o tiver manilhas, ele corre. Sen√£o, aceita.
        const botHand = gameState.jogadores[botIndex].mao;
        const hasManilha = botHand.some(carta => carta && carta[0] === gameState.manilhaValor);

        if (hasManilha) {
            console.log(`[TrucoBot] Bot do time ${botTeam} foi desafiado, TEM MANILHA e vai aceitar.`);
            return '!aceitar';
        } else {
            console.log(`[TrucoBot] Bot do time ${botTeam} foi desafiado, N√ÉO TEM MANILHA e vai correr.`);
            return '!correr';
        }
    }

    // --- L√≥gica de Jogar Carta (Prioridade 2) ---
    const jogadorDaVez = gameState.jogadores[gameState.vezDoJogador];

    // Verifica se √© a vez do bot jogar uma carta
    if (!jogadorDaVez || jogadorDaVez.id !== BOT_ID) {
        return null; // Se n√£o for a vez do bot, ele n√£o faz nada.
    }

    // Se for a vez dele, encontra a primeira carta dispon√≠vel na m√£o
    const indexCartaParaJogar = jogadorDaVez.mao.findIndex(carta => carta !== null);
    
    if (indexCartaParaJogar !== -1) {
        // Se encontrou uma carta, monta o comando com o n√∫mero correto (√≠ndice + 1)
        const command = `!carta ${indexCartaParaJogar + 1}`;
        console.log(`[TrucoBot] Decis√£o do bot: ${command}`);
        return command;
    } else {
        // Caso raro onde √© a vez do bot mas ele n√£o tem mais cartas
        console.error(`[TrucoBot] √â a vez do bot (${jogadorDaVez.name}), mas ele n√£o tem cartas na m√£o.`);
        return null;
    }
}

module.exports = {
    createBotPlayer,
    decideAction,
    BOT_ID
};
const evaluator = require('poker-evaluator');

// Recebe um array com 2 cartas de cada jogador e as cartas da mesa
function avaliarMaos(jogadores, maosPrivadas, cartasMesa) {
  const resultados = [];

  jogadores.forEach((jogador, idx) => {
    const maoCompleta = [...maosPrivadas[idx], ...cartasMesa];
    console.log(`üëÄ Verificando m√£o do ${jogador}:`, maoCompleta);

    const resultado = evaluator.evalHand(maoCompleta);

    resultados.push({
      jogador,
      descricao: resultado.handName,
      pontuacao: resultado.value,
      cartas: maoCompleta,
    });
  });

  resultados.sort((a, b) => b.pontuacao - a.pontuacao);

  const vencedor = resultados[0];

  return {
    vencedor,
    ranking: resultados
  };
}

module.exports = { avaliarMaos };// C:\Users\Guilherme\bot-whatsapp\games\Poker\playerActions.js

const poker = require('./poker');
const sessionManager = require('../../sessions/sessionManager');
const pokerValidators = require('./pokerValidators');
const chipManager = require('../../economy/chipManager');
const botPlayer = require('./botPlayer');


// Nova fun√ß√£o "m√£e" para lidar com TODOS os comandos durante o jogo
async function handleGameCommand(message, session, client) {
    const { from, body } = message;
    const commandArgs = body.split(' ');
    const command = commandArgs[0].toLowerCase();
    const playerId = message.author || message.from;

    console.log(`[Poker Actions] Comando '${command}' recebido de ${from} na sess√£o ${session.groupId}`);

    // Valida√ß√£o para impedir o jogador de agir se n√£o estiver no jogo
    if (!pokerValidators.isPlayerInGame(session, playerId)) {
        return message.reply("Voc√™ n√£o est√° participando deste jogo.");
    }

    // Comandos que podem ser usados a qualquer momento pelo jogador
    switch (command) {
        case '!sair':
            return await handleLeaveCommand(message, session, client);
        case '!status':
            await sessionManager.notificarStatusCompleto(session, client);
            return;
        case '!ajuda':
        case '!help':
            const helpMessage = getPokerHelpMessage(session);
            return message.reply(helpMessage);
    }

    // Valida√ß√µes que impedem a a√ß√£o se n√£o for a vez do jogador
    if (!pokerValidators.isPlayersTurn(session, playerId)) {
        // O bot n√£o deve responder a si mesmo que n√£o √© sua vez.
        if (playerId !== botPlayer.BOT_ID) {
            return message.reply("N√£o √© sua vez de jogar!");
        }
        return; // Sai silenciosamente se for o bot tentando jogar fora de hora
    }

    if (!pokerValidators.isPlayerActiveInRound(session, playerId)) {
        // N√£o precisa responder, pois o jogador j√° recebeu a confirma√ß√£o de que correu
        return;
    }

    // A√ß√µes de jogo (s√≥ podem ser executadas na vez do jogador)
    switch (command) {
        case '!mesa':
        case '!check':
            await handleCheckCommand(message, session, client);
            break;
        case '!pagar':
        case '!call':
            await handleCallCommand(message, session, client);
            break;
        case '!apostar':
        case '!bet':
            await handleBetCommand(message, session, client);
            break;
        case '!aumentar':
        case '!raise':
            await handleRaiseCommand(message, session, client);
            break;
        case '!allin':
            await handleAllInCommand(message, session, client);
            break;
        case '!correr':
        case '!fold':
            await handleFold(message, session, client);
            break;
        default:
            // Responde apenas se for um humano digitando um comando inv√°lido
            if (command.startsWith('!') && playerId !== botPlayer.BOT_ID) {
                await message.reply("Comando de Poker n√£o reconhecido. Digite !ajuda para ver os comandos dispon√≠veis.");
            }
            break;
    }
}

async function handleLeaveCommand(message, session, client) {
    const playerId = message.author || message.from;

    if (!pokerValidators.isPlayerInGame(session, playerId)) {
        await message.reply('Voc√™ n√£o est√° mais na mesa.');
        return;
    }

    const playerName = pokerValidators.getFormattedId(playerId, session);
    const wasHisTurn = pokerValidators.isPlayersTurn(session, playerId);

    session.players = session.players.filter(p => p.id !== playerId);
    session.gameState.ativos = session.gameState.ativos.filter(id => id !== playerId);
    chipManager.removePlayer(playerId);
    
    await client.sendMessage(session.groupId, `üëã ${playerName} saiu do jogo.`);

    if (session.gameState.ativos.length < 2 && session.players.length < 2) {
        await client.sendMessage(session.groupId, 'Jogadores insuficientes para continuar. Encerrando o jogo.');
        sessionManager.endSession(session.groupId);
        return;
    }
    
    if (wasHisTurn) {
        // Passa o ID do jogador que saiu para que o avan√ßo de turno seja calculado corretamente
        await poker.avancarTurnoApostas(session, client, playerId); // <-- MUDAN√áA AQUI
    }
}

// Fun√ß√µes de a√ß√£o individuais (agora s√£o chamadas internamente por handleGameCommand)
async function handleCheckCommand(message, session, client) {
    await poker.handleCheck(session, message.author || message.from, client);
}
async function handleCallCommand(message, session, client) {
    await poker.handleCall(session, message.author || message.from, client);
}
async function handleBetCommand(message, session, client) {
    const amount = parseInt(message.body.split(' ')[1]);
    if (isNaN(amount) || amount <= 0) {
        await message.reply('Valor de aposta inv√°lido. Use: !apostar <valor>');
        return;
    }
    await poker.handleBet(session, message.author || message.from, amount, client);
}
async function handleRaiseCommand(message, session, client) {
    const amount = parseInt(message.body.split(' ')[1]);
    if (isNaN(amount) || amount <= 0) {
        await message.reply('Valor de aumento inv√°lido. Use: !aumentar <valor>');
        return;
    }
    await poker.handleRaise(session, message.author || message.from, amount, client);
}
async function handleAllInCommand(message, session, client) {
    await poker.handleAllIn(session, message.author || message.from, client);
}
async function handleFold(message, session, client) {
    const playerId = message.author || message.from;
    
    await client.sendMessage(session.groupId, `üö™ ${pokerValidators.getFormattedId(playerId, session)} desistiu da rodada.`);

    session.gameState.ativos = session.gameState.ativos.filter(id => id !== playerId);
    session.gameState.playersWhoActed.delete(playerId);

    if (session.gameState.ativos.length === 1) {
        const winnerId = session.gameState.ativos[0];
        const pot = session.gameState.pote;
        
        chipManager.addChips(winnerId, pot);
        
        await client.sendMessage(session.groupId, `üéâ ${pokerValidators.getFormattedId(winnerId, session)} venceu a rodada! Ganhou ${pot} fichas.`);
        
        await poker.iniciarRodada(session, client);
    } else {
        // Passa o ID do jogador que desistiu para que o avan√ßo de turno seja calculado corretamente
        await poker.avancarTurnoApostas(session, client, playerId); // <-- MUDAN√áA AQUI
    }
}
function getPokerHelpMessage(session) {
    // ... (c√≥digo da fun√ß√£o de ajuda permanece o mesmo)
    let helpMessage = `üìñ *Comandos de Poker:*\n`;
    if (session.status === 'em_jogo') {
        helpMessage += `- !status - Mostra o status atual da rodada\n`;
        helpMessage += `- !mesa (ou !check) - Passa a vez sem apostar\n`; 
        helpMessage += `- !pagar (ou !call) - Iguala a aposta atual\n`; 
        helpMessage += `- !apostar <valor> - Faz uma aposta inicial\n`; 
        helpMessage += `- !aumentar <valor> - Aumenta a aposta atual\n`; 
        helpMessage += `- !allin - Aposta todas as suas fichas\n`; 
        helpMessage += `- !correr (ou !fold) - Sai da rodada atual\n`;
    }
    helpMessage += `\n*Comandos Gerais:*\n - !fimjogo - Encerra o jogo atual\n`; 
    return helpMessage;
}

module.exports = {
    handleGameCommand // Exportamos apenas a fun√ß√£o "m√£e"
};// C:\Users\Guilherme\bot-whatsapp\games\Poker\pokerAI.js (VERS√ÉO FINAL)

const chipManager = require('../../economy/chipManager');
const evaluator = require('poker-evaluator');

const BOT_ID = 'bot@cpu.bot';
const BOT_NAME = 'BOT Dealer';

// Fun√ß√µes de an√°lise (getPreFlopHandCategory, getPostFlopHandStrength, definirPerfilFinanceiro)
// ... cole aqui as 3 fun√ß√µes de an√°lise que j√° t√≠nhamos e funcionavam ...
// Vou colocar elas aqui novamente para garantir que tenhamos a vers√£o completa.

function getPreFlopHandCategory(hand) {
    const ranks = '23456789TJQKA', r1 = hand[0][0], r2 = hand[1][0];
    const isSuited = hand[0][1] === hand[1][1], isPair = r1 === r2;
    const highCard = ranks.indexOf(r1) > ranks.indexOf(r2) ? r1 : r2;
    const lowCard = ranks.indexOf(r1) > ranks.indexOf(r2) ? r2 : r1;
    let handKey = highCard + lowCard;
    if (!isPair) handKey += isSuited ? 's' : 'o';
    const PREMIUM_HANDS = ['AA', 'KK', 'QQ', 'JJ', 'AKs'];
    const STRONG_HANDS = ['TT', 'AQs', 'AJs', 'KQs', 'AKo'];
    const SPECULATIVE_HANDS = ['99', '88', '77', 'A9s', 'A8s', 'A7s', 'A6s', 'A5s', 'A4s', 'A3s', 'A2s', 'KJs', 'KTs', 'QJs', 'QTs', 'JTs', 'T9s', '98s', '87s', '76s'];
    const MARGINAL_HANDS = ['66', '55', '44', '33', '22', 'A9o', 'KJo', 'QJo'];
    if (PREMIUM_HANDS.includes(handKey)) return 'MUITO_FORTE';
    if (STRONG_HANDS.includes(handKey)) return 'FORTE';
    if (SPECULATIVE_HANDS.includes(handKey)) return 'MEDIA';
    if (MARGINAL_HANDS.includes(handKey)) return 'FRACA';
    return 'MUITO_FRACA';
}

function getPostFlopHandStrength(botHand, board) {
    const result = evaluator.evalHand([...botHand, ...board]);
    // Sequ√™ncia de poker: Royal Flush > Straight Flush > 4 of a Kind > Full House > Flush > Straight
    if (result.value > 6604) return { name: result.handName, strength: 'MUITO_FORTE' }; // Flush ou melhor
    if (result.value > 3218) return { name: result.handName, strength: 'FORTE' };     // Two Pair, 3 of a Kind, Straight
    if (result.value > 1609) return { name: result.handName, strength: 'MEDIA' };     // One Pair
    return { name: result.handName, strength: 'FRACA' };                              // High Card
}

function definirPerfilFinanceiro(session) {
    const botStack = chipManager.getPlayerChips(BOT_ID);
    const bigBlind = session.gameState.bigBlindValue;
    if (!bigBlind || bigBlind === 0) return 'DEFAULT';
    const stackInBBs = botStack / bigBlind;
    if (stackInBBs < 30) return 'CONSERVADOR';
    if (stackInBBs > 120) return 'AGRESSIVO';
    return 'DEFAULT';
}

function calculateBetSize(session, profile, handStrength, isRaise = false) {
    const { pote, apostaAtual, bigBlindValue } = session.gameState;
    const botStack = chipManager.getPlayerChips(BOT_ID);
    let betAmount;

    if (isRaise) {
        const raiseMultiplier = profile === 'AGRESSIVO' ? 3 : 2.5;
        betAmount = apostaAtual * raiseMultiplier;
    } else {
        let potPercentage = profile === 'AGRESSIVO' ? 0.75 : (profile === 'CONSERVADOR' ? 0.5 : 0.65);
        if (handStrength === 'MEDIA') potPercentage = 0.4; // Blefes s√£o menores
        betAmount = pote * potPercentage;
    }
    const finalBet = Math.max(bigBlindValue, Math.round(betAmount / 10) * 10);
    return Math.min(botStack, finalBet);
}

// A nova decideAction que retorna um COMANDO DE TEXTO
// C:\Users\Guilherme\bot-whatsapp\games\Poker\botPlayer.js

// ... (todo o c√≥digo anterior como getPreFlopHandCategory, etc. permanece o mesmo)

// A nova decideAction que retorna um COMANDO DE TEXTO
function decideAction(session) {
    const gameState = session.gameState;
    const botStack = chipManager.getPlayerChips(BOT_ID);
    const perfil = definirPerfilFinanceiro(session);
    const handInfo = (gameState.etapa === 'pre-flop') 
        ? { strength: getPreFlopHandCategory(gameState.maosPrivadas[BOT_ID]) }
        : getPostFlopHandStrength(gameState.maosPrivadas[BOT_ID], gameState.mesa);

    const apostaRodadaBot = gameState.apostasRodada[BOT_ID] || 0;
    const isFacingBet = gameState.apostaAtual > apostaRodadaBot;
    const amountToCall = gameState.apostaAtual - apostaRodadaBot;

    let command = '!correr';
    let amount = 0;

    // --- NOVA L√ìGICA DE DECIS√ÉO ---

    // 1. O bot pode cobrir a aposta?
    if (isFacingBet && botStack <= amountToCall) {
        // Se n√£o pode cobrir, as √∫nicas op√ß√µes s√£o all-in (pagando o que resta) ou desistir.
        const odds = 0.2; // Chance de 20% de pagar com m√£o FORTE (n√£o MUITO_FORTE)
        if (handInfo.strength === 'MUITO_FORTE' || (handInfo.strength === 'FORTE' && Math.random() < odds)) {
            command = '!allin'; // O handler de allin cuidar√° do resto.
        } else {
            command = '!correr';
        }
    } else {
        // Se PODE cobrir a aposta, usa a l√≥gica antiga.
        if (handInfo.strength === 'MUITO_FORTE') {
            command = isFacingBet ? '!aumentar' : '!apostar';
        } else if (handInfo.strength === 'FORTE') {
            command = isFacingBet ? '!pagar' : '!apostar';
        } else if (handInfo.strength === 'MEDIA') {
            command = isFacingBet ? '!correr' : '!mesa';
            // L√≥gica de blefe simples
            if (!isFacingBet && perfil !== 'CONSERVADOR' && Math.random() < 0.15) {
                command = '!apostar';
            }
        } else { // FRACA ou MUITO_FRACA
            command = isFacingBet ? '!correr' : '!mesa';
        }
    }

    // 2. Se a decis√£o for apostar ou aumentar, calcula o valor.
    if (command === '!apostar' || command === '!aumentar') {
        const isRaise = command === '!aumentar';
        amount = calculateBetSize(session, perfil, handInfo.strength, isRaise);

        // Se o valor calculado for todo o stack do bot, a a√ß√£o correta √© !allin
        if (amount >= botStack) {
            command = '!allin';
            amount = 0; // O comando !allin n√£o precisa de valor.
        }
    }
    
    // 3. Valida√ß√£o final para n√£o dar !mesa enfrentando aposta
    if (command === '!mesa' && isFacingBet) {
        command = '!correr';
    }

    const finalCommand = amount > 0 ? `${command} ${amount}` : command;
    console.log(`[pokerAI] Perfil: ${perfil} | For√ßa: ${handInfo.strength} | Stack: ${botStack} -> Decis√£o: ${finalCommand}`);
    return finalCommand;
}


module.exports = {
    createBotPlayer: () => ({ id: BOT_ID, name: BOT_NAME }),
    decideAction,
    BOT_ID
};// C:\Users\Guilherme\bot-whatsapp\games\Poker\pokerValidators.js

/**
 * Verifica se um jogo est√° iniciado na sess√£o.
 * @param {object} session - O objeto de sess√£o do jogo.
 * @returns {boolean} True se o jogo est√° iniciado, false caso contr√°rio.
 */
function isGameStarted(session) {
    return session.gameState?.iniciou === true;
}

/**
 * Verifica se um jogador est√° participando do jogo na sess√£o.
 * Agora verifica se o ID do jogador existe dentro dos objetos do array 'players'.
 * @param {object} session - O objeto de sess√£o do jogo.
 * @param {string} playerId - O ID do WhatsApp do jogador.
 * @returns {boolean} True se o jogador est√° na sess√£o, false caso contr√°rio.
 */
function isPlayerInGame(session, playerId) {
    // Procura por um objeto no array players cujo 'id' corresponda ao playerId
    return session && session.players && session.players.some(p => p.id === playerId);
}

/**
 * Verifica se √© a vez de um jogador agir na rodada atual.
 * @param {object} session - O objeto de sess√£o do jogo.
 * @param {string} playerId - O ID do WhatsApp do jogador.
 * @returns {boolean} True se √© a vez do jogador, false caso contr√°rio.
 */
function isPlayersTurn(session, playerId) {
    // Certifique-se de que o gameState e ativos existem antes de acessar
    if (!session || !session.gameState || !session.gameState.ativos || session.gameState.ativos.length === 0) {
        return false;
    }
    const currentPlayerId = session.gameState.ativos[session.gameState.currentPlayerIndex];
    return playerId === currentPlayerId;
}

/**
 * Verifica se um jogador est√° ativo na rodada atual (n√£o desistiu).
 * @param {object} session - O objeto de sess√£o do jogo.
 * @param {string} playerId - O ID do WhatsApp do jogador.
 * @returns {boolean} True se o jogador est√° ativo, false caso contr√°rio.
 */
function isPlayerActiveInRound(session, playerId) {
    // Certifique-se de que o gameState e ativos existem antes de acessar
    if (!session || !session.gameState || !session.gameState.ativos) {
        return false;
    }
    return session.gameState.ativos.includes(playerId);
}

/**
 * Retorna o nome formatado de um jogador, buscando na sess√£o.
 * @param {string} playerId - O ID do jogador.
 * @param {object} session - O objeto de sess√£o do jogo para buscar o nome do jogador.
 * @returns {string} O nome do jogador ou uma vers√£o formatada do ID se o nome n√£o for encontrado.
 */
function getFormattedId(playerId, session) {
    if (!playerId) return 'N/A';
    
    // Tenta encontrar o jogador na lista de jogadores da sess√£o para obter o nome
    const playerInSession = session?.players?.find(p => p.id === playerId);
    
    // Se encontrou o jogador na sess√£o e ele tem um nome, retorna o nome.
    if (playerInSession && playerInSession.name) {
        return playerInSession.name;
    }
    
    // Fallback: retorna a parte num√©rica do ID se o nome n√£o for encontrado na sess√£o
    return playerId.split('@')[0];
}

module.exports = {
    isGameStarted,
    isPlayerInGame,
    isPlayersTurn,
    isPlayerActiveInRound,
    getFormattedId
};// C:\Users\Guilherme\bot-whatsapp\games\Poker\poker.js

const { MessageMedia } = require('whatsapp-web.js'); 
const { gerarBaralho, gerarImagemCartas } = require('../baralhoUtils');
const { avaliarMaos } = require('./avaliadorPoker');
const chipManager = require('../../economy/chipManager');
const sessionManager = require('../../sessions/sessionManager');
const { getFormattedId } = require('./pokerValidators');
const botPlayer = require('./botPlayer');

// --- CONSTANTES ---
const INITIAL_SMALL_BLIND = 50;
const INITIAL_BIG_BLIND = 100;
const BLIND_INCREASE_ROUNDS = 3;

// --- FUN√á√ïES DE L√ìGICA PRINCIPAL ---

function formatarCartasArray(cartas) {
    const valorMap = { 'T': '10', 'J': 'J', 'Q': 'Q', 'K': 'K', 'A': 'A' };
    const naipeMap = { 's': '‚ô†Ô∏è', 'h': '‚ô•Ô∏è', 'd': '‚ô¶Ô∏è', 'c': '‚ô£Ô∏è' };
    if (!Array.isArray(cartas) || cartas.length === 0) return [];
    return cartas.map(carta => {
        if (!carta || carta.length !== 2) return '??';
        const valor = valorMap[carta[0]] || carta[0];
        const naipe = naipeMap[carta[1]] || '?';
        return `${valor}${naipe}`;
    });
}


function initializeGameState(session) {
    session.gameState = {
        deck: [],
        mesa: [],
        etapa: 'inicio',
        ativos: [],
        maosPrivadas: {},
        iniciou: false,
        dealer: null,
        sb: null,
        bb: null,
        currentPlayerIndex: 0,
        apostaAtual: 0,
        pote: 0,
        smallBlindValue: INITIAL_SMALL_BLIND,
        bigBlindValue: INITIAL_BIG_BLIND,
        roundCounter: 0,
        apostasRodada: {},
        ultimoApostador: null,
        numRaises: 0,
        playersWhoActed: new Set(),
        minRaiseAmount: 0,
        playersAllIn: new Set(),
    };
}

async function iniciarRodada(session, client) {
    if (!session.gameState) {
        initializeGameState(session);
    }
    if (session.players.length < 2) {
        session.gameState.iniciou = false;
        return;
    }

    session.gameState.roundCounter++;
    await enviarMensagemPreRodada(session, client);
    await new Promise(resolve => setTimeout(resolve, 1500));
    if (session.gameState.roundCounter > 1 && session.gameState.roundCounter % BLIND_INCREASE_ROUNDS === 0) {
        session.gameState.smallBlindValue *= 2;
        session.gameState.bigBlindValue *= 2;
        await client.sendMessage(session.groupId, `üö® Aten√ß√£o! Os blinds aumentaram para SB: ${session.gameState.smallBlindValue}, BB: ${session.gameState.bigBlindValue}!`);
    }

    session.gameState.deck = gerarBaralho();
    session.gameState.mesa = [];
    session.gameState.etapa = 'pre-flop';
    session.gameState.ativos = session.players.filter(p => chipManager.getPlayerChips(p.id) > 0).map(p => p.id);

    if (session.gameState.ativos.length < 2) {
        await client.sendMessage(session.groupId, 'N√£o h√° jogadores suficientes com fichas para iniciar uma nova rodada. Jogo encerrado!');
        sessionManager.endSession(session.groupId);
        return;
    }

    session.gameState.maosPrivadas = {};
    session.gameState.apostaAtual = 0;
    session.gameState.pote = 0;
    session.gameState.apostasRodada = {};
    session.gameState.ultimoApostador = null;
    session.gameState.numRaises = 0;
    session.gameState.playersWhoActed = new Set();
    session.gameState.minRaiseAmount = session.gameState.bigBlindValue;
    session.gameState.playersAllIn = new Set();

    const currentActivePlayerIds = session.gameState.ativos;
    if (!session.gameState.dealer || !currentActivePlayerIds.includes(session.gameState.dealer)) {
        session.gameState.dealer = currentActivePlayerIds[0];
    } else {
        const currentIdx = currentActivePlayerIds.indexOf(session.gameState.dealer);
        session.gameState.dealer = currentActivePlayerIds[(currentIdx + 1) % currentActivePlayerIds.length];
    }
    const dealerIdx = currentActivePlayerIds.indexOf(session.gameState.dealer);
    
    // L√≥gica de Posi√ß√£o Corrigida
    if (currentActivePlayerIds.length === 2) {
        session.gameState.sb = currentActivePlayerIds[dealerIdx];
        session.gameState.bb = currentActivePlayerIds[(dealerIdx + 1) % currentActivePlayerIds.length];
        session.gameState.currentPlayerIndex = dealerIdx;
    } else {
        session.gameState.sb = currentActivePlayerIds[(dealerIdx + 1) % currentActivePlayerIds.length];
        session.gameState.bb = currentActivePlayerIds[(dealerIdx + 2) % currentActivePlayerIds.length];
        const bbIndex = currentActivePlayerIds.indexOf(session.gameState.bb);
        session.gameState.currentPlayerIndex = (bbIndex + 1) % currentActivePlayerIds.length;
    }
    
    // Pagamento dos blinds... (continua igual)
    const sbPlayerId = session.gameState.sb;
    const bbPlayerId = session.gameState.bb;
    const sbChips = chipManager.getPlayerChips(sbPlayerId);
    const bbChips = chipManager.getPlayerChips(bbPlayerId);
    const actualSBbet = Math.min(sbChips, session.gameState.smallBlindValue);
    const actualBBbet = Math.min(bbChips, session.gameState.bigBlindValue);

    if (actualSBbet > 0) {
        chipManager.deductChips(sbPlayerId, actualSBbet);
        session.gameState.pote += actualSBbet;
        session.gameState.apostasRodada[sbPlayerId] = actualSBbet;
        // session.gameState.playersWhoActed.add(sbPlayerId); // <--- REMOVA ESTA LINHA
        if (sbChips <= session.gameState.smallBlindValue) session.gameState.playersAllIn.add(sbPlayerId);
    }
    if (actualBBbet > 0) {
        chipManager.deductChips(bbPlayerId, actualBBbet);
        session.gameState.pote += actualBBbet;
        session.gameState.apostasRodada[bbPlayerId] = actualBBbet;
        // A aposta atual √© definida, mas o BB ainda n√£o "agiu" voluntariamente
        session.gameState.apostaAtual = actualBBbet;
        // session.gameState.playersWhoActed.add(bbPlayerId); // <--- ESSA L√ìGICA N√ÉO EXISTIA AQUI, MAS GARANTA QUE N√ÉO ESTEJA
        if (bbChips <= session.gameState.bigBlindValue) session.gameState.playersAllIn.add(bbPlayerId);
    }

    await enviarMensagemDeEtapa(session, client);
    await new Promise(resolve => setTimeout(resolve, 1500));
    
    for (const jogadorId of session.gameState.ativos) {
        const cartas = [session.gameState.deck.pop(), session.gameState.deck.pop()];
        session.gameState.maosPrivadas[jogadorId] = cartas;

        if (jogadorId !== botPlayer.BOT_ID) {
            const imagePath = await gerarImagemCartas(cartas);
            if (imagePath) {
                const media = MessageMedia.fromFilePath(imagePath); // <--- CORRIGIDO
                const comandos = getComandosDisponiveis(session);
                const caption = `*Sua m√£o na rodada #${session.gameState.roundCounter}*`;
¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† await client.sendMessage(jogadorId, media, { caption: caption });
            } else {
                await client.sendMessage(jogadorId, '‚ö†Ô∏è Houve um erro ao gerar a imagem das suas cartas.');
            }
        } else {
            // Para o log do bot, podemos manter o texto simples
            const valorMap = {'T':'10','J':'J','Q':'Q','K':'K','A':'A'};
            const naipeMap = {'s':'‚ô†Ô∏è','h':'‚ô•Ô∏è','d':'‚ô¶Ô∏è','c':'‚ô£Ô∏è'};
            const cartasFormatadas = cartas.map(c => (valorMap[c[0]]||c[0]) + (naipeMap[c[1]]||c[1]));
            console.log(`[Game] Cartas do BOT: ${cartasFormatadas.join(', ')}`);
        }
    }

    // ==================================================================
    // ================= IN√çCIO DA SE√á√ÉO CORRIGIDA ======================
    // ==================================================================
    // N√ÉO chamamos mais avancarTurnoApostas aqui. Em vez disso, anunciamos
    // o primeiro jogador a agir ou iniciamos a a√ß√£o do bot.
    const firstPlayerId = session.gameState.ativos[session.gameState.currentPlayerIndex];
    if (firstPlayerId === botPlayer.BOT_ID) {
        // Se o primeiro a agir for o bot, chama a a√ß√£o dele diretamente.
        await avancarTurnoApostas(session, client);
    } else {
        // Se for um humano, apenas anuncia a vez dele.
        await enviarMensagemDeTurno(session, client);
    }
    // ==================================================================
    // =================== FIM DA SE√á√ÉO CORRIGIDA =======================
    // ==================================================================
}

async function avancarEtapa(session, client) {
    const gameState = session.gameState;
    const etapas = ['pre-flop', 'flop', 'turn', 'river', 'fim'];
    const etapaAtualIdx = etapas.indexOf(gameState.etapa);
    
    const proximaEtapa = (etapaAtualIdx >= etapas.length - 2) ? 'fim' : etapas[etapaAtualIdx + 1];
    gameState.etapa = proximaEtapa;

    // Apenas avan√ßa para o showdown ou para a pr√≥xima rodada de apostas.
    // A l√≥gica de iniciar uma nova rodada s√≥ acontecer√° DEPOIS do showdown.
    if (gameState.etapa === 'fim') {
        // --- L√ìGICA DE SHOWDOWN ---
        const jogadoresAtivos = gameState.ativos.filter(pId => gameState.maosPrivadas[pId]);
        
        if (jogadoresAtivos.length <= 1) {
            const winnerId = jogadoresAtivos[0];
            if (winnerId) {
                chipManager.addChips(winnerId, gameState.pote);
                await client.sendMessage(session.groupId, `üéâ ${getPlayerNameById(winnerId, session.players)} venceu e ganhou ${gameState.pote} fichas!`);
            }
        } else {
            const maosPrivadasParaAvaliar = jogadoresAtivos.map(j => gameState.maosPrivadas[j]);
            const resultado = avaliarMaos(jogadoresAtivos, maosPrivadasParaAvaliar, gameState.mesa);
            let showdownMessage = "*Showdown! Revelando as cartas:*\n";
            resultado.ranking.forEach(playerResult => {
            const playerName = getFormattedId(playerResult.jogador, session);
            // Esta linha agora funcionar√° por causa da fun√ß√£o que adicionamos
            const playerHand = formatarCartasArray(gameState.maosPrivadas[playerResult.jogador]); 
            showdownMessage += `\n*${playerName}:* ${playerHand.join(' ')} -> *${playerResult.descricao}*`;
            });
            await client.sendMessage(session.groupId, showdownMessage);
            await new Promise(resolve => setTimeout(resolve, 2500));
            const winnerName = getFormattedId(resultado.vencedor.jogador, session);
            chipManager.addChips(resultado.vencedor.jogador, gameState.pote);
            await client.sendMessage(session.groupId, `üéâ *${winnerName}* venceu com *${resultado.vencedor.descricao}* e ganhou ${gameState.pote} fichas!`);
        }
        // Inicia a pr√≥xima rodada AP√ìS o showdown ter sido conclu√≠do.
        await iniciarRodada(session, client);
        return;

    } else {
        // --- L√ìGICA PARA PR√ìXIMA RODADA DE APOSTAS (FLOP, TURN, RIVER) ---
        gameState.apostaAtual = 0;
        gameState.apostasRodada = {};
        gameState.ultimoApostador = null;
        gameState.numRaises = 0;
        gameState.playersWhoActed = new Set();
        gameState.minRaiseAmount = gameState.bigBlindValue;

        if (gameState.etapa === 'flop') {
            gameState.mesa.push(...[gameState.deck.pop(), gameState.deck.pop(), gameState.deck.pop()]);
        } else if (gameState.etapa === 'turn' || gameState.etapa === 'river') {
            gameState.mesa.push(gameState.deck.pop());
        }

        await enviarMensagemDeEtapa(session, client);
        await new Promise(resolve => setTimeout(resolve, 1500));

            // Conta quantos jogadores ativos ainda podem fazer a√ß√µes (n√£o est√£o all-in)
    const playersAbleToBet = gameState.ativos.filter(pId => !gameState.playersAllIn.has(pId));

    if (playersAbleToBet.length < 2) {
        console.log(`[Flow] Apenas ${playersAbleToBet.length} jogador(es) pode(m) apostar. Pulando para a pr√≥xima etapa automaticamente.`);
        await client.sendMessage(session.groupId, 'N√£o h√° mais a√ß√µes poss√≠veis. Revelando as pr√≥ximas cartas...');
        await new Promise(resolve => setTimeout(resolve, 2000)); // Uma pausa para o fluxo ficar natural

        // Chama a pr√≥xima etapa (ex: turn -> river -> fim) recursivamente at√© o showdown
        await avancarEtapa(session, client);
        return; // Impede que o resto da fun√ß√£o (que procuraria o pr√≥ximo jogador) seja executado
    }
        
        const allPlayersInOrder = session.players.map(p => p.id);
        const sortedActivePlayers = allPlayersInOrder.filter(pId => gameState.ativos.includes(pId));
        const dealerIdx = sortedActivePlayers.indexOf(gameState.dealer);
        let startIndex = -1;

        for (let i = 1; i <= sortedActivePlayers.length; i++) {
            const potentialPlayerId = sortedActivePlayers[(dealerIdx + i) % sortedActivePlayers.length];
            if (!gameState.playersAllIn.has(potentialPlayerId)) {
                startIndex = gameState.ativos.indexOf(potentialPlayerId);
                break;
            }
        }

        if (startIndex === -1) {
            await avancarEtapa(session, client);
            return;
        }

        gameState.currentPlayerIndex = startIndex;
        const firstPlayerId = gameState.ativos[startIndex];

        if (firstPlayerId === botPlayer.BOT_ID) {
            await avancarTurnoApostas(session, client, null);
        } else {
            await enviarMensagemDeTurno(session, client);
        }
    }
}


async function avancarTurnoApostas(session, client, lastPlayerId) {
    const gameState = session.gameState;
    console.log(`\n[DEBUG] --- Iniciando avancarTurnoApostas (√∫ltimo a jogar: ${lastPlayerId || 'N/A'}) ---`);

    // CORRE√á√ÉO ALL-IN: Verifica se os jogadores que ainda podem agir j√° est√£o all-in.
    const playersAbleToAct = gameState.ativos.filter(pId => !gameState.playersAllIn.has(pId));
    if (playersAbleToAct.length < 2 && gameState.apostaAtual > 0) {
        console.log('[DEBUG] Rodada de apostas terminada pois n√£o h√° jogadores suficientes para continuar a a√ß√£o.');
        await client.sendMessage(session.groupId, 'Rodada de apostas encerrada! üí∞');
        await avancarEtapa(session, client);
        return;
    }

    const playersToAct = gameState.ativos.filter(pId => !gameState.playersAllIn.has(pId));
    
    const roundIsOver = playersToAct.length > 0 && playersToAct.every(pId =>
        gameState.playersWhoActed.has(pId) &&
        (gameState.apostasRodada[pId] || 0) === gameState.apostaAtual
    );
    
    console.log(`[DEBUG] Verificando se a rodada acabou: ${roundIsOver}`);
    console.log(`[DEBUG] Jogadores que j√° agiram:`, Array.from(gameState.playersWhoActed));
    console.log(`[DEBUG] Apostas na rodada:`, gameState.apostasRodada);
    console.log(`[DEBUG] Aposta atual: ${gameState.apostaAtual}`);

    if (gameState.ativos.length <= 1 || roundIsOver) {
        if (roundIsOver) await client.sendMessage(session.groupId, 'Rodada de apostas encerrada! üí∞');
        console.log('[DEBUG] A rodada acabou. Avan√ßando para a pr√≥xima etapa...');
        await avancarEtapa(session, client);
        return;
    }
    
    console.log('[DEBUG] Rodada n√£o acabou. Procurando pr√≥ximo jogador...');
    const playerOrder = session.players.map(p => p.id);
    const lastPlayerIndex = playerOrder.indexOf(lastPlayerId || gameState.ativos[gameState.currentPlayerIndex]);

    for (let i = 1; i <= playerOrder.length * 2; i++) {
        const nextPlayerId = playerOrder[(lastPlayerIndex + i) % playerOrder.length];
        console.log(`[DEBUG] Loop ${i}: Verificando ${nextPlayerId}...`);
        
        if (gameState.ativos.includes(nextPlayerId)) {
            console.log(`[DEBUG] -> ${nextPlayerId} est√° ativo.`);
            if (!gameState.playersAllIn.has(nextPlayerId)) {
                console.log(`[DEBUG] -> ${nextPlayerId} n√£o est√° all-in.`);
                if (!gameState.playersWhoActed.has(nextPlayerId) || (gameState.apostasRodada[nextPlayerId] || 0) < gameState.apostaAtual) {
                    console.log(`[DEBUG] -> DECIS√ÉO: ${nextPlayerId} PRECISA AGIR!`);
                    gameState.currentPlayerIndex = gameState.ativos.indexOf(nextPlayerId);
                    
                    if (nextPlayerId === botPlayer.BOT_ID) {
                        console.log('[DEBUG] √â a vez do BOT. Chamando a IA...');
                        await client.sendMessage(session.groupId, `Vez de *${getPlayerNameById(nextPlayerId, session.players)}* ü§ñ`);
                        await new Promise(resolve => setTimeout(resolve, 2000));
                        const context = { position: getBotPosition(session) };
                        const commandText = botPlayer.decideAction(session, context);
                        const fakeMessage = { from: session.groupId, author: botPlayer.BOT_ID, body: commandText, client: client, reply: (text) => client.sendMessage(session.groupId, text) };
                        // A forma correta de chamar o handler √© atrav√©s do playerActions
                        const playerActions = require('./playerActions');
                        await playerActions.handleGameCommand(fakeMessage, session, client);
                    } else {
                        console.log(`[DEBUG] √â a vez de um humano. Enviando mensagem de turno...`);
                        await enviarMensagemDeTurno(session, client);
                    }
                    console.log('[DEBUG] --- Fim de avancarTurnoApostas (a√ß√£o passada) ---');
                    return;
                }
            }
        }
    }

    console.log('[DEBUG] ERRO: O loop terminou sem encontrar um pr√≥ximo jogador. For√ßando o avan√ßo da etapa.');
    await client.sendMessage(session.groupId, 'Rodada de apostas encerrada (fallback)!');
    await avancarEtapa(session, client);
}


// --- FUN√á√ïES DE A√á√ÉO DO JOGADOR ---

async function handleCheck(session, playerId, client) {
    const gameState = session.gameState;
    if (gameState.apostaAtual > (gameState.apostasRodada[playerId] || 0)) {
        if (playerId !== botPlayer.BOT_ID) {
            await client.sendMessage(playerId, `‚ùå N√£o √© poss√≠vel dar !mesa. Voc√™ precisa !pagar ou !apostar.`);
        }
        return false;
    }
    gameState.playersWhoActed.add(playerId);
    await client.sendMessage(session.groupId, `*${getPlayerNameById(playerId, session.players)}* foi de !mesa.`);
    await avancarTurnoApostas(session, client, playerId); // <-- MUDAN√áA AQUI
    return true;
}

async function handleCall(session, playerId, client) {
    const gameState = session.gameState;
    const playerChips = chipManager.getPlayerChips(playerId);
    const amountToCall = gameState.apostaAtual - (gameState.apostasRodada[playerId] || 0);

    if (amountToCall <= 0) {
        if (playerId !== botPlayer.BOT_ID) await client.sendMessage(playerId, `‚ùå N√£o h√° aposta para pagar. Use !mesa para passar a vez.`);
        return false;
    }
    
    if (playerChips < amountToCall) {
        return await handleAllIn(session, playerId, client);
    }
    chipManager.deductChips(playerId, amountToCall);
    gameState.pote += amountToCall;
    gameState.apostasRodada[playerId] = gameState.apostaAtual;
    gameState.playersWhoActed.add(playerId);
    await client.sendMessage(session.groupId, `${getPlayerNameById(playerId, session.players)} pagou (${amountToCall} fichas)‚úÖ`);
    await avancarTurnoApostas(session, client, playerId); // <-- MUDAN√áA AQUI
    return true;
}

async function handleBet(session, playerId, amount, client) {
    const gameState = session.gameState;
    const playerChips = chipManager.getPlayerChips(playerId);
    if (gameState.apostaAtual > 0) {
        if (playerId !== botPlayer.BOT_ID) await client.sendMessage(playerId, `‚ùå J√° existe uma aposta. Use !pagar ou !aumentar.`);
        return false;
    }
    if (amount < gameState.bigBlindValue) {
        if (playerId !== botPlayer.BOT_ID) await client.sendMessage(playerId, `‚ùå A aposta m√≠nima √© de ${gameState.bigBlindValue} fichas.`);
        return false;
    }
    if (playerChips < amount) {
        if (playerId !== botPlayer.BOT_ID) await client.sendMessage(playerId, `‚ùå Voc√™ n√£o tem fichas suficientes. Considere !allin.`);
        return false;
    }
    chipManager.deductChips(playerId, amount);
    gameState.pote += amount;
    gameState.apostasRodada[playerId] = amount;
    gameState.apostaAtual = amount;
    gameState.ultimoApostador = playerId;
    gameState.playersWhoActed = new Set([playerId]);
    await client.sendMessage(session.groupId, `üíµ ${getPlayerNameById(playerId, session.players)} apostou ${amount} fichas.`);
    await avancarTurnoApostas(session, client, playerId); // <-- MUDAN√áA AQUI
    return true;
}

async function handleRaise(session, playerId, amount, client) {
    const gameState = session.gameState;
    const playerChips = chipManager.getPlayerChips(playerId);
    const playerBetInRound = gameState.apostasRodada[playerId] || 0;
    const currentBet = gameState.apostaAtual;
    if (currentBet === 0) {
        if (playerId !== botPlayer.BOT_ID) await client.sendMessage(playerId, `‚ùå N√£o h√° aposta para aumentar. Use !apostar.`);
        return false;
    }
    if (amount <= currentBet) {
        if (playerId !== botPlayer.BOT_ID) await client.sendMessage(playerId, `‚ùå O valor do aumento (${amount}) deve ser maior que a aposta atual (${currentBet}).`);
        return false;
    }
    const raiseAmount = amount - currentBet;
    if (raiseAmount < gameState.minRaiseAmount) {
        if (playerId !== botPlayer.BOT_ID) await client.sendMessage(playerId, `‚ùå O aumento deve ser de pelo menos ${gameState.minRaiseAmount} fichas.`);
        return false;
    }
    const chipsNeeded = amount - playerBetInRound;
    if (playerChips < chipsNeeded) {
        if (playerId !== botPlayer.BOT_ID) await client.sendMessage(playerId, `‚ùå Voc√™ n√£o tem fichas para aumentar para ${amount}.`);
        return false;
    }
    chipManager.deductChips(playerId, chipsNeeded);
    gameState.pote += chipsNeeded;
    gameState.apostasRodada[playerId] = amount;
    gameState.apostaAtual = amount;
    gameState.ultimoApostador = playerId;
    gameState.numRaises++;
    gameState.minRaiseAmount = raiseAmount;
    gameState.playersWhoActed = new Set([playerId]);
    await client.sendMessage(session.groupId, `${getPlayerNameById(playerId, session.players)} aumentou para ${amount} fichas ‚¨ÜÔ∏è`);
    await avancarTurnoApostas(session, client, playerId); // <-- MUDAN√áA AQUI
    return true;
}

async function handleAllIn(session, playerId, client) {
    const gameState = session.gameState;
    const playerChips = chipManager.getPlayerChips(playerId);
    if (playerChips <= 0) {
        if (playerId !== botPlayer.BOT_ID) await client.sendMessage(playerId, `‚ùå Voc√™ n√£o tem fichas para ir !allin.`);
        return false;
    }
    const totalBetForPlayer = (gameState.apostasRodada[playerId] || 0) + playerChips;
    chipManager.deductChips(playerId, playerChips);
    gameState.pote += playerChips;
    gameState.apostasRodada[playerId] = totalBetForPlayer;
    gameState.playersAllIn.add(playerId);

    let actionMessage;
    if (totalBetForPlayer > gameState.apostaAtual) {
        // A CORRE√á√ÉO EST√Å NA LINHA ABAIXO: 'apostaAtual' estava com um espa√ßo.
        gameState.minRaiseAmount = totalBetForPlayer - gameState.apostaAtual;
        gameState.apostaAtual = totalBetForPlayer;
        gameState.ultimoApostador = playerId;
        gameState.playersWhoActed = new Set();
        actionMessage = `üî• ${getPlayerNameById(playerId, session.players)} foi de !allin, aumentando para ${totalBetForPlayer} fichas!`;
    } else {
        actionMessage = `üî• ${getPlayerNameById(playerId, session.players)} foi de !allin com ${playerChips} fichas.`;
    }
    gameState.playersWhoActed.add(playerId);
    await client.sendMessage(session.groupId, actionMessage);
    await avancarTurnoApostas(session, client, playerId);
    return true;
}

// --- FUN√á√ïES DE MENSAGEM ---

function getPlayerNameById(playerId, playersArray) {
    const player = playersArray.find(p => p.id === playerId);
    return player ? player.name : playerId.split('@')[0];
}

function formatarMesaVisual(mesa) {
    const cartasVisuais = formatarCartasArray(mesa);
    const placeholders = Array(5 - cartasVisuais.length).fill('X');
    return [...cartasVisuais, ...placeholders].join('    ');
}

function getComandosDisponiveis(session) {
    const gameState = session.gameState;
    const playerId = gameState.ativos[gameState.currentPlayerIndex];
    const playerBetInRound = gameState.apostasRodada[playerId] || 0;
    const currentBet = gameState.apostaAtual;
    let comandos = [];
    if (currentBet > playerBetInRound) {
        comandos.push('!pagar', '!aumentar <valor>');
    } else {
        comandos.push('!mesa', '!apostar <valor>');
    }
    comandos.push('!allin', '!correr', '!ajuda');
    return comandos.join(' | ');
}

async function enviarMensagemPreRodada(session, client) {
    const round = session.gameState.roundCounter;
    let message = `*Rodada #${round}* üé≤\n\n*Jogadores na mesa:*\n`;
    session.players.forEach((player, index) => {
        const chips = chipManager.getPlayerChips(player.id);
        message += `${index + 1}. ${player.name} - *${chips} fichas*\n`;
    });
    await client.sendMessage(session.groupId, message);
}

async function enviarMensagemDeEtapa(session, client) {
    const gameState = session.gameState;
    const nomeEtapa = gameState.etapa.toUpperCase().replace('-', ' ');

    // SE FOR PRE-FLOP, ENVIA TEXTO
    if (gameState.etapa === 'pre-flop') {
        let message = `*--- ${nomeEtapa} ---*\n\n`;
        message += `Mesa: X    X    X    X    X\n\n`; // Mesa com placeholders
        
        const sbPlayer = session.players.find(p => p.id === gameState.sb);
        const bbPlayer = session.players.find(p => p.id === gameState.bb);
        if (sbPlayer && bbPlayer) {
            const sbAmount = gameState.smallBlindValue;
            const bbAmount = gameState.bigBlindValue;
            message += `SB: ${sbPlayer.name} (-${sbAmount} fichas)\n`;
            message += `BB: ${bbPlayer.name} (-${bbAmount} fichas)\n\n`;
        }
        message += `*Pote Total: ${gameState.pote} fichas*`;
        await client.sendMessage(session.groupId, message);
    } else {
        // PARA FLOP, TURN E RIVER, ENVIA IMAGEM
        let caption = `*--- ${nomeEtapa} ---*\n\n`;
        caption += `*Pote Total: ${gameState.pote} fichas*`;

        const imagePath = await gerarImagemCartas(gameState.mesa);
        if (imagePath) {
            const media = MessageMedia.fromFilePath(imagePath);
            await client.sendMessage(session.groupId, media, { caption: caption });
        } else {
            // Fallback caso a imagem falhe por outro motivo
             await client.sendMessage(session.groupId, caption + '\n\n(Erro ao gerar imagem da mesa)');
        }
    }
}

async function enviarMensagemDeTurno(session, client) {
    const gameState = session.gameState;
    const currentPlayerId = gameState.ativos[gameState.currentPlayerIndex];
    
    // A fun√ß√£o continua ignorando o bot.
    if (currentPlayerId === botPlayer.BOT_ID) return;

    const player = session.players.find(p => p.id === currentPlayerId);
    if (!player) return;

    const currentBet = gameState.apostaAtual;
    const playerBetInRound = gameState.apostasRodada[currentPlayerId] || 0;
    const amountToCall = currentBet - playerBetInRound;
    
    // Monta a mensagem, agora direcionada ao grupo
    let line1 = `*${player.name}*!`;

    let line2 = '';
    if (amountToCall > 0) {
        line2 = `Aposta atual: *${currentBet}* | Para pagar: *${amountToCall}*`;
    } else {
        line2 = `Aposta atual: *0* (Pode dar \`!mesa\` ou \`!apostar\`)`;
    }

    const commands = getComandosDisponiveis(session);
    const line3 = `\`\`\`${commands}\`\`\``;

    const finalMessage = `${line1}\n${line2}\n\n${line3}`;

    // Envia a mensagem detalhada diretamente para o grupo
    await client.sendMessage(session.groupId, finalMessage);
}

const STARTING_CHIPS = 5000; // Certifique-se que esta constante est√° acess√≠vel ou defina-a aqui.

function prepararJogo(session) {
    // Esta fun√ß√£o √© a "ponte". O lobby entrega a lista de jogadores,
    // e o m√≥dulo de poker cuida de dar as fichas.
    session.players.forEach(player => {
        chipManager.initializePlayerChips(player.id, STARTING_CHIPS);
    });
    console.log('[Game] Fichas iniciais distribu√≠das para os jogadores.');
}

function getBotPosition(session) {
    const { ativos, dealer, sb, bb } = session.gameState;
    const botId = botPlayer.BOT_ID; // Voc√™ precisa ter o botPlayer importado neste arquivo
    const numPlayers = ativos.length;

    if (!session.players || session.players.length === 0) return 'UNKNOWN';

    // Garante que o botPlayer foi importado no topo do poker.js
    // Ex: const botPlayer = require('./botPlayer');

    if (botId === sb) return 'SB';
    if (botId === bb) return 'BB';

    const playerOrder = session.players.map(p => p.id);
    const botSeatIndex = playerOrder.indexOf(botId);
    const dealerSeatIndex = playerOrder.indexOf(dealer);
    
    if (botSeatIndex === -1 || dealerSeatIndex === -1) return 'UNKNOWN';

    const relativePosition = (botSeatIndex - dealerSeatIndex + numPlayers) % numPlayers;

    if (numPlayers > 6) { // Mesa cheia (Full Ring)
        if (relativePosition <= 2) return 'EARLY';
        if (relativePosition < numPlayers - 1) return 'MIDDLE';
        return 'LATE';
    } else { // Mesa curta (6-max)
        if (relativePosition <= 1) return 'EARLY';
        if (relativePosition < numPlayers - 1) return 'MIDDLE';
        return 'LATE';
    }
}

// --- EXPORTA√á√ïES ---

module.exports = {
    initializeGameState,
    iniciarRodada,
    avancarEtapa,
    handleCheck,
    handleCall,
    handleBet,
    handleRaise,
    handleAllIn,
    avancarTurnoApostas,
    prepararJogo
};// Substitua o conte√∫do de games/Forca/playerActions.js

const forca = require('./forca');
const sessionManager = require('../../sessions/sessionManager');

async function handleGameCommand(message, session, client) {
¬† ¬† const command = message.body.split(' ')[0].toLowerCase();
¬† ¬† const playerId = message.author || message.from; // ID de quem enviou o comando

¬† ¬† switch (command) {
        case '!palavra': // <<< ADICIONADO
            await forca.definirPalavra(message, session, client);
            break;

¬† ¬† ¬† ¬† case '!letra':
¬† ¬† ¬† ¬† ¬† ¬† await forca.processarLetra(message, session, client);
¬† ¬† ¬† ¬† ¬† ¬† break;

¬† ¬† ¬† ¬† // --- L√ìGICA DE SA√çDA CORRIGIDA ---
¬† ¬† ¬† ¬† case '!sair':
            const playerIndex = session.gameState.jogadores.findIndex(p => p.id === playerId);
            
            // Se o jogador n√£o est√° na partida, n√£o faz nada
            if (playerIndex === -1) return;

            const playerSaindo = session.gameState.jogadores[playerIndex];
            
            // Remove o jogador da lista
            session.gameState.jogadores.splice(playerIndex, 1);
            
            // Agora que a fun√ß√£o est√° exportada, esta chamada funcionar√°
            sessionManager.unmapPlayersInGroup([playerId]); 

            await message.reply(`*${playerSaindo.name}* saiu do jogo da Forca.`);

            // Se quem saiu era o definidor da palavra ATUAL, a rodada precisa recome√ßar
            const eraDefinidor = playerId === session.gameState.definidorDaPalavra;

            // Se restarem menos de 2 jogadores, encerra o jogo
            // (O bot tamb√©m conta, ent√£o a l√≥gica deve ser ajustada se o bot puder jogar sozinho)
            if (session.gameState.jogadores.length < 2) {
                await client.sendMessage(session.groupId, 'O jogo da Forca foi encerrado por falta de jogadores.');
                sessionManager.endSession(session.groupId);
                return;
            }

            // Se o jogador que saiu era o definidor, a rodada reinicia.
            // O 'definidorIndex' n√£o precisa ser alterado, pois o array foi modificado.
            // A fun√ß√£o iniciarRodada pegar√° o jogador que agora ocupa essa posi√ß√£o.
            if (eraDefinidor) {
                await client.sendMessage(session.groupId, `Como quem estava escolhendo a palavra saiu, vamos para a pr√≥xima rodada!`);
                await forca.iniciarRodada(session, client);
            }
            break;
¬† ¬† ¬† ¬† ¬† ¬† 
¬† ¬† ¬† ¬† default:
¬† ¬† ¬† ¬† ¬† ¬† break;
¬† ¬† }
}

module.exports = {
    handleGameCommand
};// games/Forca/botPlayer.js

const BOT_ID = 'bot_forca@cpu.bot';
const BOT_NAME = 'BOT Palpiteiro';

/**
 * Cria um objeto de jogador para o bot.
 */
function createBotPlayer() {
    console.log(`[ForcaBot] Criando jogador bot: ${BOT_NAME}`);
    return { id: BOT_ID, name: BOT_NAME };
}

/**
 * O bot decide sua pr√≥xima a√ß√£o: chutar uma letra aleat√≥ria que ainda n√£o foi tentada.
 * @param {object} gameState - O estado atual do jogo.
 * @returns {string|null} O comando da jogada (ex: "!letra A") ou null se n√£o houver mais letras.
 */
function decideAction(gameState) {
    const alfabeto = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');
    const letrasTentadas = gameState.letrasTentadas || [];

    // Filtra o alfabeto para obter apenas as letras que ainda n√£o foram usadas
    const letrasDisponiveis = alfabeto.filter(letra => !letrasTentadas.includes(letra));

    if (letrasDisponiveis.length === 0) {
        return null; // N√£o h√° mais letras para chutar
    }

    // Escolhe uma letra aleat√≥ria da lista de dispon√≠veis
    const letraAleatoria = letrasDisponiveis[Math.floor(Math.random() * letrasDisponiveis.length)];
    
    const command = `!letra ${letraAleatoria}`;
    console.log(`[ForcaBot] Decis√£o do bot: ${command}`);
    return command;
}

module.exports = { createBotPlayer, decideAction, BOT_ID };// C:\Users\Guilherme\bot-whatsapp\games\Forca\palavras.js

const palavras = [
    "BANANA", "COMPUTADOR", "WHATSAPP", "PROGRAMADOR",
    "FIGURINHA", "TRUCO", "DESENVOLVEDOR", "INTELIGENCIA",
    "ARTIFICIAL", "TECLADO", "AVENTURA", "BIBLIOTECA",
    "CHOCOLATE", "ELEFANTE", "FANTASMA", "GIRAFA"
];

// Exporta uma fun√ß√£o que retorna uma palavra aleat√≥ria da lista
module.exports = function getPalavraAleatoria() {
    const indice = Math.floor(Math.random() * palavras.length);
    return palavras[indice];
};// C:\Users\Guilherme\bot-whatsapp\games\Forca\forca.js

const { MessageMedia } = require('whatsapp-web.js');
const path = require('path');
const sessionManager = require('../../sessions/sessionManager');
const getPalavraAleatoria = require('./palavras');
const botPlayer = require('./botPlayer'); // Importa o nosso novo bot

function montarDisplay(gameState) {
    // Calcula o n√∫mero de erros para saber qual imagem carregar (forca_0, forca_1, etc.)
    const erros = 6 - gameState.vidas;
    const imagePath = path.join(__dirname, 'assets', `forca_${erros}.png`);
    const media = MessageMedia.fromFilePath(imagePath);

    // Monta a legenda no formato que voc√™ pediu
    const palavraDisplay = gameState.palavraOculta.join(' ');
    let legenda = `Palavra: \`${palavraDisplay}\`\n\n`;

    if (gameState.letrasTentadas.some(l => !gameState.palavra.includes(l))) {
        const letrasErradas = gameState.letrasTentadas.filter(l => !gameState.palavra.includes(l));
        legenda += `Letras erradas: ${letrasErradas.join(', ')}\n\n`;
    }
    
    legenda += 'Para jogar, digite `!letra <letra>`';

    return { media, legenda };
}

/** Prepara o estado inicial do jogo da Forca */
function prepararJogo(session) {
¬† ¬† console.log(`[Forca] Jogo preparado para ${session.groupId}`);
¬† ¬† session.gameState = {
¬† ¬† ¬† ¬† jogadores: session.players.map(p => ({ ...p })),
¬† ¬† ¬† ¬† definidorDaPalavra: null,
        definidorIndex: 0, // <<< ADICIONADO: Come√ßa com o primeiro jogador (√≠ndice 0)
¬† ¬† ¬† ¬† vezDoJogador: 0,
¬† ¬† ¬† ¬† palavra: [],
¬† ¬† ¬† ¬† palavraOculta: [],
¬† ¬† ¬† ¬† letrasTentadas: [],
¬† ¬† ¬† ¬† vidas: 6,
¬† ¬† ¬† ¬† status: 'preparando'
¬† ¬† };
¬† ¬† session.status = 'em_jogo';
}

/** Inicia uma nova rodada (ou a primeira) */
async function iniciarRodada(session, client) {
¬† ¬† const { gameState } = session;
¬† ¬† 
¬† ¬† // Reseta o estado da rodada
¬† ¬† gameState.palavra = [];
¬† ¬† gameState.palavraOculta = [];
¬† ¬† gameState.letrasTentadas = [];
¬† ¬† gameState.vidas = 6;
¬† ¬† 
¬† ¬† if (gameState.modo === 'solo') {
¬† ¬† ¬† ¬† // L√≥gica do modo solo permanece a mesma
¬† ¬† } else { // Multiplayer
        // Usa o √≠ndice para pegar o definidor da vez
¬† ¬† ¬† ¬† const definidor = gameState.jogadores[gameState.definidorIndex]; 
¬† ¬† ¬† ¬† gameState.definidorDaPalavra = definidor.id;
        // A vez de jogar come√ßa com o jogador seguinte ao definidor
¬† ¬† ¬† ¬† gameState.vezDoJogador = (gameState.definidorIndex + 1) % gameState.jogadores.length; 
¬† ¬† ¬† ¬† gameState.status = 'definindo_palavra';

¬† ¬† ¬† ¬† await client.sendMessage(session.groupId, `Nova rodada! Agora √© a vez de *${definidor.name}* escolher a palavra secreta. Estou aguardando no privado... ü§´`);
¬† ¬† ¬† ¬† await client.sendMessage(definidor.id, `Sua vez de escolher a palavra para o jogo da forca!\nUse o comando \`!palavra <SUA_PALAVRA>\` aqui no nosso privado (sem acentos ou espa√ßos).`);
¬† ¬† }
}

/** Dispara a a√ß√£o do bot de forma ass√≠ncrona */
async function dispararAcaoBot(session, client) {
    await new Promise(resolve => setTimeout(resolve, 1500)); // Pausa para o bot "pensar"

    const comandoBot = botPlayer.decideAction(session.gameState);
    if (comandoBot) {
        const fakeMessage = { author: botPlayer.BOT_ID, body: comandoBot, reply: () => {} };
        await processarLetra(fakeMessage, session, client);
    }
}

/** Lida com a palavra secreta enviada no PV */
async function definirPalavra(message, session, client) {
    // ... (o in√≠cio da fun√ß√£o, com as valida√ß√µes, continua o mesmo)
    const { from, body } = message;
    const { gameState } = session;

    if (from !== gameState.definidorDaPalavra) { return; }
    if (gameState.status !== 'definindo_palavra') { return message.reply("‚ùå Voc√™ s√≥ pode definir a palavra no in√≠cio da rodada."); }

    const palavra = body.split(' ').slice(1).join(' ').trim().toUpperCase();
    
    if (!palavra || palavra.length < 3 || palavra.length > 15 || !/^[A-Z]+$/.test(palavra)) {
        return client.sendMessage(from, '‚ùå Comando inv√°lido ou palavra inv√°lida! Use: `!palavra SUA_PALAVRA` (apenas letras, sem espa√ßos, de 3 a 15 caracteres).');
    }

    gameState.palavra = palavra.split('');
    gameState.palavraOculta = Array(palavra.length).fill('_');
    gameState.status = 'aguardando_palpite';
    
    await client.sendMessage(from, `‚úÖ Sua palavra foi definida, ela √©: *${palavra}*`);

    const proximoJogador = gameState.jogadores[gameState.vezDoJogador];
    
    // --- ALTERA√á√ÉO PARA USAR O DISPLAY COM IMAGEM ---
    const { media, legenda } = montarDisplay(gameState);
    const legendaComVez = `A palavra foi definida! *${proximoJogador.name}*, √© sua vez de adivinhar.\n\n${legenda}`;
    await client.sendMessage(session.groupId, media, { caption: legendaComVez });
    // --- FIM DA ALTERA√á√ÉO ---

    if (proximoJogador && proximoJogador.id === botPlayer.BOT_ID) {
        await dispararAcaoBot(session, client);
    }
}

/** Processa a tentativa de uma letra */
async function processarLetra(message, session, client) {
    // ... (o in√≠cio da fun√ß√£o, com as valida√ß√µes de vez, continua o mesmo)
    const { gameState } = session;
    const playerId = message.author || message.from;

    if (gameState.status !== 'aguardando_palpite') { return; }
    if (playerId === gameState.definidorDaPalavra) { return message.reply("Voc√™ n√£o pode chutar letras, voc√™ que escolheu a palavra!"); }
    if (playerId !== gameState.jogadores[gameState.vezDoJogador].id) { return message.reply("Opa, n√£o √© a sua vez de jogar!"); }
    
    const letra = message.body.split(' ')[1]?.toUpperCase();

    if (!letra || letra.length !== 1 || !/^[A-Z]$/.test(letra)) { return; }
    if (gameState.letrasTentadas.includes(letra)) {
        if(playerId !== botPlayer.BOT_ID) message.reply(`A letra *${letra}* j√° foi tentada!`);
        return;
    }
    gameState.letrasTentadas.push(letra);

    // ... (a l√≥gica de acerto, erro e verifica√ß√£o de vit√≥ria/derrota continua a mesma)
    const acertou = gameState.palavra.includes(letra);
    if (acertou) {
        gameState.palavra.forEach((l, index) => { if (l === letra) gameState.palavraOculta[index] = letra; });
    } else {
        gameState.vidas--;
    }

    const vitoria = !gameState.palavraOculta.includes('_');
    const derrota = gameState.vidas <= 0;

    // --- L√ìGICA DE MENSAGEM FINAL ATUALIZADA ---
    if (vitoria || derrota) {
¬† ¬† ¬† ¬† const autorDaJogada = gameState.jogadores.find(p => p.id === playerId)?.name || 'Algu√©m';
¬† ¬† ¬† ¬† let mensagemRodada = vitoria
¬† ¬† ¬† ¬† ¬† ¬† ? `üèÜ Rodada vencida por *${autorDaJogada.toUpperCase()}*!`
¬† ¬† ¬† ¬† ¬† ¬† : `üíÄ Fim da rodada! Voc√™s n√£o adivinharam.`;
¬† ¬† ¬† ¬† 
¬† ¬† ¬† ¬† await client.sendMessage(session.groupId, mensagemRodada);

¬† ¬† ¬† ¬† const displayFinal = montarDisplay(gameState);
¬† ¬† ¬† ¬† const legendaFinal = `A palavra era: *${gameState.palavra.join('')}*`;
¬† ¬† ¬† ¬† await client.sendMessage(session.groupId, displayFinal.media, { caption: legendaFinal });
        
        // Incrementa o √≠ndice para a pr√≥xima rodada
        gameState.definidorIndex++; 

        // Verifica se todos j√° definiram uma palavra
        if (gameState.definidorIndex >= gameState.jogadores.length) {
            await client.sendMessage(session.groupId, 'üèÅ *FIM DE JOGO!* Todos os jogadores j√° definiram uma palavra. Obrigado por jogar!');
            sessionManager.endSession(session.groupId);
            return;
        } else {
            // Prepara para a pr√≥xima rodada
            await client.sendMessage(session.groupId, 'Pr√≥xima rodada em 5 segundos...');
            // Usamos um timeout para dar um respiro entre as rodadas
            setTimeout(() => {
                iniciarRodada(session, client);
            }, 5000);
            return;
        }
¬† ¬† }
    // --- FIM DA ATUALIZA√á√ÉO ---
    
    // Avan√ßa para o pr√≥ximo jogador
    gameState.vezDoJogador = (gameState.vezDoJogador + 1) % gameState.jogadores.length;
    if (gameState.jogadores[gameState.vezDoJogador].id === gameState.definidorDaPalavra) {
        gameState.vezDoJogador = (gameState.vezDoJogador + 1) % gameState.jogadores.length;
    }

    // --- ALTERA√á√ÉO PARA ENVIAR O DISPLAY COM IMAGEM ---
    const proximoJogador = gameState.jogadores[gameState.vezDoJogador];
    const { media, legenda } = montarDisplay(gameState);
    const legendaComVez = `${legenda}\n\n√â a vez de *${proximoJogador.name}*.`;
    await client.sendMessage(session.groupId, media, { caption: legendaComVez });
    // --- FIM DA ALTERA√á√ÉO ---

    if (proximoJogador.id === botPlayer.BOT_ID) {
        await dispararAcaoBot(session, client);
    }
}

// Exporta as fun√ß√µes
module.exports = { prepararJogo, iniciarRodada, definirPalavra, processarLetra, montarDisplay };// games/baralhoUtils.js
const { renderizarCartas } = require('./imageRenderer');
const path = require('path');
const fs = require('fs');

/**
 * Gera um baralho padr√£o de 52 cartas e o embaralha.
 * @returns {string[]} Um array de strings representando o baralho embaralhado.
 */
function gerarBaralho() {
    const naipes = ['s', 'h', 'd', 'c'];   // spades, hearts, diamonds, clubs
    const valores = ['2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K', 'A']; // 'T' para 10
    const baralho = [];

    for (let naipe of naipes) {
        for (let valor of valores) {
            baralho.push(`${valor}${naipe}`);
        }
    }

    // Embaralhar (Algoritmo Fisher-Yates)
    for (let i = baralho.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [baralho[i], baralho[j]] = [baralho[j], baralho[i]];
    }

    return baralho;
}

/**
 * Gera uma imagem de um conjunto de cartas e a salva em um diret√≥rio tempor√°rio.
 * @param {string[]} cartas - Array de cartas a serem renderizadas (ex: ['As', 'Kd']).
 * @returns {Promise<string|null>} O caminho para a imagem gerada, ou null se houver erro.
 */
async function gerarImagemCartas(cartas) {
    if (!cartas || cartas.length === 0) {
        // Se precisar de uma imagem para "m√£o vazia", pode ser tratado aqui.
        // Por enquanto, vamos retornar null para evitar erros.
        console.log('[BaralhoUtils] Tentativa de gerar imagem para um array de cartas vazio.');
        return null;
    }
    try {
        // Garante que o diret√≥rio para imagens tempor√°rias exista
        const tempDir = path.join(__dirname, '..', 'temp_images');
        if (!fs.existsSync(tempDir)) {
            fs.mkdirSync(tempDir, { recursive: true });
        }

        // Gera um nome de arquivo √∫nico para evitar conflitos
        const fileName = `cartas_${Date.now()}_${Math.random().toString(36).substring(2, 7)}.png`;
        const outputPath = path.join(tempDir, fileName);

        // Chama o renderizador de imagem
        await renderizarCartas(cartas, outputPath);

        return outputPath;
    } catch (error) {
        console.error('Erro ao gerar imagem das cartas:', error);
        return null;
    }
}

function gerarBaralhoTruco() {
    const naipes = ['s', 'h', 'd', 'c']; // espadas, copas, ouros, paus
    // No truco, removemos 8, 9, 10. O 'T' representa o 10 no baralho padr√£o.
    const valores = ['2', '3', '4', '5', '6', '7', 'J', 'Q', 'K', 'A'];
    const baralho = [];
    for (let naipe of naipes) {
        for (let valor of valores) {
            baralho.push(`${valor}${naipe}`);
        }
    }

    // Embaralhar (Algoritmo Fisher-Yates)
    for (let i = baralho.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [baralho[i], baralho[j]] = [baralho[j], baralho[i]];
    }

    console.log('[BaralhoUtils] Baralho de Truco com 40 cartas gerado e embaralhado.');
    return baralho;
}


module.exports = { gerarBaralho, gerarBaralhoTruco, gerarImagemCartas };

// C:\Users\Guilherme\bot-whatsapp\games\lobby.js

const poker = require('./Poker/poker');
const truco = require('./Truco/truco');
const botPlayer = require('./Poker/botPlayer');
const sessionManager = require('../sessions/sessionManager');
const trucoBot = require('./Truco/botPlayer');
const forca = require('./Forca/forca');
const velha = require('./Velha/velha')
const forcaBot = require('./Forca/botPlayer');
const uno = require('./Uno/uno');
const unoBot = require('./Uno/botPlayer');
const xadrez = require('./Xadrez/xadrez');
const xadrezBot = require('./Xadrez/botPlayer');
const { MessageMedia } = require('whatsapp-web.js');
const imageRenderer = require('./Xadrez/imageRenderer');

// --- L√ìGICA PRINCIPAL DO LOBBY ---

async function criarLobby(session, client) {
    session.status = 'lobby';
    console.log(`[Lobby] Criando lobby para o jogo: ${session.game}`);
    
    if (session.game === 'truco') {
        session.players = {
            timeBlue: [],
            timeRed: []
        };
    } else {
        session.players = [];
    }

    const lobbyMessage = gerarMensagemLobby(session);
    await client.sendMessage(session.groupId, lobbyMessage);
}

async function handleLobbyCommand(message, session, client) {
    const command = message.body.split(' ')[0].toLowerCase();
    const playerId = message.author || message.from;

    switch (command) {
        case '!sair':
            // ... (c√≥digo existente sem altera√ß√µes, se houver)
            return;
        case '!ajuda':
        case '!comandos':
        case '!help':
            await enviarAjudaLobby(session, message);
            return;
    }

    if (session.game === 'truco') {
        await handleTrucoLobby(message, session, client);
    } else {
        await handleLobbyGenerico(message, session, client);
    }
}

function gerarMensagemLobby(session) {
    if (session.game === 'poker') return gerarMensagemLobbyPoker(session);
    if (session.game === 'truco') return gerarMensagemLobbyTruco(session);
    if (session.game === 'forca') return gerarMensagemLobbyForca(session);
    if (session.game === 'velha') return gerarMensagemLobbyVelha(session);
    if (session.game === 'uno') return gerarMensagemLobbyUno(session);
    if (session.game === 'xadrez') return gerarMensagemLobbyXadrez(session);
    return 'Lobby em modo desconhecido.';
}

// --- L√ìGICAS DE LOBBY GEN√âRICO (P/ POKER, FORCA, VELHA, UNO, XADREZ) ---

async function handleLobbyGenerico(message, session, client) {
    const command = message.body.split(' ')[0].toLowerCase();
    switch (command) {
        case '!entrar':
            await adicionarJogadorGenerico(message, session, client);
            break;
        case '!iniciar':
            if (session.game === 'poker') await iniciarJogoPoker(message, session, client);
            else if (session.game === 'forca') await iniciarJogoForca(message, session, client);
            else if (session.game === 'velha') await iniciarJogoVelha(message, session, client);
            else if (session.game === 'uno') await iniciarJogoUno(message, session, client);
            else if (session.game === 'xadrez') await iniciarJogoXadrez(message, session, client);
            break;
    }
}

const MAX_NAME_LENGTH = 20;

async function adicionarJogadorGenerico(message, session, client) {
    const { author, body } = message;
    const playerId = author || message.from;

    let MAX_PLAYERS = 8;
    if (session.game === 'velha' || session.game === 'xadrez') {
        MAX_PLAYERS = 2;
    }

    if (session.players.length >= MAX_PLAYERS) {
        return message.reply('‚ùå A sala est√° cheia!');
    }
    if (session.players.some(p => p.id === playerId)) {
        return message.reply('‚úîÔ∏è Voc√™ j√° est√° na mesa.');
    }
    
    let playerName = body.split(' ').slice(1).join(' ').trim();
    if (!playerName) {
        return message.reply('‚ö†Ô∏è Por favor, digite seu nome. Ex: `!entrar Jo√£o`');
    }

    if (playerName.length > MAX_NAME_LENGTH) {
        playerName = playerName.substring(0, MAX_NAME_LENGTH);
        await message.reply(`Seu nome era muito longo e foi encurtado para: *${playerName}*`);
    }

    session.players.push({ id: playerId, name: playerName });
    sessionManager.mapPlayerToGroup(playerId, session.groupId);
    const lobbyMessage = gerarMensagemLobby(session);
    await client.sendMessage(session.groupId, lobbyMessage);
}

// --- L√ìGICAS ESPEC√çFICAS DE CADA JOGO ---

// =================================================================
// POKER
// =================================================================
function gerarMensagemLobbyPoker(session) {
    const MAX_PLAYERS = 8;
    let playersList = '';
    for (let i = 0; i < MAX_PLAYERS; i++) {
        const player = session.players[i];
        playersList += `${i + 1}. ${player ? player.name : '<vazio>'}\n`;
    }

    let comandos = '[ !entrar <seu_nome> ] ¬†[ !ajuda ]';
    if (session.players.length >= 1) {
        comandos += ' ¬†*[ !iniciar ]*';
    }

    let lobbyMessage = `*Mesa de Poker Criada!* üÉè\n\n*Jogadores:*\n${playersList}\n---\n${comandos}`;

    if (session.players.length === 1) {
        lobbyMessage += '\n\n*Aviso:* Se iniciar agora, um BOT completar√° a mesa! ü§ñ';
    }

    return lobbyMessage;
}

async function iniciarJogoPoker(message, session, client) {
    const playerId = message.author || message.from;

    if (session.players.length > 0 && session.players[0].id !== playerId) {
        return message.reply('Apenas o primeiro jogador que entrou na mesa pode iniciar o jogo.');
    }
    if (session.players.length === 0) {
        return client.sendMessage(session.groupId, '‚ö†Ô∏è N√£o √© poss√≠vel iniciar um jogo sem jogadores!');
    }
    if (session.players.length === 1) {
        const bot = botPlayer.createBotPlayer();
        session.players.push(bot);
        await client.sendMessage(session.groupId, `ü§ñ ${bot.name} entrou para completar a mesa.`);
    }

    session.status = 'em_jogo';
    poker.prepararJogo(session);
    await client.sendMessage(session.groupId, 'üé≤ O jogo de *Poker* est√° come√ßando! Boa sorte a todos.');
    await poker.iniciarRodada(session, client);
}

// =================================================================
// TRUCO
// =================================================================
// (Fun√ß√µes de Truco permanecem aqui, pois t√™m l√≥gica customizada)
function gerarMensagemLobbyTruco(session) {
    let blueList = '';
    let redList = '';

    for (let i = 0; i < 2; i++) {
        const playerBlue = session.players.timeBlue[i];
        blueList += `${i + 1}. ${playerBlue ? playerBlue.name : '<vazio>'}\n`;
        const playerRed = session.players.timeRed[i];
        redList += `${i + 1}. ${playerRed ? playerRed.name : '<vazio>'}\n`;
    }

    let comandos = '[ !entrar <seu_nome> <blue ou red> ] ¬†[ !ajuda ]';
    const blueCount = session.players.timeBlue.length;
    const redCount = session.players.timeRed.length;
    const totalPlayers = blueCount + redCount;

    if (totalPlayers === 1 || (blueCount === 1 && redCount === 1) || (blueCount === 2 && redCount === 2)) {
        comandos += ' ¬†*[ !iniciar ]*';
    }

    let lobbyMessage = `*Mesa de Truco Criada!* üé¥\n\n*Jogadores:*\n\n*Time Blue* üîµ\n${blueList}\n*Time Red* üî¥\n${redList}\n---\n${comandos}`;

    if (totalPlayers === 1) {
        lobbyMessage += '\n\n*Aviso:* Se iniciar agora, voc√™ jogar√° contra um BOT! ü§ñ';
    }

    return lobbyMessage;
}

async function handleTrucoLobby(message, session, client) {
    const command = message.body.split(' ')[0].toLowerCase();
    switch (command) {
        case '!entrar':
            await adicionarJogadorTruco(message, session, client);
            break;
        case '!iniciar':
            await iniciarJogoTruco(message, session, client);
            break;
    }
}

async function adicionarJogadorTruco(message, session, client) {
    const { author, body } = message;
    const playerId = author || message.from;
    const args = body.split(' ').slice(1);
    
    if (session.players.timeBlue.some(p => p.id === playerId) || session.players.timeRed.some(p => p.id === playerId)) {
        return message.reply('‚úîÔ∏è Voc√™ j√° est√° em um time.');
    }
    if (args.length === 0) {
        return message.reply('‚ö†Ô∏è Por favor, digite seu nome. Ex: `!entrar Jo√£o`');
    }

    let playerName;
    let timeEscolhido = args[args.length - 1].toLowerCase();
    let timeObject;

    if (timeEscolhido === 'blue' || timeEscolhido === 'red') {
        playerName = args.slice(0, -1).join(' ').trim();
    } else {
        playerName = args.join(' ').trim();
    }

    if (!playerName) {
        return message.reply('‚ö†Ô∏è Por favor, digite seu nome. Ex: `!entrar Jo√£o blue`');
    }

    if (playerName.length > MAX_NAME_LENGTH) {
        playerName = playerName.substring(0, MAX_NAME_LENGTH);
        await message.reply(`Seu nome era muito longo e foi encurtado para: *${playerName}*`);
    }

    if (timeEscolhido === 'blue' || timeEscolhido === 'red') {
        timeObject = (timeEscolhido === 'blue') ? session.players.timeBlue : session.players.timeRed;
        if (timeObject.length >= 2) {
            return message.reply(`‚ùå O time ${timeEscolhido} j√° est√° cheio!`);
        }
    } else {
        if (session.players.timeBlue.length <= session.players.timeRed.length && session.players.timeBlue.length < 2) {
            timeObject = session.players.timeBlue;
            await message.reply(`Voc√™ foi alocado automaticamente ao time *Blue üîµ*!`);
        } else if (session.players.timeRed.length < 2) {
            timeObject = session.players.timeRed;
            await message.reply(`Voc√™ foi alocado automaticamente ao time *Red üî¥*!`);
        } else {
            return message.reply('‚ùå A mesa est√° cheia! N√£o h√° vagas em nenhum time.');
        }
    }
    
    timeObject.push({ id: playerId, name: playerName });
    sessionManager.mapPlayerToGroup(playerId, session.groupId);
    const lobbyMessage = gerarMensagemLobby(session);
    await client.sendMessage(session.groupId, lobbyMessage);
}

async function iniciarJogoTruco(message, session, client) {
    const playerId = message.author || message.from;
    const criadorId = session.players.timeBlue[0]?.id || session.players.timeRed[0]?.id;

    if (criadorId && criadorId !== playerId) {
        return message.reply('Apenas o primeiro jogador que entrou na mesa pode iniciar o jogo.');
    }

    let blueCount = session.players.timeBlue.length;
    let redCount = session.players.timeRed.length;
    const totalPlayers = blueCount + redCount;

    if (totalPlayers === 1) {
        const bot = trucoBot.createBotPlayer();
        if (blueCount === 1) {
            session.players.timeRed.push(bot);
            redCount++;
        } else {
            session.players.timeBlue.push(bot);
            blueCount++;
        }
        await client.sendMessage(session.groupId, `ü§ñ ${bot.name} entrou para o time advers√°rio!`);
    }

    if (!((blueCount === 1 && redCount === 1) || (blueCount === 2 && redCount === 2))) {
        return message.reply('‚ö†Ô∏è N√£o √© poss√≠vel iniciar! O jogo deve ser 1x1 ou 2x2.');
    }
    
    const jogadoresOrdenados = [];
    const timeBlue = session.players.timeBlue;
    const timeRed = session.players.timeRed;

    for (let i = 0; i < 2; i++) {
        if (timeBlue[i]) jogadoresOrdenados.push(timeBlue[i]);
        if (timeRed[i]) jogadoresOrdenados.push(timeRed[i]);
    }
    
    session.players = jogadoresOrdenados;
    session.status = 'em_jogo';
    truco.prepararJogo(session);
    await client.sendMessage(session.groupId, 'üé≤ O jogo de *Truco* est√° come√ßando! Boa sorte a todos.');
    await truco.iniciarRodada(session, client);
}

// =================================================================
// FORCA
// =================================================================
function gerarMensagemLobbyForca(session) {
    const MAX_PLAYERS = 8;
    let playersList = '';
    for (let i = 0; i < MAX_PLAYERS; i++) {
        const player = session.players[i];
        playersList += `${i + 1}. ${player ? player.name : '<vazio>'}\n`;
    }

    let comandos = '[ !entrar <seu_nome> ] ¬†[ !ajuda ]';
    if (session.players.length >= 1) {
        comandos += ' ¬†*[ !iniciar ]*';
    }

    let lobbyMessage = `*Sala de Jogo da Forca Criada!* üíÄ\n\n*Jogadores na Fila:*\n${playersList}\n---\n${comandos}`;

    if (session.players.length === 1) {
        lobbyMessage += '\n\n*Aviso:* Se iniciar agora, voc√™ jogar√° sozinho contra o Bot!';
    } else if (session.players.length > 1) {
        lobbyMessage += `\n\n*Aviso:* Se iniciar agora, o jogo ser√° em grupo e *${session.players[0].name}* escolher√° a primeira palavra!`;
    }

    return lobbyMessage;
}

async function iniciarJogoForca(message, session, client) {
    const playerId = message.author || message.from;

    if (session.players.length > 0 && session.players[0].id !== playerId) {
        return message.reply('Apenas o primeiro jogador que entrou na sala pode iniciar o jogo.');
    }
    if (session.players.length === 0) {
        return client.sendMessage(session.groupId, '‚ö†Ô∏è N√£o √© poss√≠vel iniciar um jogo sem jogadores!');
    }

    if (session.players.length === 1) {
        const bot = forcaBot.createBotPlayer();
        session.players.push(bot);
        await client.sendMessage(session.groupId, `ü§ñ ${bot.name} entrou na sala para adivinhar a sua palavra!`);
    }

    session.status = 'em_jogo';
    forca.prepararJogo(session);
    await client.sendMessage(session.groupId, 'üíÄ O *Jogo da Forca* est√° come√ßando!');
    await forca.iniciarRodada(session, client);
}

// =================================================================
// VELHA
// =================================================================
function gerarMensagemLobbyVelha(session) {
    let playersList = '1. <vazio>\n2. <vazio>\n';
    if (session.players.length > 0) {
        playersList = `1. ${session.players[0].name}\n`;
        playersList += `2. ${session.players[1] ? session.players[1].name : '<vazio>'}\n`;
    }

    let comandos = '[ !entrar <seu_nome> ] ¬†[ !ajuda ]';
    
    if (session.players.length >= 1) {
        comandos += ' ¬†*[ !iniciar ]*';
    }

    let lobbyMessage = `*Sala de Jogo da Velha Infinito Criada!* ‚ôæÔ∏è\n\n*Jogadores (2 no total):*\n${playersList}\n---\n${comandos}`;
    
    if (session.players.length === 1) {
        const botPlayer = require('./Velha/botPlayer');
        lobbyMessage += `\n\n*Aviso:* Se iniciar agora, voc√™ jogar√° contra o *BOT Velhaco*! ü§ñ`;
    }
    
    return lobbyMessage;
}

async function iniciarJogoVelha(message, session, client) {
    const botPlayer = require('./Velha/botPlayer');

    if (session.players.length === 1) {
        const bot = botPlayer.createBotPlayer();
        session.players.push(bot);
        await client.sendMessage(session.groupId, `ü§ñ ${bot.name} entrou para jogar contra voc√™!`);
    }

    if (session.players.length !== 2) {
        return message.reply('‚ö†Ô∏è √â preciso exatamente 2 jogadores para iniciar o Jogo da Velha.');
    }

    session.status = 'em_jogo';
    const jogoDaVelha = require('./Velha/velha');
    jogoDaVelha.prepararJogo(session);

    const primeiroJogador = session.players[0];
    const legenda = `‚ôæÔ∏è O *Jogo da Velha Infinito* est√° come√ßando!\n\n√â a vez de *${primeiroJogador.name}* (‚ùå). Use \`!jogar <posi√ß√£o>\`, ex: \`!jogar a1\`.`;
    
    const displayInicial = await jogoDaVelha.montarDisplay(session.gameState, null);
    await client.sendMessage(session.groupId, displayInicial, { caption: legenda });

    if (primeiroJogador.id === botPlayer.BOT_ID) {
        await jogoDaVelha.dispararAcaoBot(session, client);
    }
}

// =================================================================
// UNO
// =================================================================
function gerarMensagemLobbyUno(session) {
    const MAX_PLAYERS = 8;
    let playersList = '';
    for (let i = 0; i < MAX_PLAYERS; i++) {
        const player = session.players[i];
        playersList += `${i + 1}. ${player ? player.name : '<vazio>'}\n`;
    }

    let comandos = '[ !entrar <seu_nome> ] ¬†[ !ajuda ]';
    if (session.players.length >= 1) {
        comandos += ' ¬†*[ !iniciar ]*';
    }

    let lobbyMessage = `*Mesa de UNO Criada!* üÉè\n\n*Jogadores:*\n${playersList}\n---\n${comandos}`;

    if (session.players.length === 1) {
        lobbyMessage += `\n\n*Aviso:* Se iniciar agora, voc√™ jogar√° contra o *${unoBot.BOT_NAME}*! ü§ñ`;
    }

    return lobbyMessage;
}

async function iniciarJogoUno(message, session, client) {
    const playerId = message.author || message.from;

    if (session.players.length > 0 && session.players[0].id !== playerId) {
        return message.reply('Apenas o primeiro jogador que entrou na mesa pode iniciar o jogo.');
    }
    if (session.players.length === 0) {
        return client.sendMessage(session.groupId, '‚ö†Ô∏è N√£o √© poss√≠vel iniciar um jogo sem jogadores!');
    }

    if (session.players.length === 1) {
        const bot = unoBot.createBotPlayer();
        session.players.push(bot);
        await client.sendMessage(session.groupId, `ü§ñ ${bot.name} entrou para completar a mesa.`);
    }

    uno.prepararJogo(session);
    await client.sendMessage(session.groupId, 'üÉè O jogo de *UNO* est√° come√ßando! Boa sorte a todos.');
    await uno.iniciarPartida(session, client);
}

// =================================================================
// XADREZ
// =================================================================
function gerarMensagemLobbyXadrez(session) {
    let playersList = '1. (Brancas) <vazio>\n2. (Pretas) <vazio>\n';
    if (session.players.length > 0) {
        playersList = `1. (Brancas) ${session.players[0].name}\n`;
        playersList += `2. (Pretas) ${session.players[1] ? session.players[1].name : '<vazio>'}\n`;
    }

    let comandos = '[ !entrar <seu_nome> ] ¬†[ !ajuda ]';
    
    if (session.players.length >= 1) {
        comandos += ' ¬†*[ !iniciar ]*';
    }

    let lobbyMessage = `*Mesa de Xadrez Criada!* ‚ôüÔ∏è\n\n*Jogadores (2 no total):*\n${playersList}\n---\n${comandos}`;
    
    if (session.players.length === 1) {
        lobbyMessage += `\n\n*Aviso:* Se iniciar agora, voc√™ jogar√° contra o *BOT Kasparov*! ü§ñ`;
    }
    
    return lobbyMessage;
}

async function iniciarJogoXadrez(message, session, client) {
    const playerId = message.author || message.from;

    if (session.players.length > 0 && session.players[0].id !== playerId) {
        return message.reply('Apenas o primeiro jogador que entrou na mesa pode iniciar o jogo.');
    }

    if (session.players.length === 1) {
        const bot = xadrezBot.createBotPlayer();
        session.players.push(bot);
        await client.sendMessage(session.groupId, `ü§ñ *BOT Kasparov* entrou para jogar de Pretas!`);
    }

    if (session.players.length !== 2) {
        return message.reply('‚ö†Ô∏è √â preciso exatamente 2 jogadores para iniciar o Xadrez.');
    }

    session.status = 'em_jogo';
    xadrez.prepararJogo(session);
    
    const primeiroJogador = session.players[0];
    const legenda = `‚ôüÔ∏è O jogo de *Xadrez* est√° come√ßando!\n\n√â a vez de *${primeiroJogador.name}* (Brancas).\n Use \`!mover <origem> <destino>\`\n ex: \`!mover e2 e4\`.`;
    
    
    const imagemBuffer = await imageRenderer.renderBoardToImage(session.gameState);
    
    if (imagemBuffer) {
        const chat = await message.getChat();
        await chat.sendMessage(new MessageMedia('image/png', imagemBuffer.toString('base64')), { caption: legenda });
    } else {
        await message.reply('‚ùå Ocorreu um erro ao gerar a imagem do tabuleiro.');
    }
}

// =================================================================
// AJUDA
// =================================================================
async function enviarAjudaLobby(session, message) {
    let ajudaMsg = '';
    // ...
    if (session.game === 'xadrez') {
        ajudaMsg = `üìñ *Comandos do Lobby de Xadrez:*\n` +
                      `- !entrar <seu_nome> - Entra na partida (limite de 2 jogadores)\n` +
                      `- !iniciar - Come√ßa o jogo\n` +
                      `- !sair - Fecha o lobby ou sai dele\n\n` +
                      `Se apenas 1 jogador iniciar, um bot entrar√° na partida.`;
    }
    await message.reply(ajudaMsg);
}

module.exports = {
    criarLobby,
    handleLobbyCommand
};// games/Xadrez/imageRenderer.js

const Jimp = require('jimp');
const path = require('path');
const { Chess } = require('chess.js');

// --- CONFIGURA√á√ÉO ---
const TAMANHO_QUADRADO = 800;
const OFFSET_X = 200;
const OFFSET_Y = 200;

const CAMINHO_ASSETS = path.join(__dirname, 'assets');
const CAMINHO_TABULEIRO = path.join(CAMINHO_ASSETS, 'Tabuleiro.png');

// --- CORRE√á√ÉO DEFINITIVA: Usando um novo sistema de chaves (cor + tipo) ---
// Este mapa agora usa chaves √∫nicas que combinam a cor ('w' ou 'b') e o tipo da pe√ßa.
const ARQUIVOS_PECAS = {
    // Pe√ßas Brancas (w + TIPO)
    'wP': 'Pb.png', 'wR': 'Rb.png', 'wN': 'Nb.png', 'wB': 'Bb.png', 'wQ': 'Qb.png', 'wK': 'Kb.png',
    // Pe√ßas Pretas (b + TIPO)
    'bP': 'pp.png', 'bR': 'rp.png', 'bN': 'np.png', 'bB': 'bp.png', 'bQ': 'qp.png', 'bK': 'kp.png'
};

const cacheImagensPecas = {};

async function preCarregarImagensPecas() {
    console.log('[ImageRenderer] Pre-carregando imagens das pe√ßas...');
    // Agora o loop itera sobre as novas chaves
    for (const key in ARQUIVOS_PECAS) {
        const caminho = path.join(CAMINHO_ASSETS, ARQUIVOS_PECAS[key]);
        // A chave no cache ser√° 'wP', 'bP', etc.
        cacheImagensPecas[key] = await Jimp.read(caminho);
    }
    console.log('[ImageRenderer] Imagens das pe√ßas carregadas com sucesso!');
}

async function renderBoardToImage(gameState) {
    try {
        const game = new Chess(gameState.fen);
        const board = game.board();

        const imagemTabuleiro = await Jimp.read(CAMINHO_TABULEIRO);

        for (let i = 0; i < 8; i++) {
            for (let j = 0; j < 8; j++) {
                const peca = board[i][j];
                if (peca) {
                    // --- CORRE√á√ÉO DEFINITIVA: Criando a chave √∫nica para a busca ---
                    const key = peca.color + peca.type.toUpperCase(); // Ex: 'w' + 'p' = 'wp'
                    const imagemPeca = cacheImagensPecas[key];
                    
                    if (imagemPeca) {
                        const x_quadrado = OFFSET_X + j * TAMANHO_QUADRADO;
                        const y_quadrado = OFFSET_Y + i * TAMANHO_QUADRADO;

                        const x_centralizado = x_quadrado + (TAMANHO_QUADRADO / 2) - (imagemPeca.getWidth() / 2);
                        const y_centralizado = y_quadrado + (TAMANHO_QUADRADO / 2) - (imagemPeca.getHeight() / 2);

                        imagemTabuleiro.composite(imagemPeca, x_centralizado, y_centralizado);
                    }
                }
            }
        }

        return await imagemTabuleiro.getBufferAsync(Jimp.MIME_PNG);
    } catch (error) {
        console.error("Erro ao renderizar a imagem do tabuleiro:", error);
        return null;
    }
}

preCarregarImagensPecas().catch(err => {
    console.error("Falha fatal no pr√©-carregamento das imagens das pe√ßas:", err);
    process.exit(1);
});

module.exports = {
    renderBoardToImage,
};// VERS√ÉO FINAL (COMO DEVE FICAR)

const { Chess } = require('chess.js');
const { MessageMedia } = require('whatsapp-web.js'); // 1. IMPORTA√á√ÉO ADICIONADA
const imageRenderer = require('./imageRenderer');   // 2. NOVA IMPORTA√á√ÉO
const xadrezBot = require('./botPlayer');
const sessionManager = require('../../sessions/sessionManager');

/**
 * Fun√ß√£o auxiliar para aplicar uma jogada, anunciar o resultado e passar a vez.
 */
async function aplicarJogadaEAnunciar(moveString, session, client, message) {
    const game = new Chess(session.gameState.fen);
    const moveResult = game.move(moveString, { sloppy: true });

    if (moveResult === null) {
        await message.reply('‚ùå Movimento inv√°lido! Verifique a jogada e tente novamente.');
        return;
    }

    session.gameState.fen = game.fen();
    session.gameState.jogadorDaVez = game.turn();
    session.gameState.historico.push(moveResult.san);

    // 3. SUBSTITUI√á√ÉO DA L√ìGICA DE RENDERIZA√á√ÉO
    const imagemBuffer = await imageRenderer.renderBoardToImage(session.gameState);
    
    // 4. CORRE√á√ÉO DO BUG: Anuncia o nome do jogador que acabou de mover
    let legenda = `*${session.players[moveResult.color === 'w' ? 0 : 1].name}* jogou *${moveResult.san}*.`;

    if (game.isCheckmate()) {
        // CORRE√á√ÉO DO BUG: Anuncia o vencedor corretamente
        legenda += `\n\nüèÜ *XEQUE-MATE!* O jogador *${session.players[moveResult.color === 'w' ? 0 : 1].name}* venceu!`;
        if (imagemBuffer) {
            await client.sendMessage(session.groupId, new MessageMedia('image/png', imagemBuffer.toString('base64')), { caption: legenda });
        }
        sessionManager.endSession(session.groupId);
        return;
    } else if (game.isDraw()) {
        legenda += `\n\nü§ù *EMPATE!* O jogo terminou empatado.`;
        if (imagemBuffer) {
            await client.sendMessage(session.groupId, new MessageMedia('image/png', imagemBuffer.toString('base64')), { caption: legenda });
        }
        sessionManager.endSession(session.groupId);
        return;
    }

    const proximoJogador = session.players[game.turn() === 'w' ? 0 : 1];
    legenda += `\n\n√â a vez de *${proximoJogador.name}* (${game.turn() === 'w' ? 'Brancas' : 'Pretas'}).`;
    if (game.inCheck()) {
        legenda += `\n\n‚ö†Ô∏è *Voc√™ est√° em XEQUE!*`;
    }

    // 5. ENVIO DA MENSAGEM COMO IMAGEM E LEGENDA
    if (imagemBuffer) {
        await client.sendMessage(session.groupId, new MessageMedia('image/png', imagemBuffer.toString('base64')), { caption: legenda });
    } else {
        await message.reply('‚ùå Ocorreu um erro ao gerar a imagem do tabuleiro.');
    }
    
    if (proximoJogador.id === xadrezBot.BOT_ID) {
        await client.sendMessage(session.groupId, `ü§ñ *${xadrezBot.BOT_NAME}* est√° pensando...`);
        const botMove = xadrezBot.getBotMove(session.gameState.fen); // Bot s√≠ncrono agora
        if (botMove) {
            await aplicarJogadaEAnunciar(botMove, session, client, message);
        } else {
            await client.sendMessage(session.groupId, `O Bot n√£o encontrou movimentos poss√≠veis (Fim de Jogo).`);
        }
    }
}

/**
 * Manipula os comandos do jogador durante uma partida de xadrez.
 */
async function handleGameCommand(message, session, client) {
    const { from, body, author } = message;
    const playerId = author || from;
    const commandArgs = body.split(' ');
    const command = commandArgs[0].toLowerCase();
    
    const jogadorAtualIndex = session.gameState.jogadorDaVez === 'w' ? 0 : 1;
    const jogadorAtual = session.players[jogadorAtualIndex];

    switch (command) {
        case '!mover':
            if (playerId !== jogadorAtual.id) {
                return await message.reply('‚ùå N√£o √© a sua vez de jogar!');
            }
            if (commandArgs.length !== 3) {
                return await message.reply('Formato incorreto. Use: `!mover <origem> <destino>` (ex: `!mover e2 e4`)');
            }
            const fromSquare = commandArgs[1].toLowerCase();
            const toSquare = commandArgs[2].toLowerCase();
            const moveString = `${fromSquare}${toSquare}`;
            await aplicarJogadaEAnunciar(moveString, session, client, message);
            break;

        case '!desistir':
            const vencedorIndex = jogadorAtualIndex === 0 ? 1 : 0;
            const vencedor = session.players[vencedorIndex];
            await client.sendMessage(session.groupId, `üè≥Ô∏è *${jogadorAtual.name}* desistiu da partida. *${vencedor.name}* √© o vencedor!`);
            sessionManager.endSession(session.groupId);
            break;

        case '!tabuleiro':
        case '!status':
            // 6. ATUALIZA√á√ÉO DO COMANDO !tabuleiro
            const imagemBufferStatus = await imageRenderer.renderBoardToImage(session.gameState);
            const legendaStatus = `√â a vez de *${jogadorAtual.name}* (${jogadorAtualIndex === 0 ? 'Brancas' : 'Pretas'}).`;
            if (imagemBufferStatus) {
                await client.sendMessage(session.groupId, new MessageMedia('image/png', imagemBufferStatus.toString('base64')), { caption: legendaStatus });
            }
            break;

        default:
            if (command.startsWith('!')) {
                await message.reply('Comando de xadrez inv√°lido. Use `!mover`, `!desistir` ou `!tabuleiro`.');
            }
            break;
    }
}

module.exports = {
    handleGameCommand,
};// games/Xadrez/botPlayer.js

// Agora precisamos do chess.js aqui para encontrar os movimentos v√°lidos.
const { Chess } = require('chess.js');

const BOT_ID = 'BOT_XADREZ_ID@c.us';
const BOT_NAME = 'BOT Aleat√≥rio'; // Nome mais apropriado agora :)

/**
 * Cria um objeto representando o jogador BOT.
 * @returns {{id: string, name: string}}
 */
function createBotPlayer() {
    return {
        id: BOT_ID,
        name: BOT_NAME,
    };
}

/**
 * Escolhe uma jogada v√°lida aleat√≥ria.
 * @param {string} fen - A representa√ß√£o FEN do estado atual do tabuleiro.
 * @returns {string|null} Uma jogada v√°lida aleat√≥ria ou null se n√£o houver jogadas.
 */
function getBotMove(fen) {
    // Carrega o estado do jogo a partir da FEN
    const game = new Chess(fen);

    // Pega a lista de todos os movimentos poss√≠veis
    const possibleMoves = game.moves();

    // Se n√£o houver movimentos (xeque-mate ou empate), retorna nulo.
    if (possibleMoves.length === 0) {
        return null;
    }

    // Escolhe um √≠ndice aleat√≥rio da lista de movimentos
    const randomIndex = Math.floor(Math.random() * possibleMoves.length);
    
    // Retorna o movimento escolhido
    const randomMove = possibleMoves[randomIndex];

    console.log(`[Bot Aleat√≥rio] Escolheu a jogada "${randomMove}" de ${possibleMoves.length} op√ß√µes.`);
    
    return randomMove;
}

module.exports = {
    createBotPlayer,
    getBotMove,
    BOT_ID,
    BOT_NAME,
};// games/Xadrez/xadrez.js

const { Chess } = require('chess.js');

// Mapeamento das pe√ßas do chess.js para emojis
const pecasUnicode = {
    'P': '‚ôô', 'R': '‚ôñ', 'N': '‚ôò', 'B': '‚ôó', 'Q': '‚ôï', 'K': '‚ôî', // Brancas
    'p': '‚ôüÔ∏é', 'r': '‚ôú', 'n': '‚ôû', 'b': '‚ôù', 'q': '‚ôõ', 'k': '‚ôö'  // Pretas
};

/**
 * Prepara o estado inicial do jogo na sess√£o.
 * @param {object} session - O objeto da sess√£o do jogo.
 */
function prepararJogo(session) {
    const game = new Chess();
    session.gameState = {
        fen: game.fen(), // Armazena o estado do tabuleiro na nota√ß√£o FEN
        jogadorDaVez: 'w', // 'w' para brancas, 'b' para pretas
        capturadas: { w: [], b: [] }, // Pe√ßas capturadas
        historico: [], // Hist√≥rico de jogadas
    };
    console.log('[Xadrez] Jogo preparado. FEN inicial:', session.gameState.fen);
}

/**
 * Desenha o tabuleiro de xadrez em formato de texto com emojis.
 * @param {object} gameState - O estado do jogo da sess√£o.
 * @returns {string} Uma string formatada representando o tabuleiro.
 */
async function desenharTabuleiro(gameState) {
    if (!gameState || !gameState.fen) {
        return 'Estado do jogo inv√°lido.';
    }
    const game = new Chess(gameState.fen);
    const board = game.board(); // Pega a representa√ß√£o 2D do tabuleiro

    let boardStr = '```'; // Usamos ``` para formatar como monoespa√ßado no WhatsApp
    
    // Adiciona letras das colunas no topo
    boardStr += '  A B C D E F G H\n';

    for (let i = 0; i < board.length; i++) {
        const row = board[i];
        boardStr += `${8 - i} `; // Adiciona o n√∫mero da linha
        for (let j = 0; j < row.length; j++) {
            const peca = row[j];
            if (peca) {
                boardStr += pecasUnicode[peca.type.toUpperCase() === peca.type ? peca.type : peca.type.toLowerCase()];
            } else {
                // Alterna entre quadrados brancos e pretos para o fundo
                boardStr += (i + j) % 2 === 0 ? '‚¨ú' : '‚¨õ';
            }
            boardStr += ' ';
        }
        boardStr += `${8 - i}\n`; // Adiciona o n√∫mero da linha no final
    }
    
    // Adiciona letras das colunas na base
    boardStr += '  A B C D E F G H';
    boardStr += '```';

    return boardStr;
}

module.exports = {
    prepararJogo,
    desenharTabuleiro,
};// games/Uno/baralhoUno.js

/**
 * Gera um baralho de UNO completo com 108 cartas e o embaralha.
 * @returns {Array<object>} Um array de objetos de carta embaralhado.
 */
function gerarBaralhoUno() {
    const cores = ['vermelho', 'amarelo', 'verde', 'azul'];
    const valoresNumericos = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];
    const valoresAcao = ['+2', 'reverso', 'pular'];
    const valoresCuringa = ['curinga', '+4'];
    const baralho = [];

    // Gerar cartas coloridas
    for (const cor of cores) {
        // Um '0' de cada cor
        baralho.push({ cor, valor: '0' });

        // Duas de cada n√∫mero (1-9) e de cada carta de a√ß√£o
        for (let i = 0; i < 2; i++) {
            for (let j = 1; j < valoresNumericos.length; j++) {
                baralho.push({ cor, valor: valoresNumericos[j] });
            }
            for (const valor of valoresAcao) {
                baralho.push({ cor, valor });
            }
        }
    }

    // Gerar cartas Curinga
    for (let i = 0; i < 4; i++) {
        baralho.push({ cor: 'preto', valor: 'curinga' });
        baralho.push({ cor: 'preto', valor: '+4' });
    }

    // Embaralhar (Algoritmo Fisher-Yates, o mesmo usado no bot [cite: 721])
    for (let i = baralho.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [baralho[i], baralho[j]] = [baralho[j], baralho[i]];
    }

    return baralho;
}

module.exports = { gerarBaralhoUno };// games/Uno/uno.js

const { renderizarMao, renderizarCartaUnica } = require('./imageRendererUno');
const { MessageMedia } = require('whatsapp-web.js');
const path = require('path');
const fs = require('fs');
const sessionManager = require('../../sessions/sessionManager');
const { gerarBaralhoUno } = require('./baralhoUno');
const botPlayer = require('./botPlayer'); // Importamos o bot

// games/Uno/uno.js

function formatarMaoJogador(mao, gameState, cartasCompradas = []) {
    const corEmoji = { 'vermelho': 'üü•', 'amarelo': 'üü®', 'verde': 'üü©', 'azul': 'üü¶', 'preto': 'üé®' };
    let textoFinal = '*Sua m√£o atual:*\n';

    const maoAntiga = mao.filter(c => !cartasCompradas.includes(c));
    if (maoAntiga.length > 0) {
        maoAntiga.forEach((carta, index) => {
            textoFinal += `${index + 1}. ${corEmoji[carta.cor]} ${carta.valor}\n`;
        });
    } else if (cartasCompradas.length === 0) {
        return 'Voc√™ n√£o tem mais cartas. Parab√©ns, voc√™ venceu!';
    }

    if (cartasCompradas.length > 0) {
        textoFinal += '---\n*Cartas compradas:*\n';
        cartasCompradas.forEach((carta, index) => {
            textoFinal += `${maoAntiga.length + index + 1}. ${corEmoji[carta.cor]} ${carta.valor}\n`;
        });
    }

    textoFinal += '\nPara jogar, use `!jogar <n√∫mero da carta>`.';
    
    if (gameState && gameState.comprouNestaRodada) {
        textoFinal += '\nSe n√£o puder jogar, use `!passar`.';
    }

    return textoFinal;
}

// --- FUN√á√ÉO DE PREPARA√á√ÉO (j√° t√≠nhamos) ---
function prepararJogo(session) {
    session.status = 'em_jogo';
    session.gameState = {
        jogadores: session.players.map(p => ({ ...p, mao: [] })),
        baralho: gerarBaralhoUno(),
        pilhaDescarte: [],
        cartaAtual: null,
        jogadorDaVezIndex: 0,
        sentido: 1,
        corAtual: null,
        // Propriedade nova para controlar o ac√∫mulo de +2 e +4
        efeitoAcumulado: { tipo: null, quantidade: 0 },
        // Propriedade nova para a regra de compra volunt√°ria
        comprouNestaRodada: false,
        disseUno: new Set()
    };
    console.log(`[UNO] Jogo preparado para ${session.groupId}`);
}

// --- FUN√á√ÉO DE IN√çCIO (j√° t√≠nhamos) ---
async function iniciarPartida(session, client) {
    const { gameState } = session;

    // 1. Distribui 7 cartas para cada jogador
    for (let i = 0; i < 7; i++) {
        for (const jogador of gameState.jogadores) {
            if (gameState.baralho.length === 0) break;
            jogador.mao.push(gameState.baralho.pop());
        }
    }

    // 2. Vira a primeira carta ANTES de enviar as m√£os
    let primeiraCarta = gameState.baralho.pop();
    while (primeiraCarta.valor === '+4') {
        gameState.baralho.push(primeiraCarta);
        for (let i = gameState.baralho.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [gameState.baralho[i], gameState.baralho[j]] = [gameState.baralho[j], gameState.baralho[i]];
        }
        primeiraCarta = gameState.baralho.pop();
    }
    gameState.pilhaDescarte.push(primeiraCarta);
    gameState.cartaAtual = primeiraCarta;
    gameState.corAtual = primeiraCarta.cor;

    // 3. Envia a m√£o inicial para cada jogador, agora com o gameState completo
    for (const jogador of gameState.jogadores) {
        if (jogador.id.includes('@cpu.bot')) {
            console.log(`[UNO] M√£o do Bot ${jogador.name}:`, jogador.mao.map(c => `${c.cor} ${c.valor}`).join(', '));
        } else {
            await enviarMaoGrafica(jogador, client);
        }
    }

    // 4. Monta o an√∫ncio inicial com a IMAGEM da primeira carta
    try {
        const tempDir = path.join(__dirname, 'temp');
        if (!fs.existsSync(tempDir)) fs.mkdirSync(tempDir);
        const tempCardPath = path.join(tempDir, `initial_card_${Date.now()}.png`);

        await renderizarCartaUnica(primeiraCarta, tempCardPath);
        const media = MessageMedia.fromFilePath(tempCardPath);
        
        const legendaAnuncio = `*O jogo de UNO come√ßou!* üÉè\n\nA primeira carta na mesa √©:`;
        await client.sendMessage(session.groupId, media, { caption: legendaAnuncio });
        fs.unlinkSync(tempCardPath);

    } catch (error) {
        console.error('[UNO] Falha ao renderizar carta inicial, usando fallback de texto.', error);
        const corEmoji = { 'vermelho': 'üü•', 'amarelo': 'üü®', 'verde': 'üü©', 'azul': 'üü¶', 'preto': 'üé®' };
        await client.sendMessage(session.groupId, `*O jogo de UNO come√ßou!* üÉè\n\nA primeira carta na mesa √©: *${corEmoji[gameState.corAtual]} ${gameState.cartaAtual.valor}*`);
    }

    // 5. Anuncia os EFEITOS da primeira carta e o pr√≥ximo jogador
    let anuncioEfeitos = '';
    const jogadorInicial = gameState.jogadores[gameState.jogadorDaVezIndex];

    switch (primeiraCarta.valor) {
        case 'pular':
            gameState.jogadorDaVezIndex = (gameState.jogadorDaVezIndex + gameState.sentido + gameState.jogadores.length) % gameState.jogadores.length;
            anuncioEfeitos += `*${jogadorInicial.name}* foi pulado!\n`;
            break;
        case 'reverso':
            gameState.sentido *= -1;
            // Com o sentido invertido, o pr√≥ximo jogador √© o anterior na lista (ou o √∫ltimo se for o primeiro a jogar)
            gameState.jogadorDaVezIndex = (gameState.jogadorDaVezIndex + gameState.sentido + gameState.jogadores.length) % gameState.jogadores.length;
            anuncioEfeitos += `O sentido do jogo foi invertido!\n`;
            break;
        case '+2':
            anuncioEfeitos += `*${jogadorInicial.name}* compra 2 cartas e perde a vez!\n`;
            // A l√≥gica de compra de cartas j√° est√° aqui e n√£o precisa mudar.
            const cartasCompradas = [];
            for (let i = 0; i < 2; i++) {
                if (gameState.baralho.length === 0) await reembaralharPilha(session, client);
                const carta = gameState.baralho.pop();
                jogadorInicial.mao.push(carta);
                cartasCompradas.push(carta);
            }
            if (!jogadorInicial.id.includes('@cpu.bot')) {
                await enviarMaoGrafica(jogadorInicial, client, `O jogo come√ßou e voc√™ j√° comprou 2 cartas!`);
            }
            gameState.jogadorDaVezIndex = (gameState.jogadorDaVezIndex + gameState.sentido + gameState.jogadores.length) % gameState.jogadores.length;
            break;
        case 'curinga':
            if (jogadorInicial.id.includes('@cpu.bot')) {
                const cores = ['vermelho', 'amarelo', 'verde', 'azul'];
                gameState.corAtual = cores[Math.floor(Math.random() * cores.length)];
                anuncioEfeitos += `*${jogadorInicial.name}* (BOT) escolheu a cor *${gameState.corAtual.toUpperCase()}*!\n`;
            } else {
                session.status = 'aguardando_escolha_cor';
                const anuncioCor = `*${jogadorInicial.name}*, voc√™ come√ßa! Use \`!cor <vermelho|azul|verde|amarelo>\` para escolher a cor.`;
                await client.sendMessage(session.groupId, anuncioCor);
                return; // Encerra a fun√ß√£o aqui, pois aguarda a escolha do jogador
            }
            break;
    }

    const jogadorDaVez = gameState.jogadores[gameState.jogadorDaVezIndex];
    anuncioEfeitos += `√â a vez de *${jogadorDaVez.name}* jogar.`;
    await client.sendMessage(session.groupId, anuncioEfeitos);

    // Notifica o jogador da vez no privado
    const dummyDealer = { name: "Dealer" };
    await notificarVezDoJogador(session, client, jogadorDaVez, dummyDealer);

    // Dispara a a√ß√£o do bot se for a vez dele
    if (jogadorDaVez.id.includes('@cpu.bot')) {
        await dispararAcaoBot(session, client);
    }

    if (jogadorDaVez.id.includes('@cpu.bot')) {
        await dispararAcaoBot(session, client);
    }
}

// --- NOVAS FUN√á√ïES ---

async function processarJogada(message, session, client) {
    const { gameState } = session;
    const playerId = message.author || message.from;
    const jogadorAtual = gameState.jogadores[gameState.jogadorDaVezIndex];

    // Valida√ß√µes de turno e carta (aqui n√£o muda)
    if (!jogadorAtual || jogadorAtual.id !== playerId) {
        if (!playerId.includes('@cpu.bot')) { return message.reply("Opa, n√£o √© a sua vez de jogar!"); }
        return;
    }
    const commandArgs = message.body.trim().split(/\s+/);
    const numeroCarta = parseInt(commandArgs[1]);
    if (isNaN(numeroCarta) || numeroCarta < 1 || numeroCarta > jogadorAtual.mao.length) {
        if (!playerId.includes('@cpu.bot')) { return message.reply(`N√∫mero de carta inv√°lido.`); }
        return;
    }
    const indexCarta = numeroCarta - 1;
    const cartaJogada = jogadorAtual.mao[indexCarta];

    // --- NOVA L√ìGICA DE VALIDA√á√ÉO (COM REGRA DE AC√öMULO) ---
    const { efeitoAcumulado } = gameState;
    if (efeitoAcumulado.quantidade > 0) {
        // Se h√° um efeito, o jogador S√ì pode responder com uma carta de mesmo valor
        if (cartaJogada.valor !== efeitoAcumulado.tipo) {
            return message.reply(`Voc√™ deve responder com uma carta *${efeitoAcumulado.tipo}* ou usar \`!comprar\`.`);
        }
    } else {
        // Valida√ß√£o normal, se n√£o houver efeito
        const podeJogar = cartaJogada.cor === 'preto' || cartaJogada.cor === gameState.corAtual || cartaJogada.valor === gameState.cartaAtual.valor;
        if (!podeJogar) {
            if (!playerId.includes('@cpu.bot')) { return message.reply(`Jogada inv√°lida!`); }
            return;
        }
    }
    
    // L√≥gica de Coringa (aqui n√£o muda)
    if (cartaJogada.cor === 'preto') {
        const corEscolhida = commandArgs[2]?.toLowerCase();
        const coresValidas = ['vermelho', 'amarelo', 'verde', 'azul'];
        if (!corEscolhida || !coresValidas.includes(corEscolhida)) {
            return message.reply(`Essa √© uma carta coringa! Use: \`!jogar ${numeroCarta} <cor>\``);
        }
        gameState.corAtual = corEscolhida;
    } else {
        gameState.corAtual = cartaJogada.cor;
    }

    // --- Execu√ß√£o da Jogada e An√∫ncio (aqui n√£o muda) ---
    jogadorAtual.mao.splice(indexCarta, 1);
    gameState.pilhaDescarte.push(cartaJogada);
    gameState.cartaAtual = cartaJogada;

    // NOVO: An√∫ncio da jogada com imagem
    try {
        const tempDir = path.join(__dirname, 'temp');
        if (!fs.existsSync(tempDir)) fs.mkdirSync(tempDir);
        const tempCardPath = path.join(tempDir, `played_card_${Date.now()}.png`);

        await renderizarCartaUnica(cartaJogada, tempCardPath);
        const media = MessageMedia.fromFilePath(tempCardPath);

        let legendaAnuncio = `*${jogadorAtual.name}* jogou:`;
        if (cartaJogada.cor === 'preto') {
            legendaAnuncio += `\nE escolheu a cor *${gameState.corAtual.toUpperCase()}*!`;
        }

        await client.sendMessage(session.groupId, media, { caption: legendaAnuncio });
        fs.unlinkSync(tempCardPath); // Apaga a imagem tempor√°ria

    } catch (error) {
        console.error('[UNO] Falha ao anunciar jogada com imagem, usando fallback de texto.', error);
        const corEmoji = { 'vermelho': 'üü•', 'amarelo': 'üü®', 'verde': 'üü©', 'azul': 'üü¶', 'preto': 'üé®' };
        let anuncioJogada = `*${jogadorAtual.name}* jogou: *${corEmoji[cartaJogada.cor]} ${cartaJogada.valor}*`;
        if (cartaJogada.cor === 'preto') {
            anuncioJogada += ` e escolheu a cor *${gameState.corAtual.toUpperCase()}*!`;
        }
        await client.sendMessage(session.groupId, anuncioJogada);
    }

// Envia a m√£o atualizada para o jogador no privado (l√≥gica inalterada)
if (!jogadorAtual.id.includes('@cpu.bot')) {
    await enviarMaoGrafica(jogadorAtual, client, `Voc√™ jogou a carta. Esta √© sua nova m√£o:`);
}

    // Verifica√ß√£o de vit√≥ria e UNO
    if (jogadorAtual.mao.length === 0) {
        await client.sendMessage(session.groupId, `*FIM DE JOGO!* üèÜ\n*${jogadorAtual.name}* venceu a partida!`);
        sessionManager.endSession(session.groupId);
        return;
    }
    // Adiciona a verifica√ß√£o e o an√∫ncio autom√°tico de UNO
    if (jogadorAtual.mao.length === 1 && !gameState.disseUno.has(playerId)) {
        await client.sendMessage(session.groupId, `UNO! üó£Ô∏è\n*${jogadorAtual.name}* tem apenas uma carta!`);
        gameState.disseUno.add(playerId);
    }


    // --- APLICA√á√ÉO DE EFEITOS (COM REGRA DE REVERSO PARA 2 JOGADORES) ---
    if (cartaJogada.valor === 'reverso') {
        // Apenas inverte o sentido se houver mais de 2 jogadores
        if (gameState.jogadores.length > 2) {
            gameState.sentido *= -1;
            await client.sendMessage(session.groupId, 'O sentido do jogo foi invertido!');
        }
    }
    
    // Se a carta for +2 ou +4, ACUMULA o efeito
    if (cartaJogada.valor === '+2' || cartaJogada.valor === '+4') {
        const eraAcumulado = gameState.efeitoAcumulado.quantidade > 0;
        gameState.efeitoAcumulado.tipo = cartaJogada.valor;
        gameState.efeitoAcumulado.quantidade += (cartaJogada.valor === '+2' ? 2 : 4);
        if (eraAcumulado) {
            await client.sendMessage(session.groupId, `üí• Efeito acumulado! Pr√≥ximo jogador deve comprar *${gameState.efeitoAcumulado.quantidade}* ou responder com outra carta *${cartaJogada.valor}*!`);
        }
    }

    // Define se a pr√≥xima jogada deve pular um turno.
    // Isso acontece se a carta for 'pular' OU se for 'reverso' com apenas 2 jogadores.
    const devePular = cartaJogada.valor === 'pular' || (cartaJogada.valor === 'reverso' && gameState.jogadores.length === 2);
    
    // Chama a fun√ß√£o de avan√ßar o turno, informando se deve pular ou n√£o.
    await avancarTurno(session, client, devePular);
}

async function notificarVezDoJogador(session, client, jogadorDaVez, jogadorAnterior) {
    if (jogadorDaVez.id.includes('@cpu.bot')) return;

    const { gameState } = session;
    const corEmoji = { 'vermelho': 'üü•', 'amarelo': 'üü®', 'verde': 'üü©', 'azul': 'üü¶', 'preto': 'üé®' };
    const sentidoEmoji = gameState.sentido === 1 ? '‚û°Ô∏è' : '‚¨ÖÔ∏è';
    
    let notificacao = `Na mesa: *${corEmoji[gameState.corAtual]} ${gameState.cartaAtual.valor}* (${jogadorAnterior.name}) ${sentidoEmoji}\n` +
                      `*Sua vez!*`;

    // Avisa sobre um efeito acumulado
    if (gameState.efeitoAcumulado.quantidade > 0) {
        notificacao += `\n\n*ATEN√á√ÉO!* Voc√™ deve jogar uma carta *${gameState.efeitoAcumulado.tipo}* ou usar \`!comprar\` para pegar *${gameState.efeitoAcumulado.quantidade}* cartas.`;
    }
    
    let commandLine = `\`!jogar <n√∫mero>\` | \`!comprar\``;
    // Mostra a op√ß√£o de passar apenas se o jogador j√° comprou
    if (gameState.comprouNestaRodada) {
        commandLine += ` | \`!passar\``;
    }
    notificacao += `\n---\n${commandLine}`;
    
    await client.sendMessage(jogadorDaVez.id, notificacao);
}

async function avancarTurno(session, client, pularProximo = false) {
    const { gameState } = session;
    const jogadorAnterior = gameState.jogadores[gameState.jogadorDaVezIndex];

    gameState.comprouNestaRodada = false;

    let proximoIndex = (gameState.jogadorDaVezIndex + gameState.sentido + gameState.jogadores.length) % gameState.jogadores.length;

    // Se a jogada anterior exige um pulo, avan√ßa mais uma vez
    if (pularProximo) {
        const jogadorPulado = gameState.jogadores[proximoIndex];
        console.log(`[UNO] A√ß√£o pulou o turno de ${jogadorPulado.name}`);
        proximoIndex = (proximoIndex + gameState.sentido + gameState.jogadores.length) % gameState.jogadores.length;
    }

    gameState.jogadorDaVezIndex = proximoIndex;
    
    const jogadorDaVez = gameState.jogadores[gameState.jogadorDaVezIndex];
    
    await client.sendMessage(session.groupId, `√â a vez de *${jogadorDaVez.name}*.`);
    await notificarVezDoJogador(session, client, jogadorDaVez, jogadorAnterior);

    if (jogadorDaVez.id.includes('@cpu.bot')) {
        await dispararAcaoBot(session, client);
    }
}

/**
 * Dispara a a√ß√£o do bot ap√≥s um breve delay.
 * @param {object} session - A sess√£o do jogo.
 * @param {object} client - O cliente do WhatsApp.
 */
async function dispararAcaoBot(session, client) {
    const { gameState } = session;
    const botId = gameState.jogadores[gameState.jogadorDaVezIndex].id;
    const botObject = gameState.jogadores.find(j => j.id === botId);

    await new Promise(resolve => setTimeout(resolve, 2000)); 
    
    const comando = botPlayer.decideAction(gameState, botObject.mao);
    
    const fakeMessage = {
        author: botId,
        body: comando,
        reply: (text) => client.sendMessage(session.groupId, `ü§ñ ${botObject.name}: ${text}`)
    };

    if (comando.startsWith('!jogar')) {
        await processarJogada(fakeMessage, session, client);
    } else if (comando === '!comprar') { // <-- L√ìGICA ATUALIZADA
        await processarCompra(fakeMessage, session, client); 
    }
}

async function reembaralharPilha(session, client) {
    const { gameState } = session;
    await client.sendMessage(session.groupId, "O baralho acabou! Reembaralhando as cartas da mesa...  shuffling");
    
    const cartasParaEmbaralhar = gameState.pilhaDescarte.slice(0, -1);
    gameState.pilhaDescarte = [gameState.cartaAtual];
    gameState.baralho = cartasParaEmbaralhar;

    for (let i = gameState.baralho.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [gameState.baralho[i], gameState.baralho[j]] = [gameState.baralho[j], gameState.baralho[i]];
    }
}

async function processarEscolhaDeCor(message, session, client) {
    const { gameState } = session;
    const playerId = message.author || message.from;
    const jogadorAtual = gameState.jogadores[gameState.jogadorDaVezIndex];

    if (session.status !== 'aguardando_escolha_cor') return;
    if (jogadorAtual.id !== playerId) return message.reply("N√£o √© sua vez de escolher a cor!");

    const corEscolhida = message.body.split(' ')[1]?.toLowerCase();
    const coresValidas = ['vermelho', 'azul', 'verde', 'amarelo'];
    if (!coresValidas.includes(corEscolhida)) {
        return message.reply(`Cor inv√°lida! Escolha entre: ${coresValidas.join(', ')}.`);
    }

    gameState.corAtual = corEscolhida;
    session.status = 'em_jogo';

    const corEmoji = { 'vermelho': 'üü•', 'amarelo': 'üü®', 'verde': 'üü©', 'azul': 'üü¶' };
    const msgGrupo = `*${jogadorAtual.name}* escolheu a cor *${corEmoji[corEscolhida]} ${corEscolhida.toUpperCase()}*!`;
    await client.sendMessage(session.groupId, msgGrupo);

    // <<< MENSAGEM DE FEEDBACK ADICIONADA >>>
    // Envia a confirma√ß√£o tamb√©m no privado do jogador.
    if (!jogadorAtual.id.includes('@cpu.bot')) {
        await client.sendMessage(jogadorAtual.id, `‚úÖ Cor definida para *${corEscolhida.toUpperCase()}*!`);
    }

    gameState.disseUno.delete(playerId);

    const ultimaCarta = gameState.cartaAtual;
    const devePular = cartaJogada.valor === 'pular';
    await avancarTurno(session, client, devePular);
}

async function processarCompra(message, session, client) {
    const { gameState } = session;
    const playerId = message.author || message.from;
    const jogadorAtual = gameState.jogadores[gameState.jogadorDaVezIndex];

    if (jogadorAtual.id !== playerId) return;

    // Se existe um efeito acumulado, a compra √© FOR√áADA
    if (gameState.efeitoAcumulado.quantidade > 0) {
        const { quantidade, tipo } = gameState.efeitoAcumulado;
        const cartasCompradas = [];

        await client.sendMessage(session.groupId, `*${jogadorAtual.name}* n√£o tinha uma carta *${tipo}* e comprou *${quantidade}* cartas!`);
        for (let i = 0; i < quantidade; i++) {
            if (gameState.baralho.length === 0) await reembaralharPilha(session, client);
            const carta = gameState.baralho.pop();
            jogadorAtual.mao.push(carta);
            cartasCompradas.push(carta);
        }
        
        if (!jogadorAtual.id.includes('@cpu.bot')) {
            const legenda = `Voc√™ comprou ${cartasCompradas.length} cartas. Esta √© sua nova m√£o:`;
            await enviarMaoGrafica(jogadorAtual, client, legenda);
        }

        // Zera o efeito e passa a vez (jogador que compra perde a vez)
        gameState.efeitoAcumulado = { tipo: null, quantidade: 0 };
        await avancarTurno(session, client);

    } else { // Se n√£o, a compra √© VOLUNT√ÅRIA
        if (gameState.comprouNestaRodada) {
            return message.reply("Voc√™ j√° comprou uma carta nesta rodada.");
        }
        if (gameState.baralho.length === 0) await reembaralharPilha(session, client);
        
        const cartaComprada = gameState.baralho.pop();
        jogadorAtual.mao.push(cartaComprada);
        gameState.comprouNestaRodada = true;
        gameState.disseUno.delete(playerId);

        await client.sendMessage(session.groupId, `*${jogadorAtual.name}* comprou uma carta.`);

        if (jogadorAtual.id.includes('@cpu.bot')) {
            // O bot verifica se a carta comprada pode ser jogada
            const podeJogar = cartaComprada.cor === 'preto' || cartaComprada.cor === gameState.corAtual || cartaComprada.valor === gameState.cartaAtual.valor;
            
            await new Promise(resolve => setTimeout(resolve, 1500)); // Pequena pausa para o bot "pensar"

            if (podeJogar) {
                const numeroDaCarta = jogadorAtual.mao.length; // A carta comprada √© sempre a √∫ltima
                
                let comandoBot = `!jogar ${numeroDaCarta}`;
                // Se a carta for coringa, o bot escolhe uma cor
                if (cartaComprada.cor === 'preto') {
                    const cores = ['vermelho', 'amarelo', 'verde', 'azul'];
                    const corAleatoria = cores[Math.floor(Math.random() * cores.length)];
                    comandoBot += ` ${corAleatoria}`;
                }
                
                const fakeMessageJogar = { author: playerId, body: comandoBot, reply: () => {} };
                await processarJogada(fakeMessageJogar, session, client);

            } else {
                // Se n√£o pode jogar a carta, o bot agora sabe que deve passar a vez
                console.log(`[UnoBot] Carta comprada (${cartaComprada.cor} ${cartaComprada.valor}) n√£o √© jog√°vel. O bot vai passar a vez.`);
                const fakeMessagePassar = { author: playerId, body: '!passar', reply: () => {} };
                await processarPasse(fakeMessagePassar, session, client);
            }
        } else { // Jogador humano
            const legenda = `Voc√™ comprou uma carta. Esta √© sua nova m√£o:`;
            await enviarMaoGrafica(jogadorAtual, client, legenda);

            // --- IN√çCIO DA ALTERA√á√ÉO ---
            // Envia a notifica√ß√£o de a√ß√£o logo em seguida.
            const notificacaoAcao = `*Sua vez!*\n---\n\`!jogar <n√∫mero>\` | \`!passar\``;
            await client.sendMessage(jogadorAtual.id, notificacaoAcao);
            // --- FIM DA ALTERA√á√ÉO ---
        }
    }
}

async function processarPasse(message, session, client) {
    const { gameState } = session;
    const playerId = message.author || message.from;
    const jogadorAtual = gameState.jogadores[gameState.jogadorDaVezIndex];

    // Valida se √© o jogador correto
    if (!jogadorAtual || jogadorAtual.id !== playerId) {
        return message.reply("Opa, n√£o √© a sua vez de jogar!");
    }

    // Valida se o jogador comprou uma carta nesta rodada para poder passar
    if (!gameState.comprouNestaRodada) {
        return message.reply("Voc√™ s√≥ pode passar a vez depois de ter comprado uma carta.");
    }

    // Se a valida√ß√£o passar, anuncia e avan√ßa o turno
    await client.sendMessage(session.groupId, `*${jogadorAtual.name}* passou a vez.`);
    await avancarTurno(session, client);
}

async function enviarMaoGrafica(jogador, client, legenda = '') {
    if (jogador.id.includes('@cpu.bot')) {
        // N√£o envia imagem para o bot, apenas loga no console
        console.log(`[UNO] M√£o do Bot ${jogador.name}:`, jogador.mao.map(c => `${c.cor} ${c.valor}`).join(', '));
        return;
    }

    // Define um caminho √∫nico para a imagem de cada jogador
    const tempDir = path.join(__dirname, 'temp');
    if (!fs.existsSync(tempDir)) fs.mkdirSync(tempDir);
    const outputPath = path.join(tempDir, `${jogador.id}.png`);

    try {
        // Chama a fun√ß√£o de renderiza√ß√£o
        const imagePath = await renderizarMao(jogador.mao, outputPath);

        if (imagePath) {
            const media = MessageMedia.fromFilePath(imagePath);
            await client.sendMessage(jogador.id, media, { caption: legenda || 'Sua m√£o atual:' });

            // Apaga a imagem tempor√°ria ap√≥s o envio
            fs.unlinkSync(imagePath);
        } else if (jogador.mao.length === 0) {
             await client.sendMessage(jogador.id, 'Voc√™ n√£o tem mais cartas!');
        }
    } catch (error) {
        console.error('[UNO] Erro ao renderizar ou enviar imagem da m√£o:', error);
        // Fallback: se a imagem falhar, envia a vers√£o em texto
        await client.sendMessage(jogador.id, formatarMaoJogador(jogador.mao, null));
    }
}

module.exports = { 
    prepararJogo, 
    iniciarPartida, 
    processarJogada,
    processarEscolhaDeCor,
    processarCompra,
    processarPasse
};// games/Uno/imageRendererUno.js
const { createCanvas, loadImage, registerFont } = require('canvas');
const fs = require('fs');
const path = require('path');

// ALTERADO: Tenta registrar a fonte Inter-Bold
try {
    registerFont(path.join(__dirname, 'assets', 'Inter-Bold.ttf'), { family: 'Inter Bold' });
} catch (e) {
    console.log("[ImageRendererUno] Fonte 'Inter-Bold.ttf' n√£o encontrada, usando 'sans-serif'.");
}

// --- ESTRUTURA DE ASSETS REVISADA (sem altera√ß√µes aqui) ---
const baseAssetMap = {
    'vermelho': path.join(__dirname, 'assets', 'red.png'),
    'amarelo': path.join(__dirname, 'assets', 'yellow.png'),
    'verde': path.join(__dirname, 'assets', 'green.png'),
    'azul': path.join(__dirname, 'assets', 'blue.png'),
    'curinga': path.join(__dirname, 'assets', 'curinga.png'),
    '+4': path.join(__dirname, 'assets', '4+.png'),
};
const iconAssetMap = {
    'reverso': path.join(__dirname, 'assets', 'reverse.png'),
    'pular': path.join(__dirname, 'assets', 'block.png'),
};


// --- Fun√ß√µes de Desenho (COM ALTERA√á√ïES) ---

/**
 * Desenha o n√∫mero do √≠ndice da carta (para o comando !jogar)
 */
function desenharNumeroIndice(ctx, numero, x, y) {
    ctx.font = '60px "Inter Bold", sans-serif';
    ctx.textAlign = 'center';
    ctx.textBaseline = 'middle';
    ctx.fillStyle = 'white';
    ctx.fillText(numero, x, y);
}

/**
 * Desenha o texto principal da carta (n√∫mero ou +2)
 */
function desenharTextoPrincipal(ctx, texto, x, y) {
    // ALTERADO: Fonte Inter e sem stroke
    ctx.font = 'bold 72px "Inter Bold", sans-serif';
    ctx.textAlign = 'center';
    ctx.textBaseline = 'middle';
    ctx.fillStyle = 'white';
    ctx.fillText(texto, x, y);
}

// --- Fun√ß√µes de Renderiza√ß√£o (sem altera√ß√µes na l√≥gica interna, herdam o novo estilo) ---

async function renderizarMao(mao, outputPath) {
    if (!mao || mao.length === 0) return null;

    const LARGURA_CARTA = 240;
    const ALTURA_CARTA = 372;
    const CARTAS_POR_LINHA = 7;
    const ESPACAMENTO_HORIZONTAL = 20;
    const ESPACAMENTO_VERTICAL = 60; // Mant√©m espa√ßo para o n√∫mero maior
    const PADDING_LATERAL = 25;
    const PADDING_VERTICAL = 25;

    const numLinhas = Math.ceil(mao.length / CARTAS_POR_LINHA);
    const numCartasNaLinhaMaisLonga = Math.min(mao.length, CARTAS_POR_LINHA);

    const larguraTotal = (PADDING_LATERAL * 2) + (numCartasNaLinhaMaisLonga * LARGURA_CARTA) + ((numCartasNaLinhaMaisLonga - 1) * ESPACAMENTO_HORIZONTAL);
    const alturaTotal = (PADDING_VERTICAL * 2) + (numLinhas * ALTURA_CARTA) + ((numLinhas - 1) * ESPACAMENTO_VERTICAL);

    const canvas = createCanvas(larguraTotal, alturaTotal);
    const ctx = canvas.getContext('2d');

    ctx.fillStyle = '#006400';
    ctx.fillRect(0, 0, larguraTotal, alturaTotal);

    const moldesCarregados = {};
    const todosAssets = { ...baseAssetMap, ...iconAssetMap };
    for (const key in todosAssets) {
        if (fs.existsSync(todosAssets[key])) {
            moldesCarregados[key] = await loadImage(todosAssets[key]);
        }
    }

    for (let i = 0; i < mao.length; i++) {
        const carta = mao[i];
        const linha = Math.floor(i / CARTAS_POR_LINHA);
        const coluna = i % CARTAS_POR_LINHA;
        const x = PADDING_LATERAL + coluna * (LARGURA_CARTA + ESPACAMENTO_HORIZONTAL);
        const y = PADDING_VERTICAL + ESPACAMENTO_VERTICAL + linha * (ALTURA_CARTA + ESPACAMENTO_VERTICAL);

        desenharNumeroIndice(ctx, (i + 1).toString(), x + LARGURA_CARTA / 2, y - (ESPACAMENTO_VERTICAL / 2));
        
        let baseKey = carta.cor;
        if (baseAssetMap[carta.valor]) {
             baseKey = carta.valor;
        }
        const baseMolde = moldesCarregados[baseKey];
        if (baseMolde) {
            ctx.drawImage(baseMolde, x, y, LARGURA_CARTA, ALTURA_CARTA);
        }

        if (iconAssetMap[carta.valor]) {
            const iconMolde = moldesCarregados[carta.valor];
            if (iconMolde) {
                const iconX = x + (LARGURA_CARTA - iconMolde.width) / 2;
                const iconY = y + (ALTURA_CARTA - iconMolde.height) / 2;
                ctx.drawImage(iconMolde, iconX, iconY);
            }
        }

        const temDesignProprio = ['curinga', '+4', 'reverso', 'pular'].includes(carta.valor);
        if (!temDesignProprio) {
            desenharTextoPrincipal(ctx, carta.valor, x + LARGURA_CARTA / 2, y + ALTURA_CARTA / 2);
        }
    }

    const buffer = canvas.toBuffer('image/png');
    fs.writeFileSync(outputPath, buffer);
    console.log(`[ImageRendererUno] Imagem da m√£o salva em: ${outputPath}`);
    return outputPath;
}

async function renderizarCartaUnica(carta, outputPath) {
    const LARGURA_CARTA = 240;
    const ALTURA_CARTA = 372;
    const canvas = createCanvas(LARGURA_CARTA, ALTURA_CARTA);
    const ctx = canvas.getContext('2d');

    let baseKey = carta.cor;
    if (baseAssetMap[carta.valor]) {
        baseKey = carta.valor;
    }
    const baseMolde = await loadImage(baseAssetMap[baseKey]);
    ctx.drawImage(baseMolde, 0, 0, LARGURA_CARTA, ALTURA_CARTA);

    if (iconAssetMap[carta.valor]) {
        const iconMolde = await loadImage(iconAssetMap[carta.valor]);
        const iconX = (LARGURA_CARTA - iconMolde.width) / 2;
        const iconY = (ALTURA_CARTA - iconMolde.height) / 2;
        ctx.drawImage(iconMolde, iconX, iconY);
    }
    
    const temDesignProprio = ['curinga', '+4', 'reverso', 'pular'].includes(carta.valor);
    if (!temDesignProprio) {
        desenharTextoPrincipal(ctx, carta.valor, LARGURA_CARTA / 2, ALTURA_CARTA / 2);
    }
    
    const buffer = canvas.toBuffer('image/png');
    fs.writeFileSync(outputPath, buffer);
    return outputPath;
}

module.exports = { renderizarMao, renderizarCartaUnica };// games/Uno/playerActions.js

const uno = require('./uno');

async function handleGameCommand(message, session, client) {
    const command = message.body.split(' ')[0].toLowerCase();

    // Direciona o comando para a fun√ß√£o de l√≥gica apropriada
    switch (command) {
        case '!jogar':
            await uno.processarJogada(message, session, client);
            break;

        case '!cor':
            await uno.processarEscolhaDeCor(message, session, client);
            break;
        
        case '!comprar':
            await uno.processarCompra(message, session, client);
            break;
        
        case '!passa':
        case '!passar':
            await uno.processarPasse(message, session, client);
            break;
    }
}

module.exports = {
    handleGameCommand
};// games/Uno/botPlayer.js

const BOT_ID = 'bot_uno@cpu.bot';
const BOT_NAME = 'BOT Unildo';

/**
 * Cria um objeto de jogador para o bot.
 */
function createBotPlayer() {
    console.log(`[UnoBot] Criando jogador bot: ${BOT_NAME}`);
    return { id: BOT_ID, name: BOT_NAME };
}

function decideAction(gameState, maoDoBot) {
    const { cartaAtual, corAtual, efeitoAcumulado } = gameState;

    // --- L√ìGICA DE PRIORIDADE: Responder a um efeito acumulado ---
    if (efeitoAcumulado.quantidade > 0) {
        const cartaParaRebaterIndex = maoDoBot.findIndex(c => c.valor === efeitoAcumulado.tipo);

        if (cartaParaRebaterIndex !== -1) {
            // Encontrou uma carta para rebater o efeito!
            const numeroCarta = cartaParaRebaterIndex + 1;
            let comando = `!jogar ${numeroCarta}`;
            
            // Se a carta de resposta for um coringa, escolhe uma cor aleat√≥ria
            if (maoDoBot[cartaParaRebaterIndex].cor === 'preto') {
                 const cores = ['vermelho', 'amarelo', 'verde', 'azul'];
                 const corAleatoria = cores[Math.floor(Math.random() * cores.length)];
                 comando += ` ${corAleatoria}`;
            }
            console.log(`[UnoBot] Rebatendo com ${efeitoAcumulado.tipo}! Decis√£o: ${comando}`);
            return comando;

        } else {
            // N√£o tem como rebater, a √∫nica decis√£o √© comprar.
            console.log(`[UnoBot] N√£o pode rebater ${efeitoAcumulado.tipo}. Decis√£o: !comprar`);
            return '!comprar';
        }
    }
    // --- FIM DA L√ìGICA DE PRIORIDADE ---

    // A l√≥gica de jogada normal s√≥ executa se n√£o houver efeito acumulado.
    const jogadasPossiveis = [];
    maoDoBot.forEach((carta, index) => {
        const podeJogar = (
            carta.cor === 'preto' ||
            carta.cor === corAtual ||
            carta.valor === cartaAtual.valor
        );
        
        if (podeJogar) {
            if (carta.cor === 'preto') {
                const cores = ['vermelho', 'amarelo', 'verde', 'azul'];
                const corAleatoria = cores[Math.floor(Math.random() * cores.length)];
                jogadasPossiveis.push(`!jogar ${index + 1} ${corAleatoria}`);
            } else {
                jogadasPossiveis.push(`!jogar ${index + 1}`);
            }
        }
    });

    if (jogadasPossiveis.length > 0) {
        const jogadaAleatoria = jogadasPossiveis[Math.floor(Math.random() * jogadasPossiveis.length)];
        console.log(`[UnoBot] Decis√£o do bot: ${jogadaAleatoria}`);
        return jogadaAleatoria;
    }

    console.log('[UnoBot] Decis√£o do bot: !comprar');
    return '!comprar';
}

module.exports = { createBotPlayer, decideAction, BOT_ID, BOT_NAME };// games/Velha/imageRenderer.js

const { createCanvas } = require('canvas');
const fs = require('fs');
const path = require('path');

/**
 * Renders the Tic-Tac-Toe board state as a PNG image with improvements.
 * - Features a more solid grid.
 * - Watermarks for coordinates only appear on empty cells.
 * @param {Array<Object>} historicoDeJogadas - An array of move objects, e.g., [{ posicao: 'a1', simbolo: '‚ùå' }]
 * @returns {Promise<string>} The file path to the generated image.
 */
async function renderizarVelha(historicoDeJogadas, posicaoParaDestacar = null, linhaVencedora = null) {
    const width = 300;
    const height = 300;
    const canvas = createCanvas(width, height);
    const ctx = canvas.getContext('2d');

    // ... (o c√≥digo para desenhar fundo, grid, pe√ßas e o destaque amarelo continua igual) ...
    ctx.fillStyle = '#FFFFFF';
    ctx.fillRect(0, 0, width, height);
    ctx.strokeStyle = '#333333';
    ctx.lineWidth = 10;
    ctx.lineCap = 'round';
    ctx.beginPath();
    ctx.moveTo(100, 20); ctx.lineTo(100, 280);
    ctx.moveTo(200, 20); ctx.lineTo(200, 280);
    ctx.moveTo(20, 100); ctx.lineTo(280, 100);
    ctx.moveTo(20, 200); ctx.lineTo(280, 200);
    ctx.stroke();

    const jogadasFeitas = new Map(historicoDeJogadas.map(j => [j.posicao, j.simbolo]));
    const todasPosicoes = ['a1', 'a2', 'a3', 'b1', 'b2', 'b3', 'c1', 'c2', 'c3'];

    for (const posicao of todasPosicoes) {
        const col = parseInt(posicao[1]) - 1;
        const row = posicao.charCodeAt(0) - 'a'.charCodeAt(0);
        const x = col * 100 + 50;
        const y = row * 100 + 50;

        if (posicao === posicaoParaDestacar) {
            ctx.fillStyle = 'rgba(255, 235, 59, 0.6)';
            ctx.beginPath();
            ctx.arc(x, y, 45, 0, Math.PI * 2);
            ctx.fill();
        }

        if (jogadasFeitas.has(posicao)) {
            const simbolo = jogadasFeitas.get(posicao);
            ctx.lineWidth = 8;

            if (simbolo === '‚ùå') {
                ctx.strokeStyle = '#D32F2F';
                ctx.beginPath();
                ctx.moveTo(x - 25, y - 25); ctx.lineTo(x + 25, y + 25);
                ctx.moveTo(x + 25, y - 25); ctx.lineTo(x - 25, y + 25);
                ctx.stroke();
            } else { // '‚≠ï'
                ctx.strokeStyle = '#1976D2';
                ctx.beginPath();
                ctx.arc(x, y, 30, 0, Math.PI * 2);
                ctx.stroke();
            }
        } else {
            ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';
            ctx.font = 'bold 32px sans-serif';
            ctx.textAlign = 'center';
            ctx.textBaseline = 'middle';
            ctx.fillText(posicao.toUpperCase(), x, y);
        }
    }


    // --- MELHORIA ADICIONADA: DESENHA A LINHA DA VIT√ìRIA ---
    // Este bloco s√≥ executa se uma linha vencedora for fornecida
    if (linhaVencedora && linhaVencedora.length === 3) {
        const posicoesCoord = {};
        todasPosicoes.forEach(pos => {
            const col = parseInt(pos[1]) - 1;
            const row = pos.charCodeAt(0) - 'a'.charCodeAt(0);
            posicoesCoord[pos] = { x: col * 100 + 50, y: row * 100 + 50 };
        });

        const [startPos, , endPos] = linhaVencedora;
        const startCoords = posicoesCoord[startPos];
        const endCoords = posicoesCoord[endPos];

        ctx.beginPath();
        ctx.moveTo(startCoords.x, startCoords.y);
        ctx.lineTo(endCoords.x, endCoords.y);
        ctx.strokeStyle = '#FFD700'; // Cor de ouro para a linha da vit√≥ria
        ctx.lineWidth = 14;
        ctx.lineCap = 'round';
        ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';
        ctx.shadowBlur = 10;
        ctx.stroke();
    }

    const tempDir = path.join(__dirname, '..', '..', 'temp_images');
    if (!fs.existsSync(tempDir)) fs.mkdirSync(tempDir, { recursive: true });
    const filePath = path.join(tempDir, `velha_${Date.now()}.png`);
    fs.writeFileSync(filePath, canvas.toBuffer('image/png'));
    
    return filePath;
}

module.exports = { renderizarVelha };
// games/Velha/velha.js

const sessionManager = require('../../sessions/sessionManager');
const { MessageMedia } = require('whatsapp-web.js');
const path = require('path');
const fs = require('fs');

// CORRE√á√ÉO 1: Importamos o botPlayer e o imageRenderer no topo do arquivo.
const botPlayer = require('./botPlayer');
const { renderizarVelha } = require('./imageRenderer.js');

const SIMBOLOS = ['‚ùå', '‚≠ï'];
const VITORIAS = [
    ['a1', 'a2', 'a3'], ['b1', 'b2', 'b3'], ['c1', 'c2', 'c3'], // Linhas
    ['a1', 'b1', 'c1'], ['a2', 'b2', 'c2'], ['a3', 'b3', 'c3'], // Colunas
    ['a1', 'b2', 'c3'], ['a3', 'b2', 'c1']  // Diagonais
];

function prepararJogo(session) {
    console.log(`[JogoDaVelha] Preparando jogo para ${session.groupId}`);
    session.gameState = {
        jogadores: [session.players[0].id, session.players[1].id],
        historicoDeJogadas: [],
        vezDoJogador: 0
    };
}

async function montarDisplay(gameState, posicaoParaDestacar, linhaVencedora = null) {
    try {
        // E passa essa informa√ß√£o para o renderizador
        const imagePath = await renderizarVelha(gameState.historicoDeJogadas, posicaoParaDestacar, linhaVencedora);
        const media = MessageMedia.fromFilePath(imagePath);
        fs.unlinkSync(imagePath);
        return media;
    } catch (error) {
        console.error("Erro ao montar display do Jogo da Velha:", error);
        return "‚ùå Desculpe, tive um problema para desenhar o tabuleiro. üò•";
    }
}

function verificarVencedor(gameState) {
    const jogadorAtualId = gameState.jogadores[gameState.vezDoJogador];
    const posicoesDoJogador = new Set(
        gameState.historicoDeJogadas
            .filter(j => j.jogadorId === jogadorAtualId)
            .map(j => j.posicao)
    );

    if (posicoesDoJogador.size < 3) return null;

    // ALTERA√á√ÉO: Agora a fun√ß√£o retorna um objeto com o vencedor E a linha da vit√≥ria
    for (const vitoria of VITORIAS) {
        if (vitoria.every(p => posicoesDoJogador.has(p))) {
            return { vencedor: jogadorAtualId, linha: vitoria };
        }
    }
    return null;
}

// CORRE√á√ÉO 2: A fun√ß√£o 'dispararAcaoBot' agora enxerga o 'botPlayer' importado no topo.
async function dispararAcaoBot(session, client) {
    const comandoBot = botPlayer.decideAction(session);
    if (comandoBot) {
        const fakeMessage = {
            author: botPlayer.BOT_ID,
            body: comandoBot,
            reply: () => {},
        };
        await processarJogada(fakeMessage, session, client);
    }
}

async function processarJogada(message, session, client) {
    // ... (o in√≠cio da fun√ß√£o, com as valida√ß√µes, continua o mesmo) ...
    const { author, body } = message;
    const { gameState } = session;
    const jogadorAtualId = gameState.jogadores[gameState.vezDoJogador];
    const botPlayer = require('./botPlayer');

    if (author === botPlayer.BOT_ID) {
        await new Promise(resolve => setTimeout(resolve, 1500));
    }
    
    if (author !== jogadorAtualId) {
        return message.reply("Calma, n√£o √© a sua vez de jogar!");
    }

    const posicao = body.split(' ')[1]?.toLowerCase();
    const posicoesValidas = /^[a-c][1-3]$/;

    if (!posicao || !posicoesValidas.test(posicao)) {
        return message.reply("Posi√ß√£o inv√°lida. Use o formato `a1`, `b2`, etc.");
    }
    
    const posicaoOcupada = gameState.historicoDeJogadas.some(j => j.posicao === posicao);
    if (posicaoOcupada) {
        return message.reply("Essa posi√ß√£o j√° est√° ocupada! Escolha outra.");
    }
    
    gameState.historicoDeJogadas.push({
        posicao,
        jogadorId: jogadorAtualId,
        simbolo: SIMBOLOS[gameState.vezDoJogador]
    });

    const resultadoVitoria = verificarVencedor(gameState);

    if (resultadoVitoria) {
        const jogadorVencedor = session.players.find(p => p.id === resultadoVitoria.vencedor);
        const legenda = `üèÜ Fim de jogo! *${jogadorVencedor.name}* (${SIMBOLOS[gameState.vezDoJogador]}) venceu!`;
        
        // Passamos a linha da vit√≥ria para a fun√ß√£o de montar o display
        const display = await montarDisplay(gameState, null, resultadoVitoria.linha); 
        await client.sendMessage(session.groupId, display, { caption: legenda });
        
        sessionManager.endSession(session.groupId);
        return;
    }

    // O resto da fun√ß√£o (se n√£o houver vit√≥ria) continua exatamente igual...
    let infoPecaRemovida = null;
    if (gameState.historicoDeJogadas.length > 8) { 
        const jogadaRemovida = gameState.historicoDeJogadas.shift(); 
        infoPecaRemovida = `O tabuleiro encheu! A jogada mais antiga (${jogadaRemovida.simbolo} em ${jogadaRemovida.posicao.toUpperCase()}) foi removida.`;
    }

    let posicaoParaDestacar = null;
    if (gameState.historicoDeJogadas.length === 8) {
        posicaoParaDestacar = gameState.historicoDeJogadas[0].posicao;
    }

    let legenda = '';
    if (infoPecaRemovida) {
        legenda += `${infoPecaRemovida}\n\n`;
    }
    
    gameState.vezDoJogador = (gameState.vezDoJogador + 1) % 2;
    const proximoJogador = session.players.find(p => p.id === gameState.jogadores[gameState.vezDoJogador]);
    legenda += `√â a vez de *${proximoJogador.name}* (${SIMBOLOS[gameState.vezDoJogador]}). Use:\n \`!jogar <posi√ß√£o>\`.`;
    
    const display = await montarDisplay(gameState, posicaoParaDestacar, null);
    await client.sendMessage(session.groupId, display, { caption: legenda });
    
    const proximoJogadorId = gameState.jogadores[gameState.vezDoJogador];
    if (proximoJogadorId === botPlayer.BOT_ID) {
        await dispararAcaoBot(session, client);
    }
}

// CORRE√á√ÉO 3: Exportamos todas as fun√ß√µes necess√°rias
module.exports = { prepararJogo, processarJogada, montarDisplay, dispararAcaoBot };// Em games/Velha/playerActions.js

const jogoDaVelha = require('./velha.js');
const sessionManager = require('../../sessions/sessionManager'); // Importamos o sessionManager

async function handleGameCommand(message, session, client) {
    const command = message.body.split(' ')[0].toLowerCase();

    switch (command) {
        case '!jogar':
        case '!j': // Atalho
            await jogoDaVelha.processarJogada(message, session, client);
            break;
        
        // ADICIONAMOS A L√ìGICA PARA SAIR
        case '!sair':
            if (sessionManager.endSession(session.groupId)) {
                await message.reply('O Jogo da Velha foi encerrado.');
            }
            break;
    }
}

module.exports = { handleGameCommand };// games/Velha/botPlayer.js

const BOT_ID = 'bot_velha@cpu.bot';
const BOT_NAME = 'BOT Velhaco';

/**
 * Cria um objeto de jogador para o bot.
 */
function createBotPlayer() {
    console.log(`[VelhaBot] Criando jogador bot: ${BOT_NAME}`);
    return { id: BOT_ID, name: BOT_NAME };
}

/**
 * Decide a pr√≥xima jogada do bot.
 * @param {object} session - A sess√£o atual do jogo.
 * @returns {string|null} O comando da jogada (ex: "!j a1") ou null se n√£o houver jogada.
 */
function decideAction(session) {
    const { historicoDeJogadas } = session.gameState;
    const todasPosicoes = ['a1', 'a2', 'a3', 'b1', 'b2', 'b3', 'c1', 'c2', 'c3'];

    // Cria um Set com as posi√ß√µes j√° ocupadas para uma verifica√ß√£o r√°pida
    const posicoesOcupadas = new Set(historicoDeJogadas.map(j => j.posicao));

    // Filtra para encontrar todas as posi√ß√µes livres
    let posicoesLivres = todasPosicoes.filter(p => !posicoesOcupadas.has(p));

    // L√≥gica para o modo infinito: se n√£o h√° casas livres, a casa mais antiga fica livre
    if (posicoesLivres.length === 0 && historicoDeJogadas.length >= 9) {
        posicoesLivres.push(historicoDeJogadas[0].posicao);
    }

    // Se existem posi√ß√µes livres, escolhe uma aleatoriamente
    if (posicoesLivres.length > 0) {
        const jogadaAleatoria = posicoesLivres[Math.floor(Math.random() * posicoesLivres.length)];
        const command = `!j ${jogadaAleatoria}`;
        console.log(`[VelhaBot] Decis√£o do bot: ${command}`);
        return command;
    }

    return null; // Caso n√£o haja jogadas poss√≠veis
}

module.exports = { createBotPlayer, decideAction, BOT_ID };